{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/img/Java并发编程/同步器.png","path":"img/Java并发编程/同步器.png","modified":0,"renderable":0},{"_id":"source/img/learn-java-NIO/buffer.png","path":"img/learn-java-NIO/buffer.png","modified":0,"renderable":0},{"_id":"source/img/learn-java-NIO/channel.png","path":"img/learn-java-NIO/channel.png","modified":0,"renderable":0},{"_id":"source/img/learn-java-NIO/pipe.png","path":"img/learn-java-NIO/pipe.png","modified":0,"renderable":0},{"_id":"source/img/learn-java-NIO/selector-channel.png","path":"img/learn-java-NIO/selector-channel.png","modified":0,"renderable":0},{"_id":"source/img/learn-jvm-0/share.png","path":"img/learn-jvm-0/share.png","modified":0,"renderable":0},{"_id":"source/img/learn-jvm-1/ageToOldGenerationHeap.png","path":"img/learn-jvm-1/ageToOldGenerationHeap.png","modified":0,"renderable":0},{"_id":"source/img/learn-jvm-1/ageToOldGenerationMemory.png","path":"img/learn-jvm-1/ageToOldGenerationMemory.png","modified":0,"renderable":0},{"_id":"source/img/learn-jvm-1/allocateToOld.png","path":"img/learn-jvm-1/allocateToOld.png","modified":0,"renderable":0},{"_id":"source/img/learn-jvm-1/allocateToOldGeneration.png","path":"img/learn-jvm-1/allocateToOldGeneration.png","modified":0,"renderable":0},{"_id":"source/img/learn-jvm-1/firstYGC.png","path":"img/learn-jvm-1/firstYGC.png","modified":0,"renderable":0},{"_id":"source/img/learn-jvm-1/maxTenuringThreshold.png","path":"img/learn-jvm-1/maxTenuringThreshold.png","modified":0,"renderable":0},{"_id":"source/img/learn-jvm-4/1.加载.png","path":"img/learn-jvm-4/1.加载.png","modified":0,"renderable":0},{"_id":"source/img/learn-jvm-4/2.验证.png","path":"img/learn-jvm-4/2.验证.png","modified":0,"renderable":0},{"_id":"source/img/learn-jvm-4/3.准备.png","path":"img/learn-jvm-4/3.准备.png","modified":0,"renderable":0},{"_id":"source/img/learn-jvm-4/5.初始化.png","path":"img/learn-jvm-4/5.初始化.png","modified":0,"renderable":0},{"_id":"source/img/learn-jvm-4/4.解析.png","path":"img/learn-jvm-4/4.解析.png","modified":0,"renderable":0},{"_id":"source/img/learn-mq-rabbitMQ/rpc.png","path":"img/learn-mq-rabbitMQ/rpc.png","modified":0,"renderable":0},{"_id":"source/img/markdown/pic.png","path":"img/markdown/pic.png","modified":0,"renderable":0},{"_id":"source/img/me/onepiece.jpg","path":"img/me/onepiece.jpg","modified":0,"renderable":0},{"_id":"source/img/reward/wx_pay.png","path":"img/reward/wx_pay.png","modified":0,"renderable":0},{"_id":"source/img/小算法练习/链表翻转示意图.jpg","path":"img/小算法练习/链表翻转示意图.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"source/img/Java并发编程/可重入锁.png","path":"img/Java并发编程/可重入锁.png","modified":0,"renderable":0},{"_id":"source/img/effective-java-read-note/common-exception.png","path":"img/effective-java-read-note/common-exception.png","modified":0,"renderable":0},{"_id":"source/img/learn-java-NIO/selector.png","path":"img/learn-java-NIO/selector.png","modified":0,"renderable":0},{"_id":"source/img/learn-jvm-0/Hotspot_Architecture.png","path":"img/learn-jvm-0/Hotspot_Architecture.png","modified":0,"renderable":0},{"_id":"source/img/learn-jvm-0/private.png","path":"img/learn-jvm-0/private.png","modified":0,"renderable":0},{"_id":"source/img/learn-mq-rabbitMQ/exchange.png","path":"img/learn-mq-rabbitMQ/exchange.png","modified":0,"renderable":0},{"_id":"source/img/Java并发编程/Java线程状态图.png","path":"img/Java并发编程/Java线程状态图.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"source/img/learn-jvm-2/Duration.png","path":"img/learn-jvm-2/Duration.png","modified":0,"renderable":0},{"_id":"source/img/learn-jvm-2/invoke-stack.png","path":"img/learn-jvm-2/invoke-stack.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"4561f7d77919ddf3dd4e5a68f950a27a5366aaeb","modified":1492941253121},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1492943204198},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1492943204203},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1492943204207},{"_id":"themes/next/.gitignore","hash":"b935cc0e5b099ebd343ca1766e02f65138c13dd0","modified":1492943204223},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1492943204227},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1492943204233},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1492943204238},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1492943204243},{"_id":"themes/next/.travis.yml","hash":"360f38044910e74bf628b0799e19db90718b2cbe","modified":1492943204248},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1492943204253},{"_id":"themes/next/README.en.md","hash":"953873fe2ee79bfc567b16dcdf8f91c1410444f8","modified":1492943204261},{"_id":"themes/next/_config.yml","hash":"01cb745773212107c2f2e5f62a496728685c323c","modified":1492941253208},{"_id":"themes/next/bower.json","hash":"936b9aed1934471bb74cdaacc3fb8031eb01fe23","modified":1492943204280},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1492943204285},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1492943204268},{"_id":"themes/next/package.json","hash":"a5c189d4c4e946e936d3b5e29e2d81ddaf03ff96","modified":1492943205023},{"_id":"source/_posts/Java并发编程--同步.md","hash":"ac1321501f8f81bb11f083b53f1d65433b141c09","modified":1492941253125},{"_id":"source/_posts/effective-java-read-note.md","hash":"82fecee2a730bb7d5c977fffae55cd19d8b685d7","modified":1492941253131},{"_id":"source/_posts/interview-java基础.md","hash":"00810250e724940cee44f33204785b10f59a38f1","modified":1492945147290},{"_id":"source/_posts/interview-数据库.md","hash":"2b207bdb2a11f737c3dc0c9cb854230bf24e1008","modified":1492945032335},{"_id":"source/_posts/learn-java-NIO.md","hash":"c0e9c74ad7ffbf366dc611aa8696193f3cf2a7d9","modified":1492941253135},{"_id":"source/_posts/learn-jvm-0-运行时数据区域.md","hash":"c160bf3734b670cc985873238902a01d384c2bdf","modified":1492941253139},{"_id":"source/_posts/learn-jvm-1-内存分配与回收策略实战.md","hash":"4c62a9323cbb3936dd99b5414e54fa3bd27ff2be","modified":1492941253150},{"_id":"source/_posts/learn-jvm-2-BTrace初探.md","hash":"34f52490747ef8210012f4099ae9951f8207b2bd","modified":1492941253158},{"_id":"source/_posts/learn-jvm-3-垃圾回收.md","hash":"ff7600fcc62d2d1ba3b47a8d6a9714b8e9583884","modified":1492941253162},{"_id":"source/_posts/learn-jvm-4-类加载.md","hash":"83be7155595bfd141da6dc5a12e7a62f626ed11e","modified":1492941253166},{"_id":"source/_posts/learn-mq-rabbitMQ.md","hash":"0b1d57dfa2a6256ede1a957bd9914f7a76b2e88e","modified":1492941253170},{"_id":"source/_posts/learn-oracle.md","hash":"cb5d18814ee63f42641817db2758629410cb6ab0","modified":1492941253174},{"_id":"source/_posts/learn-pl-sql.md","hash":"02e7201bd9f7bac66a6a444350669aca8fdf7a95","modified":1492941253180},{"_id":"source/_posts/markdown.md","hash":"1bb0f044ddf6406c1bea9d5585b092d96222c439","modified":1492941253185},{"_id":"source/_posts/nice-software.md","hash":"5f8a1b29d4bef73351738d3c6b960d05bc001e64","modified":1492941253192},{"_id":"source/_posts/小算法练习.md","hash":"49a5e7f97db0df4750da2572f9843efa18f4dab5","modified":1492941253196},{"_id":"source/about/index.md","hash":"6585653179d6de550bd4877db11685d50c4f4c31","modified":1492941253202},{"_id":"source/categories/index.md","hash":"b2c59ce211fed4d2b2516ae1304007f00248e7ee","modified":1492941253215},{"_id":"source/tags/index.md","hash":"010927e375020c965ba3f5f856574bb0570827fe","modified":1492941253271},{"_id":"themes/next/.git/config","hash":"8e94cc015a498d35202e9fd57e44b3c51e1e5634","modified":1492943204179},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1492943192085},{"_id":"themes/next/.git/index","hash":"0a522adf6dddaa8b8110b6280995bd99ac0dc784","modified":1492943367391},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1492943204147},{"_id":"themes/next/.git/packed-refs","hash":"9edbbea1442602078a0e7f15e4948612a5b35449","modified":1492943204123},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1492943204213},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"4de856de657a27f340f245eb491a1f52ceba1735","modified":1492943204218},{"_id":"themes/next/languages/de.yml","hash":"4be3e7d296d5592e0d111dfa6cbbff02602c972d","modified":1492943204292},{"_id":"themes/next/languages/default.yml","hash":"d912814caac150da1611c96843371a87714e52f9","modified":1492943204298},{"_id":"themes/next/languages/en.yml","hash":"b3ee45143bc014578db6b8ac0573f7c7b143a743","modified":1492943204303},{"_id":"themes/next/languages/fr-FR.yml","hash":"0d5bd8bbbeafb72506124ed35e7509debc753612","modified":1492943204309},{"_id":"themes/next/languages/id.yml","hash":"c0848e93bf33a1333ff232905b6b392b1e056dd1","modified":1492943204315},{"_id":"themes/next/languages/ja.yml","hash":"1a608dc799c0f9c36b626bac6fe3404acb45b86d","modified":1492943204320},{"_id":"themes/next/languages/ko.yml","hash":"5c811514aef401317a9ec38b95679d6d2ef0ad42","modified":1492943204325},{"_id":"themes/next/languages/pt-BR.yml","hash":"cc8b5a67ec87b0d5aec6e253bab67ec3cfe3069c","modified":1492943204331},{"_id":"themes/next/languages/pt.yml","hash":"943475a7d681f37ede579cd62da9c50568ca0f8d","modified":1492943204336},{"_id":"themes/next/languages/ru.yml","hash":"84d41a111e497236b2c1fa16e9b91668a1f37037","modified":1492943204341},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3111ce4cc5f30868b3628f9f805d2aef3b75d1c1","modified":1492943204347},{"_id":"themes/next/languages/zh-hk.yml","hash":"b58c0d85daa4d62b0c9753a59de0739aa0120735","modified":1492943204352},{"_id":"themes/next/languages/zh-tw.yml","hash":"8ce0a32411de111ae39d08e4bc936767dacdeb08","modified":1492943204358},{"_id":"themes/next/layout/_layout.swig","hash":"efa71671290bb4b497d83720282b36482b6b0efb","modified":1492943204369},{"_id":"themes/next/layout/archive.swig","hash":"a1d1e91013baaaeb7deaf35c6d3975971ce38e02","modified":1492943204989},{"_id":"themes/next/layout/category.swig","hash":"be617f098582c4b110935a6d3551f0a8d09fda5a","modified":1492943204994},{"_id":"themes/next/layout/index.swig","hash":"4bf29f44ca9519a005671f2f2a79a48a148b435b","modified":1492943204999},{"_id":"themes/next/layout/page.swig","hash":"0a8783d44db72e134db5e221705c74b4731826c9","modified":1492943205004},{"_id":"themes/next/layout/post.swig","hash":"182a99b1f6db0350106c6bb480fede0bbdb7e40f","modified":1492943205009},{"_id":"themes/next/layout/schedule.swig","hash":"8086f1163b10460258ecbbbe48b057b22bb2f02e","modified":1492943205013},{"_id":"themes/next/layout/tag.swig","hash":"4d891cb52bbd1b584b1c38669968515987e73e12","modified":1492943205018},{"_id":"themes/next/scripts/merge-configs.js","hash":"3ce1be32bb77ee19da25e8dae7dc04e2afc46ca1","modified":1492943205033},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1492943205053},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1492943207644},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1492943207661},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1492943207686},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492943205788},{"_id":"source/backup/NexT/_config.yml","hash":"01cb745773212107c2f2e5f62a496728685c323c","modified":1492941253208},{"_id":"source/img/Java并发编程/同步器.png","hash":"a1abbb723693f22787a27a784e3652d54e360530","modified":1492941253221},{"_id":"source/img/learn-java-NIO/buffer.png","hash":"9ea73b6c6d13fbe43ec6d20291c426705bfdc8e7","modified":1492941253224},{"_id":"source/img/learn-java-NIO/channel.png","hash":"258b2bc6c4d348d7eee37d2a8cb0089478a31f62","modified":1492941253226},{"_id":"source/img/learn-java-NIO/pipe.png","hash":"9ed7025468bd7075aa48e3893f032c895df1016b","modified":1492941253227},{"_id":"source/img/learn-java-NIO/selector-channel.png","hash":"d2019fc0847fad5488c199d4f6bb07a3dceba7ce","modified":1492941253228},{"_id":"source/img/learn-jvm-0/share.png","hash":"ebf2ef4200fb8d19cf3219aee0b00c4be9dbcdaa","modified":1492941253234},{"_id":"source/img/learn-jvm-1/ageToOldGenerationHeap.png","hash":"cf775fbc817d8c9c9d1bdb574c2d0a226e8b4629","modified":1492941253235},{"_id":"source/img/learn-jvm-1/ageToOldGenerationMemory.png","hash":"8b3aaa89fdbd96767f00b7c100d4f45f3c214b54","modified":1492941253236},{"_id":"source/img/learn-jvm-1/allocateToOld.png","hash":"4e8a003ea502d09e6698c63f4276da2e6cded002","modified":1492941253236},{"_id":"source/img/learn-jvm-1/allocateToOldGeneration.png","hash":"be3565b8242998d795ffe87fd23afe3cd0fbd00e","modified":1492941253237},{"_id":"source/img/learn-jvm-1/firstYGC.png","hash":"856feaaa5cc6fc96ddf5433465444e74737ee8f1","modified":1492941253238},{"_id":"source/img/learn-jvm-1/maxTenuringThreshold.png","hash":"400caa8b4d0a36f8e764617f3e5cd7204b555fc5","modified":1492941253239},{"_id":"source/img/learn-jvm-4/1.加载.png","hash":"77f803dbf538a3336ea42d38b155e129ce4e9a87","modified":1492941253247},{"_id":"source/img/learn-jvm-4/2.验证.png","hash":"b93f708729b8122c85eef2aa007e1449209e6649","modified":1492941253248},{"_id":"source/img/learn-jvm-4/3.准备.png","hash":"2e9cf9a7ac382a22e1362dbc09f5ea7632b57872","modified":1492941253249},{"_id":"source/img/learn-jvm-4/5.初始化.png","hash":"3a44d3fa89aa13dc6b2b0f8587a63c0b2d54be6e","modified":1492941253252},{"_id":"source/img/learn-jvm-4/4.解析.png","hash":"7f4fa483f44562b1ba3fc4afde2ffd5c7e6b6fb3","modified":1492941253251},{"_id":"source/img/learn-mq-rabbitMQ/rpc.png","hash":"7faeb8d60e528a9a868ce32a1313e0497da8c593","modified":1492941253254},{"_id":"source/img/markdown/pic.png","hash":"e864248194f0a226c0bebd89595aef3eeae583ea","modified":1492941253255},{"_id":"source/img/me/onepiece.jpg","hash":"ab7df9ed13588f24fc31a3fca1b4b68ffc475ad6","modified":1492941253261},{"_id":"source/img/reward/wx_pay.png","hash":"b32085c8409818457603b98a3b204bbf5b0ac911","modified":1492941253262},{"_id":"source/img/小算法练习/链表翻转示意图.jpg","hash":"f77e281e9436f80eeae3d8ab6f117b7e2fbadaba","modified":1492941253267},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1492943192091},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1492943192097},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1492943192103},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1492943192108},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1492943192115},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1492943192123},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1492943192132},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1492943192135},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1492943192141},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1492943192150},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1492943192155},{"_id":"themes/next/.git/logs/HEAD","hash":"f3d52d74ccc3aa8f04cf8b3aa8988e97861c5b5f","modified":1492943204160},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1492943204361},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1492943204362},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"6d40652784585d263c37b8a3723e43e04b926ca7","modified":1492943204376},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"506feb56e9b1091187d2014742f63a17758df933","modified":1492943204381},{"_id":"themes/next/layout/_macro/post.swig","hash":"3115575c20f7f78734c90faf590f2baea8d08888","modified":1492943204395},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1492943204403},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"e7f58154ac734088372888742e0029ce7c690511","modified":1492943204409},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1492943204414},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5258c03149aa18e9abfeb8de10e435a406d9c924","modified":1492943204421},{"_id":"themes/next/layout/_partials/footer.swig","hash":"683616f4a80796051e2346d80acf838a589450b0","modified":1492943204427},{"_id":"themes/next/layout/_partials/head.swig","hash":"881556e5387d760d7b67c49f4f3c3ccc2240436b","modified":1492943204443},{"_id":"themes/next/layout/_partials/header.swig","hash":"d6bf1d1554d91eaf1bfc40ba8905ae81673e5f45","modified":1492943204460},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1492943204465},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1492943204469},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1492943204474},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1492943204559},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1492943204564},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"53c894e6f3573c662dc4e4f7b5a6f1a32f1a8c94","modified":1492943204589},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1492943204860},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1492943204864},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1492943204883},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1492943204904},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1492943204909},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1492943205064},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1492943205074},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1492943205095},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1492943205105},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1492943205127},{"_id":"themes/next/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1492943205137},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1492943205787},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1492943205795},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1492943205797},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1492943205804},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1492943205810},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1492943205816},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1492943205823},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1492943205829},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1492943205836},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1492943205842},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1492943205844},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1492943205846},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1492943205852},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1492943205858},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1492943205860},{"_id":"source/img/Java并发编程/可重入锁.png","hash":"0875ee63792aa1e800dc0a93c9343b8c42d07f45","modified":1492941253220},{"_id":"source/img/effective-java-read-note/common-exception.png","hash":"5deaa780ed032d2ed6a142e0dc2d8e59c2ffc0fc","modified":1492941253223},{"_id":"source/img/learn-java-NIO/selector.png","hash":"24de64515e4096e7fe63276166f051d3de645a29","modified":1492941253230},{"_id":"source/img/learn-jvm-0/Hotspot_Architecture.png","hash":"20a38a42ef77985780a21664bc95401d09dcfe9b","modified":1492941253231},{"_id":"source/img/learn-jvm-0/private.png","hash":"a348f833ba9e0dd0beee7fe2ca9e3bf2b9e41b38","modified":1492941253233},{"_id":"source/img/learn-mq-rabbitMQ/exchange.png","hash":"222029ad6a0580bee6e102d724fdc05b1d03708c","modified":1492941253253},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492943204571},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492943204571},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492943205561},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492943205562},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492943205580},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492943205757},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1492943205779},{"_id":"source/img/Java并发编程/Java线程状态图.png","hash":"75487a1d1a2c8659ec15376fd18eac7b85d567c1","modified":1492941253218},{"_id":"themes/next/.git/refs/heads/master","hash":"a002d09c60941ad6b48bf89aea2ce9ab03c336a1","modified":1492943204157},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1492943204449},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1492943204454},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b6e4754498b5eeb470e11fd596227552d9070605","modified":1492943204479},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1492943204492},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1492943204497},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1492943204503},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1492943204533},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1492943204538},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1492943204552},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1492943204569},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1492943204577},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1492943204606},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1492943204627},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1492943204632},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1492943204637},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1492943204650},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1492943204662},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"441f1a1b4e2f652d3b975995bd9d44ff4866f057","modified":1492943204667},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1492943204702},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1492943204722},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"e9a0590dafde1046356620dd2b81e83b6b3b0936","modified":1492943204735},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1492943204748},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1492943204782},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1492943204795},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1492943204809},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1492943204819},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1492943204832},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"0399bbdc524ba50930cb6f8e2d5628ff682fc612","modified":1492943204837},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"c75024151fc63220e7d01035d8a1aff9affdecc7","modified":1492943204849},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"de95ec8920d1660680078451008f8bd69f14d082","modified":1492943204855},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1492943204925},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"cc5af2f78f58a1f2d5c064ff7873552303d1503c","modified":1492943204948},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1492943204963},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1492943204977},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1492943205559},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1492943205568},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1492943205579},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1492943205756},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"09534b68bd1a708729b3cfffe17737e3af457757","modified":1492943205767},{"_id":"themes/next/source/css/_variables/base.styl","hash":"dacede1cc110c762e7a5468dc0e34ae1a962d5aa","modified":1492943205778},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1492943205888},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0ec035e20d1f26bf553a79877180ba312bea885c","modified":1492943205922},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1492943205909},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1492943205959},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1492943205941},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1492943205988},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1492943206013},{"_id":"themes/next/source/js/src/post-details.js","hash":"bfaf52b69aad96566aa21b785973441a2555b4ba","modified":1492943206150},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1492943206174},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1492943206203},{"_id":"themes/next/source/js/src/utils.js","hash":"4aceddc2ca32097a9832374da232b6f76af4d5f4","modified":1492943206225},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1492943206356},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1492943206692},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ef4b2877e37d65025a28eea154b33fe66351493c","modified":1492943206707},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1492943206713},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1492943206718},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1492943206869},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1492943206876},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1492943206886},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1492943206892},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1492943206960},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1492943206965},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1492943206970},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1492943206977},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1492943206983},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1492943207072},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1492943207137},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1492943207150},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1492943207157},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1492943207163},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1492943207183},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1492943207198},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1492943207226},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1492943207252},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1492943207281},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1492943207517},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1492943207534},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1492943207602},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1492943207620},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1492943207638},{"_id":"source/img/learn-jvm-2/Duration.png","hash":"3c459b48d810e9f7ce739758cacd88c4998582ff","modified":1492941253243},{"_id":"source/img/learn-jvm-2/invoke-stack.png","hash":"c0aa30f904faa8ff99ae854b8a4b2380ebbd6f7e","modified":1492941253246},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1492943207131},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"f3d52d74ccc3aa8f04cf8b3aa8988e97861c5b5f","modified":1492943204164},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1492943204142},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1492943204915},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1492943204921},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4ba6f2a615693b9b5afc266d9c833697016085fd","modified":1492943205144},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"1dc2ed435e41ca041f43bd9633d5d95139afbb42","modified":1492943205149},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1492943205154},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1492943205159},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1492943205165},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1492943205258},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1492943205403},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1492943205514},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"4998bedff9c84a09a294b8ef36ede2e3644d3528","modified":1492943205520},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1492943205530},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1492943205536},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1492943205550},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1492943205545},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1492943205607},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1492943205617},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1492943205623},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1492943205632},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1492943205641},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1492943205651},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1492943205660},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1492943205689},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1492943205695},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1492943205700},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1492943205703},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1492943205708},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1492943205717},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1492943205722},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1492943205727},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1492943205732},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"c48d4a561d047b3705924949b3ab7b57bee94ecd","modified":1492943205741},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1492943205747},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1492943206162},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"95518d298d3c5c271faec2e4977df9e5dedd5d84","modified":1492943206314},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1492943206350},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1492943206722},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1492943206724},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1492943206726},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1492943206728},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1492943206730},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1492943206732},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1492943206807},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1492943206832},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1492943206861},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1492943206913},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1492943206953},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1492943206989},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1492943206997},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1492943207003},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1492943207474},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1492943207509},{"_id":"themes/next/.git/objects/pack/pack-984c57d21e53e235e6c251b1ea023f7fa04608b4.idx","hash":"3073690eeed63891750ecd6cc85cc3a344266a80","modified":1492943204028},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"524cfca7b6ab135d81ea723d8de06fdf0dbe7e56","modified":1492943206263},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1492943206308},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1492943207059},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1492943207065},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1492943207570},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"f3d52d74ccc3aa8f04cf8b3aa8988e97861c5b5f","modified":1492943204138},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1492943205171},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1492943205176},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1492943205182},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1492943205190},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1492943205196},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1492943205201},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1492943205207},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"b3b783511bbd94af7e941abf8ff411885db7395b","modified":1492943205213},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1492943205218},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1492943205224},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1492943205231},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1492943205239},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1492943205247},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1492943205252},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1492943205264},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1492943205272},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1492943205279},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1492943205284},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"58f9e6aba94733244a87d2ba5966c5a009486509","modified":1492943205294},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1492943205299},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"3d3e0200716ceb276ac755cc400def9c1b437489","modified":1492943205305},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1492943205311},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1492943205316},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1492943205321},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1492943205327},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1492943205336},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a497ea244df7dd97d1b961412b56f94cc4031e23","modified":1492943205342},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1492943205349},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1492943205355},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"ac060861b27b764bc4012fc362a25a332df4045a","modified":1492943205360},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1492943205365},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1492943205375},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1492943205381},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"c9f76d4f6806ef70fa2160c97afa0a0e0ae5373e","modified":1492943205386},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1492943205392},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1492943205398},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1492943205413},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1492943205422},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1492943205431},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1492943205436},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1492943205448},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"e3ad37f2da35e330616a044621ffa50565a20c88","modified":1492943205453},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1492943205459},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1492943205465},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1492943205470},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1492943205477},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1492943205482},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1492943205486},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1492943205492},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1492943205498},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"eb45ee16051624c6e36a274c0a9538e961f10c4d","modified":1492943205504},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1492943205680},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1492943205670},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1492943205711},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1492943206242},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1492943206236},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1492943206249},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1492943206255},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1492943206735},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1492943206737},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1492943206755},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1492943206771},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1492943206777},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1492943206800},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1492943207013},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1492943207021},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1492943207051},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1492943206670},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1492943207437},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1492943207043},{"_id":"themes/next/.git/objects/pack/pack-984c57d21e53e235e6c251b1ea023f7fa04608b4.pack","hash":"21888768676dfeacf6999e614c8e7ffa4a659dc5","modified":1492943204058},{"_id":"public/search.xml","hash":"7fe50f607e1e139c51c9408103ff56880679872b","modified":1492945204100},{"_id":"public/404.html","hash":"db6261415a10ad58dfcf216ce91124a4e379387e","modified":1492945204372},{"_id":"public/about/index.html","hash":"5dddb70d1b17844bf66ca34bd9f47e53cc7ca3ae","modified":1492945204373},{"_id":"public/categories/index.html","hash":"8a9d75be920cca48e62946bd0d8b878b24d4386e","modified":1492945204373},{"_id":"public/tags/index.html","hash":"3a15f66efe1120f207d708048a27b20af0b32e3c","modified":1492945204374},{"_id":"public/archives/page/2/index.html","hash":"eeb6bd308bcb5c16b3faab639929933298fa9646","modified":1492945204374},{"_id":"public/archives/2017/page/2/index.html","hash":"2c1312585b333566b3d7c3f1a61ac841159e61bc","modified":1492945204374},{"_id":"public/archives/2017/02/index.html","hash":"25d304114f71b75e93cd21fbdfeb2f888899ff06","modified":1492945204374},{"_id":"public/archives/2017/03/index.html","hash":"b36c65f42afafc2808931921e6735c62d8d62e79","modified":1492945204374},{"_id":"public/categories/Java/index.html","hash":"50ba3c7bf7557767cc62f27938e8702b926dc478","modified":1492945204374},{"_id":"public/categories/MQ/index.html","hash":"ba203c0380c126d68229d527dfda79a6b3f5b6c6","modified":1492945204374},{"_id":"public/categories/SQL/index.html","hash":"ccf251bce594f47800c9ac50ceffbc3da281eb1d","modified":1492945204374},{"_id":"public/categories/Markdown/index.html","hash":"9751c1936bcae5ac283ab2da2966ad63e1b17876","modified":1492945204374},{"_id":"public/categories/开发环境/index.html","hash":"2830618e758580cb50c0722e46474056dc23154c","modified":1492945204374},{"_id":"public/categories/Algorithm/index.html","hash":"2968b0a568cce7cc62efe5d4ceac296b4f8430c9","modified":1492945204374},{"_id":"public/tags/Java/index.html","hash":"d9462d99a100d647465b246700a9b085c53e3c0a","modified":1492945204374},{"_id":"public/tags/SQL/index.html","hash":"88267f0993b2c06ec3a10b534a470228bee772a3","modified":1492945204374},{"_id":"public/tags/NIO/index.html","hash":"ef1e43f48000ef40983fb05a6076fa31c241e963","modified":1492945204375},{"_id":"public/tags/jvm/index.html","hash":"1b90cd0b17ac4bfb9e277d91c84b97489280330b","modified":1492945204375},{"_id":"public/tags/MQ/index.html","hash":"466f12009712d947dc01e78d7bd9073c8384d76a","modified":1492945204375},{"_id":"public/tags/RabbitMQ/index.html","hash":"e02bf693ed4914cf713d49c3691bc49ea9e0cc54","modified":1492945204375},{"_id":"public/tags/ORACLE/index.html","hash":"bf61f94c4472b68bd81202275b2c5516d17db9aa","modified":1492945204375},{"_id":"public/tags/Markdown/index.html","hash":"8f0444941bc56dacb8674eaba0f474b0809f0530","modified":1492945204375},{"_id":"public/tags/开发环境/index.html","hash":"dad3c91fbf16c33e99ebd287ee55f82ac8a96ae6","modified":1492945204375},{"_id":"public/tags/Algorithm/index.html","hash":"f071d572e284da070c6c10fef4ac5e29b870e4de","modified":1492945204375},{"_id":"public/2017/04/23/interview-数据库/index.html","hash":"a99684d7b8126017617539920adb19a4a4450856","modified":1492945204375},{"_id":"public/2017/04/23/markdown/index.html","hash":"42f9c6a14e52e4b3415051715ffd029db30439df","modified":1492945204375},{"_id":"public/2017/04/23/learn-jvm-3-垃圾回收/index.html","hash":"22454848e9b6f8e03cf8000079f1195c1d287514","modified":1492945204375},{"_id":"public/2017/04/19/learn-jvm-4-类加载/index.html","hash":"9b0d75b161dcf61d048c6a778ab0d2ef006bbd10","modified":1492945204375},{"_id":"public/2017/04/16/learn-mq-rabbitMQ/index.html","hash":"812dc61f41d423628702e3ad23573546e484e274","modified":1492945204375},{"_id":"public/2017/04/12/Java并发编程--同步/index.html","hash":"4d977394b868396a2a869f25557b5f4e049b3397","modified":1492945204376},{"_id":"public/2017/04/09/小算法练习/index.html","hash":"98530b6dbd5bae55aaffc655cb3d52d9840667c4","modified":1492945204376},{"_id":"public/2017/04/08/learn-java-NIO/index.html","hash":"9f263d6a6ec22512e99fac8ff8b43ba17d79d740","modified":1492945204376},{"_id":"public/2017/03/11/learn-jvm-2-BTrace初探/index.html","hash":"157a62dea2ca2ee73a8c2b107a323a4deb59f761","modified":1492945204376},{"_id":"public/2017/03/08/learn-jvm-1-内存分配与回收策略实战/index.html","hash":"a181e6eb824afe839df1cb013ddb0c18a7d3f472","modified":1492945204376},{"_id":"public/2017/03/08/learn-jvm-0-运行时数据区域/index.html","hash":"a6b7ecd798a8f610c8304b01ea617e54c94b95f8","modified":1492945204376},{"_id":"public/2017/03/07/learn-pl-sql/index.html","hash":"4b556dd443d31310fd97022c152bb6343a3deb59","modified":1492945204376},{"_id":"public/2017/02/09/effective-java-read-note/index.html","hash":"8ec92cce32345f3ec4fe4e926fefd001a788a0a0","modified":1492945204376},{"_id":"public/2017/02/08/learn-oracle/index.html","hash":"53d5eb0fb099a51d96cb5ba05ad4ebacdd29a6c9","modified":1492945204376},{"_id":"public/2017/02/06/nice-software/index.html","hash":"368335121a9450b2d664d98d354249e16d497509","modified":1492945204376},{"_id":"public/archives/index.html","hash":"74af0680e1b41ff2d5aaf2fc09e78b06a7b3af4e","modified":1492945204376},{"_id":"public/archives/2017/index.html","hash":"3999aef94feedced83f31a09da5c8361624a416d","modified":1492945204376},{"_id":"public/archives/2017/04/index.html","hash":"49b4794721d9261dbc3e7de8f49a5c9b19fe12fb","modified":1492945204377},{"_id":"public/index.html","hash":"ef72de829f4dc0855fe445f3f05321200b0543f8","modified":1492945204377},{"_id":"public/page/2/index.html","hash":"972832cf9b114dc4e04f58c8e856ae286c1905cd","modified":1492945204377},{"_id":"public/categories/Interview/index.html","hash":"94277417faaef9a185a918b7070b88334b1b44f1","modified":1492945204460},{"_id":"public/tags/Interview/index.html","hash":"0100cad190d03526ad8e78392e7a739c775739e4","modified":1492945204460},{"_id":"public/2017/04/23/interview-java基础/index.html","hash":"308edbbd7938c7c6431555cc00c50ab53f866b96","modified":1492945204460},{"_id":"public/img/Java并发编程/同步器.png","hash":"a1abbb723693f22787a27a784e3652d54e360530","modified":1492945204483},{"_id":"public/img/learn-java-NIO/buffer.png","hash":"9ea73b6c6d13fbe43ec6d20291c426705bfdc8e7","modified":1492945204483},{"_id":"public/img/learn-java-NIO/channel.png","hash":"258b2bc6c4d348d7eee37d2a8cb0089478a31f62","modified":1492945204483},{"_id":"public/img/learn-java-NIO/pipe.png","hash":"9ed7025468bd7075aa48e3893f032c895df1016b","modified":1492945204483},{"_id":"public/img/learn-java-NIO/selector-channel.png","hash":"d2019fc0847fad5488c199d4f6bb07a3dceba7ce","modified":1492945204483},{"_id":"public/img/learn-jvm-0/share.png","hash":"ebf2ef4200fb8d19cf3219aee0b00c4be9dbcdaa","modified":1492945204484},{"_id":"public/img/learn-jvm-1/ageToOldGenerationHeap.png","hash":"cf775fbc817d8c9c9d1bdb574c2d0a226e8b4629","modified":1492945204484},{"_id":"public/img/learn-jvm-1/ageToOldGenerationMemory.png","hash":"8b3aaa89fdbd96767f00b7c100d4f45f3c214b54","modified":1492945204484},{"_id":"public/img/learn-jvm-1/allocateToOld.png","hash":"4e8a003ea502d09e6698c63f4276da2e6cded002","modified":1492945204484},{"_id":"public/img/learn-jvm-1/allocateToOldGeneration.png","hash":"be3565b8242998d795ffe87fd23afe3cd0fbd00e","modified":1492945204484},{"_id":"public/img/learn-jvm-1/firstYGC.png","hash":"856feaaa5cc6fc96ddf5433465444e74737ee8f1","modified":1492945204484},{"_id":"public/img/learn-jvm-1/maxTenuringThreshold.png","hash":"400caa8b4d0a36f8e764617f3e5cd7204b555fc5","modified":1492945204484},{"_id":"public/img/learn-jvm-4/1.加载.png","hash":"77f803dbf538a3336ea42d38b155e129ce4e9a87","modified":1492945204484},{"_id":"public/img/learn-jvm-4/2.验证.png","hash":"b93f708729b8122c85eef2aa007e1449209e6649","modified":1492945204484},{"_id":"public/img/learn-jvm-4/3.准备.png","hash":"2e9cf9a7ac382a22e1362dbc09f5ea7632b57872","modified":1492945204484},{"_id":"public/img/learn-jvm-4/5.初始化.png","hash":"3a44d3fa89aa13dc6b2b0f8587a63c0b2d54be6e","modified":1492945204484},{"_id":"public/img/learn-jvm-4/4.解析.png","hash":"7f4fa483f44562b1ba3fc4afde2ffd5c7e6b6fb3","modified":1492945204484},{"_id":"public/img/learn-mq-rabbitMQ/rpc.png","hash":"7faeb8d60e528a9a868ce32a1313e0497da8c593","modified":1492945204484},{"_id":"public/img/markdown/pic.png","hash":"e864248194f0a226c0bebd89595aef3eeae583ea","modified":1492945204485},{"_id":"public/img/me/onepiece.jpg","hash":"ab7df9ed13588f24fc31a3fca1b4b68ffc475ad6","modified":1492945204485},{"_id":"public/img/reward/wx_pay.png","hash":"b32085c8409818457603b98a3b204bbf5b0ac911","modified":1492945204485},{"_id":"public/img/小算法练习/链表翻转示意图.jpg","hash":"f77e281e9436f80eeae3d8ab6f117b7e2fbadaba","modified":1492945204485},{"_id":"public/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1492945204485},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1492945204485},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1492945204485},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1492945204485},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1492945204485},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1492945204486},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1492945204486},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1492945204486},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1492945204486},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1492945204486},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1492945204486},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1492945204486},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1492945204486},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1492945204486},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1492945204486},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1492945204487},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1492945204487},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1492945204487},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1492945204487},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1492945204487},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1492945204487},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1492945204487},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1492945204487},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1492945204487},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1492945204488},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1492945204488},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1492945204488},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1492945204488},{"_id":"public/img/Java并发编程/可重入锁.png","hash":"0875ee63792aa1e800dc0a93c9343b8c42d07f45","modified":1492945206071},{"_id":"public/img/effective-java-read-note/common-exception.png","hash":"5deaa780ed032d2ed6a142e0dc2d8e59c2ffc0fc","modified":1492945206075},{"_id":"public/img/learn-java-NIO/selector.png","hash":"24de64515e4096e7fe63276166f051d3de645a29","modified":1492945206096},{"_id":"public/img/learn-jvm-0/Hotspot_Architecture.png","hash":"20a38a42ef77985780a21664bc95401d09dcfe9b","modified":1492945206096},{"_id":"public/img/learn-jvm-0/private.png","hash":"a348f833ba9e0dd0beee7fe2ca9e3bf2b9e41b38","modified":1492945206096},{"_id":"public/img/learn-mq-rabbitMQ/exchange.png","hash":"222029ad6a0580bee6e102d724fdc05b1d03708c","modified":1492945206096},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1492945206097},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1492945206097},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1492945206170},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1492945206170},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1492945206170},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1492945206170},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1492945206170},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1492945206170},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1492945206170},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1492945206170},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1492945206171},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1492945206171},{"_id":"public/js/src/utils.js","hash":"2041eae5ac81c392067bfbd1bba4399cb37beea1","modified":1492945206171},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1492945206171},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1492945206171},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"b614b73ba49ca9136fed7c387ee8df72fe65118f","modified":1492945206171},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1492945206171},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1492945206171},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1492945206171},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1492945206171},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1492945206171},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1492945206171},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1492945206171},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1492945206171},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1492945206171},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1492945206171},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1492945206172},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1492945206172},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1492945206172},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1492945206174},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1492945206174},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1492945206174},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1492945206174},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1492945206174},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1492945206174},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1492945206174},{"_id":"public/css/main.css","hash":"38ccf74aa5ffefec5c5a4ad12c94a0c29f34936d","modified":1492945206174},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1492945206174},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1492945206175},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1492945206175},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1492945206175},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1492945206175},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1492945206175},{"_id":"public/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1492945206175},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1492945206175},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1492945206175},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1492945206175},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1492945206175},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1492945206176},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1492945206176},{"_id":"public/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1492945206176},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1492945206176},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1492945206176},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1492945206176},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1492945206176},{"_id":"public/img/Java并发编程/Java线程状态图.png","hash":"75487a1d1a2c8659ec15376fd18eac7b85d567c1","modified":1492945206177},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1492945206177},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1492945206177},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1492945206178},{"_id":"public/img/learn-jvm-2/Duration.png","hash":"3c459b48d810e9f7ce739758cacd88c4998582ff","modified":1492945207307},{"_id":"public/img/learn-jvm-2/invoke-stack.png","hash":"c0aa30f904faa8ff99ae854b8a4b2380ebbd6f7e","modified":1492945207307},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1492945207472}],"Category":[{"name":"Java","_id":"cj1ul0v4k0007gknx908uwnas"},{"name":"Interview","_id":"cj1ul0v52000cgknxgi8t7rl2"},{"name":"MQ","_id":"cj1ul0v5y000wgknx3yhiqqmb"},{"name":"SQL","_id":"cj1ul0v660014gknxq05flw8n"},{"name":"Markdown","_id":"cj1ul0v6n001ggknxnm0xfgwd"},{"name":"开发环境","_id":"cj1ul0v6r001lgknxbqh9gur2"},{"name":"Algorithm","_id":"cj1ul0v6v001qgknx4qc049xx"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>","date":"2017-04-23T10:25:04.022Z","updated":"2017-04-23T09:54:13.121Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cj1ul0urc0000gknxnsw66em5","content":"<!DOCTYPE HTML>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"robots\" content=\"all\">\n    <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"your site url \" homepagename=\"回到我的主页\">\n</script>\n\n</body>\n</html>","excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>"},{"title":"Me","date":"2017-02-06T06:30:01.000Z","_content":"\nJava后端研发一枚\n\nMail: stq_nwpu@163.com\nLocate: Chong qing,China.\n","source":"about/index.md","raw":"---\ntitle: Me\ndate: 2017-02-06 14:30:01\n---\n\nJava后端研发一枚\n\nMail: stq_nwpu@163.com\nLocate: Chong qing,China.\n","updated":"2017-04-23T09:54:13.202Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj1ul0v430002gknxjg0n1w48","content":"<p>Java后端研发一枚</p>\n<p>Mail: stq_nwpu@163.com<br>Locate: Chong qing,China.</p>\n","excerpt":"","more":"<p>Java后端研发一枚</p>\n<p>Mail: stq_nwpu@163.com<br>Locate: Chong qing,China.</p>\n"},{"title":"分类","date":"2014-12-22T04:39:04.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2014-12-22 12:39:04\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-04-23T09:54:13.215Z","path":"categories/index.html","layout":"page","_id":"cj1ul0v4a0004gknx4d6du0u5","content":"","excerpt":"","more":""},{"title":"标签","date":"2014-12-22T04:39:04.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2014-12-22 12:39:04\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-04-23T09:54:13.271Z","path":"tags/index.html","layout":"page","_id":"cj1ul0v4i0006gknxo5p175ny","content":"","excerpt":"","more":""}],"Post":[{"title":"Java并发编程--同步","date":"2017-04-12T00:38:47.000Z","_content":"# 线程基础\n\n## Java线程状态图\n![可重入锁](/img/Java并发编程/Java线程状态图.png)\n[图片出处](https://my.oschina.net/mingdongcheng/blog/139263)\n\n## sleep\n睡眠,放弃CPU使用,让其他线程去竞争CPU时间片.但是会持有锁.\n\n## yield\n让步,放弃CPU使用,自己和其他进程一起参与竞争CPU时间片,会持有锁.\n\n## wait\n释放锁并等待唤醒.如果没有设置等待时间或者,没有线程调用notify或notifyAll,那么该线程会一直在等待队列中.\n\n## notify\n唤醒,唤醒某个等待该锁的线程.即使调用notify方法,也会等该线程退出临界区才释放锁并唤醒某个等待该锁的线程\n\n## notifyAll\n唤醒所有,唤醒所有等待该锁的线程,但是只要一个锁能竞争到锁,进入临界区.\n\n## join\n加入,假如在main线程中，调用thread.join方法，则main方法会等待thread线程执行完毕或者等待一定的时间。\n如果调用的是无参join方法，则等待thread执行完毕，如果调用的是指定了时间参数的join方法，则等待指定的时间.\n\n## interrupt\n中断,调用interrupt方法可以使得处于阻塞状态的线程抛出一个InterruptedException，\n也就说，它可以用来中断一个正处于阻塞状态的线程;非阻塞的线程是无法被中断的.\n另外，通过interrupt方法和isInterrupted()方法来停止正在运行的线程.\n\n## volatile\n保证线程的可见性.使用volatile必须具备以下2个条件：\n    1)对变量的写操作不依赖于当前值.\n    2)该变量没有包含在具有其他变量的不变式中\n\n\n# 可重入锁\n![可重入锁](/img/Java并发编程/可重入锁.png)\n\n# 同步器\n![同步器](/img/Java并发编程/同步器.png)","source":"_posts/Java并发编程--同步.md","raw":"---\ntitle: Java并发编程--同步\ndate: 2017-04-12 08:38:47\ntags:\n---\n# 线程基础\n\n## Java线程状态图\n![可重入锁](/img/Java并发编程/Java线程状态图.png)\n[图片出处](https://my.oschina.net/mingdongcheng/blog/139263)\n\n## sleep\n睡眠,放弃CPU使用,让其他线程去竞争CPU时间片.但是会持有锁.\n\n## yield\n让步,放弃CPU使用,自己和其他进程一起参与竞争CPU时间片,会持有锁.\n\n## wait\n释放锁并等待唤醒.如果没有设置等待时间或者,没有线程调用notify或notifyAll,那么该线程会一直在等待队列中.\n\n## notify\n唤醒,唤醒某个等待该锁的线程.即使调用notify方法,也会等该线程退出临界区才释放锁并唤醒某个等待该锁的线程\n\n## notifyAll\n唤醒所有,唤醒所有等待该锁的线程,但是只要一个锁能竞争到锁,进入临界区.\n\n## join\n加入,假如在main线程中，调用thread.join方法，则main方法会等待thread线程执行完毕或者等待一定的时间。\n如果调用的是无参join方法，则等待thread执行完毕，如果调用的是指定了时间参数的join方法，则等待指定的时间.\n\n## interrupt\n中断,调用interrupt方法可以使得处于阻塞状态的线程抛出一个InterruptedException，\n也就说，它可以用来中断一个正处于阻塞状态的线程;非阻塞的线程是无法被中断的.\n另外，通过interrupt方法和isInterrupted()方法来停止正在运行的线程.\n\n## volatile\n保证线程的可见性.使用volatile必须具备以下2个条件：\n    1)对变量的写操作不依赖于当前值.\n    2)该变量没有包含在具有其他变量的不变式中\n\n\n# 可重入锁\n![可重入锁](/img/Java并发编程/可重入锁.png)\n\n# 同步器\n![同步器](/img/Java并发编程/同步器.png)","slug":"Java并发编程--同步","published":1,"updated":"2017-04-23T09:54:13.125Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v3w0001gknxaa0y3col","content":"<h1 id=\"线程基础\"><a href=\"#线程基础\" class=\"headerlink\" title=\"线程基础\"></a>线程基础</h1><h2 id=\"Java线程状态图\"><a href=\"#Java线程状态图\" class=\"headerlink\" title=\"Java线程状态图\"></a>Java线程状态图</h2><p><img src=\"/img/Java并发编程/Java线程状态图.png\" alt=\"可重入锁\"><br><a href=\"https://my.oschina.net/mingdongcheng/blog/139263\" target=\"_blank\" rel=\"external\">图片出处</a></p>\n<h2 id=\"sleep\"><a href=\"#sleep\" class=\"headerlink\" title=\"sleep\"></a>sleep</h2><p>睡眠,放弃CPU使用,让其他线程去竞争CPU时间片.但是会持有锁.</p>\n<h2 id=\"yield\"><a href=\"#yield\" class=\"headerlink\" title=\"yield\"></a>yield</h2><p>让步,放弃CPU使用,自己和其他进程一起参与竞争CPU时间片,会持有锁.</p>\n<h2 id=\"wait\"><a href=\"#wait\" class=\"headerlink\" title=\"wait\"></a>wait</h2><p>释放锁并等待唤醒.如果没有设置等待时间或者,没有线程调用notify或notifyAll,那么该线程会一直在等待队列中.</p>\n<h2 id=\"notify\"><a href=\"#notify\" class=\"headerlink\" title=\"notify\"></a>notify</h2><p>唤醒,唤醒某个等待该锁的线程.即使调用notify方法,也会等该线程退出临界区才释放锁并唤醒某个等待该锁的线程</p>\n<h2 id=\"notifyAll\"><a href=\"#notifyAll\" class=\"headerlink\" title=\"notifyAll\"></a>notifyAll</h2><p>唤醒所有,唤醒所有等待该锁的线程,但是只要一个锁能竞争到锁,进入临界区.</p>\n<h2 id=\"join\"><a href=\"#join\" class=\"headerlink\" title=\"join\"></a>join</h2><p>加入,假如在main线程中，调用thread.join方法，则main方法会等待thread线程执行完毕或者等待一定的时间。<br>如果调用的是无参join方法，则等待thread执行完毕，如果调用的是指定了时间参数的join方法，则等待指定的时间.</p>\n<h2 id=\"interrupt\"><a href=\"#interrupt\" class=\"headerlink\" title=\"interrupt\"></a>interrupt</h2><p>中断,调用interrupt方法可以使得处于阻塞状态的线程抛出一个InterruptedException，<br>也就说，它可以用来中断一个正处于阻塞状态的线程;非阻塞的线程是无法被中断的.<br>另外，通过interrupt方法和isInterrupted()方法来停止正在运行的线程.</p>\n<h2 id=\"volatile\"><a href=\"#volatile\" class=\"headerlink\" title=\"volatile\"></a>volatile</h2><p>保证线程的可见性.使用volatile必须具备以下2个条件：<br>    1)对变量的写操作不依赖于当前值.<br>    2)该变量没有包含在具有其他变量的不变式中</p>\n<h1 id=\"可重入锁\"><a href=\"#可重入锁\" class=\"headerlink\" title=\"可重入锁\"></a>可重入锁</h1><p><img src=\"/img/Java并发编程/可重入锁.png\" alt=\"可重入锁\"></p>\n<h1 id=\"同步器\"><a href=\"#同步器\" class=\"headerlink\" title=\"同步器\"></a>同步器</h1><p><img src=\"/img/Java并发编程/同步器.png\" alt=\"同步器\"></p>\n","excerpt":"","more":"<h1 id=\"线程基础\"><a href=\"#线程基础\" class=\"headerlink\" title=\"线程基础\"></a>线程基础</h1><h2 id=\"Java线程状态图\"><a href=\"#Java线程状态图\" class=\"headerlink\" title=\"Java线程状态图\"></a>Java线程状态图</h2><p><img src=\"/img/Java并发编程/Java线程状态图.png\" alt=\"可重入锁\"><br><a href=\"https://my.oschina.net/mingdongcheng/blog/139263\">图片出处</a></p>\n<h2 id=\"sleep\"><a href=\"#sleep\" class=\"headerlink\" title=\"sleep\"></a>sleep</h2><p>睡眠,放弃CPU使用,让其他线程去竞争CPU时间片.但是会持有锁.</p>\n<h2 id=\"yield\"><a href=\"#yield\" class=\"headerlink\" title=\"yield\"></a>yield</h2><p>让步,放弃CPU使用,自己和其他进程一起参与竞争CPU时间片,会持有锁.</p>\n<h2 id=\"wait\"><a href=\"#wait\" class=\"headerlink\" title=\"wait\"></a>wait</h2><p>释放锁并等待唤醒.如果没有设置等待时间或者,没有线程调用notify或notifyAll,那么该线程会一直在等待队列中.</p>\n<h2 id=\"notify\"><a href=\"#notify\" class=\"headerlink\" title=\"notify\"></a>notify</h2><p>唤醒,唤醒某个等待该锁的线程.即使调用notify方法,也会等该线程退出临界区才释放锁并唤醒某个等待该锁的线程</p>\n<h2 id=\"notifyAll\"><a href=\"#notifyAll\" class=\"headerlink\" title=\"notifyAll\"></a>notifyAll</h2><p>唤醒所有,唤醒所有等待该锁的线程,但是只要一个锁能竞争到锁,进入临界区.</p>\n<h2 id=\"join\"><a href=\"#join\" class=\"headerlink\" title=\"join\"></a>join</h2><p>加入,假如在main线程中，调用thread.join方法，则main方法会等待thread线程执行完毕或者等待一定的时间。<br>如果调用的是无参join方法，则等待thread执行完毕，如果调用的是指定了时间参数的join方法，则等待指定的时间.</p>\n<h2 id=\"interrupt\"><a href=\"#interrupt\" class=\"headerlink\" title=\"interrupt\"></a>interrupt</h2><p>中断,调用interrupt方法可以使得处于阻塞状态的线程抛出一个InterruptedException，<br>也就说，它可以用来中断一个正处于阻塞状态的线程;非阻塞的线程是无法被中断的.<br>另外，通过interrupt方法和isInterrupted()方法来停止正在运行的线程.</p>\n<h2 id=\"volatile\"><a href=\"#volatile\" class=\"headerlink\" title=\"volatile\"></a>volatile</h2><p>保证线程的可见性.使用volatile必须具备以下2个条件：<br>    1)对变量的写操作不依赖于当前值.<br>    2)该变量没有包含在具有其他变量的不变式中</p>\n<h1 id=\"可重入锁\"><a href=\"#可重入锁\" class=\"headerlink\" title=\"可重入锁\"></a>可重入锁</h1><p><img src=\"/img/Java并发编程/可重入锁.png\" alt=\"可重入锁\"></p>\n<h1 id=\"同步器\"><a href=\"#同步器\" class=\"headerlink\" title=\"同步器\"></a>同步器</h1><p><img src=\"/img/Java并发编程/同步器.png\" alt=\"同步器\"></p>\n"},{"title":"Effective java 读书笔记","date":"2017-02-09T08:41:52.000Z","_content":"\n# 目录\n* chapter02 -  创建和销毁对象\n    * 第1条:考虑用静态工厂方法替代构造器(Factory method)\n    * 第2条:遇到多个构造器参数时,要考虑用构建器(Builder)\n    * 第3条:用私有构造器或者枚举类型强化单例属性(Singleton)\n    * 第4条:通过私有构造器强化不可实例化的能力\n    * 第5条:避免创建不必要的对象\n    * 第6条:消除过期的对象引用\n    * 第7条:避免使用终结方法(finalizer)\n* chapter03 - 对所有对象都通用的方法\n    * 第8条:覆盖equals时请遵守通用约定\n    * 第9条 覆盖equals时总要覆盖hashCode\n    * 第10条 始终要覆盖toString\n    * 第11条 谨慎使用clone\n    * 第12条 考虑实现`Comparable`接口\n* chapter04 - 类和接口\n    * 第13条 使类和成员的可访问性最小化\n    * 第14条 在公有类中使用访问方法而非公有域\n    * 第15条 使可变性最小化\n    * 第16条 复合优先于继承\n    * 第17条 要么为继承而设计，并提供文档说明，要么就禁止继承\n    * 第18条 接口优于抽象类\n    * 第19条 接口只用于定义类型\n    * 第20条 类层次优于标签类\n    * 第21条 用函数对象表示策略\n    * 第22条 优先考虑静态成员类\n* chapter05 - 泛型\n    * 第23条 请不要在新代码中使用原生态类型\n    * 第24条 消除非受检警告\n    * 第25条 列表优先于数组\n    * 第26条 优先考虑泛型\n    * 第27条 优先考虑泛型方法\n    * 第28条 利用有限制通配符来提升API的灵活性\n    * 第29条 优先考虑类型安全的异构容器\n* chapter06 - 枚举和注解\n    * 第30条 用enum代替int常量\n    * 第31条 用实例域代替序数\n    * 第32条 用EnumSet代替位域\n    * 第33条 用EnumMap代替序数索引\n    * 第34条 用接口模拟可伸缩的枚举\n    * 第35条 注解优先于命名模式\n    * 第36条 坚持使用Override注解\n    * 第37条 用标记接口定义类型\n* chapter07 - 方法\n    * 第38条 检查参数的有效性\n    * 第39条 必要时进行保护性拷贝\n    * 第40条 谨慎设计方法签名\n    * 第41条 慎用重载\n    * 第42条 慎用可变参数\n    * 第43条 返回零长度的数组或者集合，而不是null\n    * 第44条 为所有导出的API元素编写文档注释\n* chapter08 - 通用程序设计\n    * 第45条 将局部变量的作用域最小化\n    * 第46条 for-each循环优先于传统的for循环\n    * 第47条 了解和使用类库\n    * 第48条 如果需要精确的答案，请避免使用float和double\n    * 第49条 基本类型优先于装箱基本类型\n    * 第50条 如果其他类型更适合，则尽量避免使用字符串\n    * 第51条 当心字符串连接的性能\n    * 第52条 通过接口引用对象\n    * 第53条 接口优先于反射机制\n    * 第54条 谨慎地使用本地方法\n    * 第55条 谨慎地进行优化\n    * 第56条 遵守普遍接受的命名惯例\n* chapter09 - 异常\n    * 第57条 只针对异常的情况才使用异常\n    * 第58条 对可恢复的情况使用受检异常，对编程错误使用运行时异常\n    * 第59条 避免不必要地使用受检的异常\n    * 第60条 优先使用标准的异常\n    * 第61条 抛出与抽象相对应的异常\n    * 第62条 每个方法抛出的异常都要有文档\n    * 第63条 在细节消息中包含能捕获失败的信息\n    * 第64条 努力使失败保持原子性\n    * 第65条 不要忽略异常\n* chapter10 - 并发\n    * 第66条 同步访问共享的可变数据\n    * 第66条 同步访问共享的可变数据\n    * 第67条 避免过度同步\n    * 第68条 executor和task优先于线程\n    * 第69条 并发工具优先于wait和notify\n    * 第70条 线程安全性的文档化\n    * 第71条 慎用延迟初始化\n    * 第72条 不要依赖于线程调度器\n    * 第73条 避免使用线程组\n* chapter11 - 序列化\n    * 第74条 谨慎地实现Serializable接口\n    * 第75条 考虑使用自定义的序列化形式\n    * 第76条 保护性地编写readObject方法\n    * 第77条 对于实例控制，枚举类型优先于readResolve\n    * 第78条 考虑用序列化代理代替序列化实例\n\n***\n***\n# chapter03 对所有对象都通用的方法\n***\n## 第8条 覆盖equals时请遵守通用约定\n\n### 实现高质量equals方法的诀窍\n* 使用==操作符检查\"参数是否为这个对象的应用\"\n* 使用`instanceof`操作符检查\"参数是否为正确的类型\"\n* 把参数传递转换成正确的类型\n* 对于该类中的每个**关键域**,检查参数中的域是否与该对象中对应域项匹配\n* 写完`equals`方法之后,应该问自己三个问题:它是否对称的,传递的,一致的?(记住`Point(x,y)`和`ColorPoint(x,y,color)`的例子)\n\n### 覆写equals的告诫\n* 覆写`equals`时总要覆写`hashCode`(见第9条)\n* 不要企图让`equals`方法过于智能\n* 不要将`equals`方法参数声明中的`Object`对象替换为其他类型.\n\n### equals示例\n```java\npublic final class PhoneNumber {\n    boolean booleanF;\n    byte byteF;\n    char charF;\n    short shortF;\n    int intf;\n    float floatf;\n    double doublef;\n    Object objectF;\n    Object[] arrayF;\n\n    /*由IDEA自动生成*/\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof MyObject)) return false;\n\n        MyObject myObject = (MyObject) o;\n\n        if (booleanF != myObject.booleanF) return false;\n        if (byteF != myObject.byteF) return false;\n        if (charF != myObject.charF) return false;\n        if (shortF != myObject.shortF) return false;\n        if (intf != myObject.intf) return false;\n        if (Float.compare(myObject.floatf, floatf) != 0) return false;\n        if (Double.compare(myObject.doublef, doublef) != 0) return false;\n        if (!objectF.equals(myObject.objectF)) return false;\n        // Probably incorrect - comparing Object[] arrays with Arrays.equals\n        return Arrays.equals(arrayF, myObject.arrayF);\n    }\n}\n```\n\n***\n## 第9条 覆盖equals时总要覆盖hashCode\n\n### Object规范[JavaSE6]\n* 在应用程序的执行期间,只要对象的`equals`方法的比较操作所用到的信息没有被修改,\n那么对这同一个对象调用多次,`hashCode`方法必须始终如一地返回同一个整数.\n在同一个应用程序的多次执行过程中,每次执行返回的整数可以不一致.\n* 如果两个对象根据`equals`方法比较结果是相等的,那么调用者两个对象中任意对象的\n`hashCode`方法都必须产生同样的整数结果.\n* 如果两个对象根据`equals`方法比较结果是不相等的,那么调用这两个对象任意对象的\n`hashCode`方法,则不一定要产生不同的整数结果.\n**总结**\n```java\nequals等 => hashcode等; equals不等 ≠> hashcode不等\n```\n\n### 覆写hashCode方法的简单办法\n```java\npublic class MyObject {\n    boolean booleanF;\n    byte byteF;\n    char charF;\n    short shortF;\n    int intf;\n    float floatf;\n    double doublef;\n    Object objectF;\n    Object[] arrayF;\n\n    /*由IDEA自动生成,使用Equals中涉及到的每个域*/\n    @Override\n    public int hashCode() {\n        int result;\n        long temp;\n        result = (booleanF ? 1 : 0);\n        result = 31 * result + (int) byteF;\n        result = 31 * result + (int) charF;\n        result = 31 * result + (int) shortF;\n        result = 31 * result + intf;\n        result = 31 * result + (floatf != +0.0f ? Float.floatToIntBits(floatf) : 0);\n        temp = Double.doubleToLongBits(doublef);\n        result = 31 * result + (int) (temp ^ (temp >>> 32));\n        result = 31 * result + objectF.hashCode();\n        result = 31 * result + Arrays.hashCode(arrayF);\n        return result;\n    }\n}\n```\n***\n## 第11条 谨慎使用clone\n### 深拷贝简单例子\n```java\nublic class CloneObject implements Cloneable{\n    Object[] elememts = new Integer[]{1,23,4};\n    Integer anInt = 1;\n    List<String> list = new LinkedList<>(Arrays.asList(\"1\",\"2\"));\n\n    @Override\n    public CloneObject clone() {\n        try {\n            CloneObject clone = (CloneObject) super.clone();\n            clone.anInt = new Integer(this.anInt); //深拷贝\n            clone.elememts = this.elememts.clone();\n            clone.list =(List<String>) ((LinkedList<String>)list).clone(); //浅拷贝\n            for (int i=0; list != null && i<list.size() ; ++i){\n                clone.list.set(i, new String(list.get(i))); //new String对String对象深拷贝.\n            }\n            return clone;\n        } catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n\n    public static void main(String[] args)\n    {\n        CloneObject a = new CloneObject();\n        CloneObject b = a.clone();\n\n        System.out.println(a==b);                           //false\n        System.out.println(a.anInt == b.anInt);             //false\n        System.out.println(a.elememts == b.elememts);       //false\n        System.out.println(a.list == b.list);               //false\n        System.out.println(a.list.get(0) == b.list.get(0)); //false\n    }\n}\n```\n\n\n# chapter04 类和接口\n***\n\n## 第23条 请不要在新代码中使用原生态类型\n```java\n//参数化类型,表示可以包含人和对象类型的集合\n//有受检异常\n List<Object> list = new ArrayList<>();\nlist.add(new String(\"a\"));\nInteger b = list.get(0);//受检异常\n\n//通配符类型,表示只能包含某种位置对象类型的集合\n//有受检异常\n List<Object> list = new ArrayList<>();\nlist.add(new String(\"a\"));//受检异常\n\n//原生态类型,脱离了泛型系统\n//运行时异常\nSet s = new HashSet();\ns.add(new String(\"str\"));\nInteger a = (Integer)list.get(0); //java.lang.ClassCastException\n```\n\n\n# chapter09 异常\n***\n\n## 第60条 优先使用标准的异常\n![常用异常](/img/effective-java-read-note/common-exception.png)","source":"_posts/effective-java-read-note.md","raw":"---\ntitle: Effective java 读书笔记\ndate: 2017-02-09 16:41:52\ntags: Java\ncategories: Java\n---\n\n# 目录\n* chapter02 -  创建和销毁对象\n    * 第1条:考虑用静态工厂方法替代构造器(Factory method)\n    * 第2条:遇到多个构造器参数时,要考虑用构建器(Builder)\n    * 第3条:用私有构造器或者枚举类型强化单例属性(Singleton)\n    * 第4条:通过私有构造器强化不可实例化的能力\n    * 第5条:避免创建不必要的对象\n    * 第6条:消除过期的对象引用\n    * 第7条:避免使用终结方法(finalizer)\n* chapter03 - 对所有对象都通用的方法\n    * 第8条:覆盖equals时请遵守通用约定\n    * 第9条 覆盖equals时总要覆盖hashCode\n    * 第10条 始终要覆盖toString\n    * 第11条 谨慎使用clone\n    * 第12条 考虑实现`Comparable`接口\n* chapter04 - 类和接口\n    * 第13条 使类和成员的可访问性最小化\n    * 第14条 在公有类中使用访问方法而非公有域\n    * 第15条 使可变性最小化\n    * 第16条 复合优先于继承\n    * 第17条 要么为继承而设计，并提供文档说明，要么就禁止继承\n    * 第18条 接口优于抽象类\n    * 第19条 接口只用于定义类型\n    * 第20条 类层次优于标签类\n    * 第21条 用函数对象表示策略\n    * 第22条 优先考虑静态成员类\n* chapter05 - 泛型\n    * 第23条 请不要在新代码中使用原生态类型\n    * 第24条 消除非受检警告\n    * 第25条 列表优先于数组\n    * 第26条 优先考虑泛型\n    * 第27条 优先考虑泛型方法\n    * 第28条 利用有限制通配符来提升API的灵活性\n    * 第29条 优先考虑类型安全的异构容器\n* chapter06 - 枚举和注解\n    * 第30条 用enum代替int常量\n    * 第31条 用实例域代替序数\n    * 第32条 用EnumSet代替位域\n    * 第33条 用EnumMap代替序数索引\n    * 第34条 用接口模拟可伸缩的枚举\n    * 第35条 注解优先于命名模式\n    * 第36条 坚持使用Override注解\n    * 第37条 用标记接口定义类型\n* chapter07 - 方法\n    * 第38条 检查参数的有效性\n    * 第39条 必要时进行保护性拷贝\n    * 第40条 谨慎设计方法签名\n    * 第41条 慎用重载\n    * 第42条 慎用可变参数\n    * 第43条 返回零长度的数组或者集合，而不是null\n    * 第44条 为所有导出的API元素编写文档注释\n* chapter08 - 通用程序设计\n    * 第45条 将局部变量的作用域最小化\n    * 第46条 for-each循环优先于传统的for循环\n    * 第47条 了解和使用类库\n    * 第48条 如果需要精确的答案，请避免使用float和double\n    * 第49条 基本类型优先于装箱基本类型\n    * 第50条 如果其他类型更适合，则尽量避免使用字符串\n    * 第51条 当心字符串连接的性能\n    * 第52条 通过接口引用对象\n    * 第53条 接口优先于反射机制\n    * 第54条 谨慎地使用本地方法\n    * 第55条 谨慎地进行优化\n    * 第56条 遵守普遍接受的命名惯例\n* chapter09 - 异常\n    * 第57条 只针对异常的情况才使用异常\n    * 第58条 对可恢复的情况使用受检异常，对编程错误使用运行时异常\n    * 第59条 避免不必要地使用受检的异常\n    * 第60条 优先使用标准的异常\n    * 第61条 抛出与抽象相对应的异常\n    * 第62条 每个方法抛出的异常都要有文档\n    * 第63条 在细节消息中包含能捕获失败的信息\n    * 第64条 努力使失败保持原子性\n    * 第65条 不要忽略异常\n* chapter10 - 并发\n    * 第66条 同步访问共享的可变数据\n    * 第66条 同步访问共享的可变数据\n    * 第67条 避免过度同步\n    * 第68条 executor和task优先于线程\n    * 第69条 并发工具优先于wait和notify\n    * 第70条 线程安全性的文档化\n    * 第71条 慎用延迟初始化\n    * 第72条 不要依赖于线程调度器\n    * 第73条 避免使用线程组\n* chapter11 - 序列化\n    * 第74条 谨慎地实现Serializable接口\n    * 第75条 考虑使用自定义的序列化形式\n    * 第76条 保护性地编写readObject方法\n    * 第77条 对于实例控制，枚举类型优先于readResolve\n    * 第78条 考虑用序列化代理代替序列化实例\n\n***\n***\n# chapter03 对所有对象都通用的方法\n***\n## 第8条 覆盖equals时请遵守通用约定\n\n### 实现高质量equals方法的诀窍\n* 使用==操作符检查\"参数是否为这个对象的应用\"\n* 使用`instanceof`操作符检查\"参数是否为正确的类型\"\n* 把参数传递转换成正确的类型\n* 对于该类中的每个**关键域**,检查参数中的域是否与该对象中对应域项匹配\n* 写完`equals`方法之后,应该问自己三个问题:它是否对称的,传递的,一致的?(记住`Point(x,y)`和`ColorPoint(x,y,color)`的例子)\n\n### 覆写equals的告诫\n* 覆写`equals`时总要覆写`hashCode`(见第9条)\n* 不要企图让`equals`方法过于智能\n* 不要将`equals`方法参数声明中的`Object`对象替换为其他类型.\n\n### equals示例\n```java\npublic final class PhoneNumber {\n    boolean booleanF;\n    byte byteF;\n    char charF;\n    short shortF;\n    int intf;\n    float floatf;\n    double doublef;\n    Object objectF;\n    Object[] arrayF;\n\n    /*由IDEA自动生成*/\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof MyObject)) return false;\n\n        MyObject myObject = (MyObject) o;\n\n        if (booleanF != myObject.booleanF) return false;\n        if (byteF != myObject.byteF) return false;\n        if (charF != myObject.charF) return false;\n        if (shortF != myObject.shortF) return false;\n        if (intf != myObject.intf) return false;\n        if (Float.compare(myObject.floatf, floatf) != 0) return false;\n        if (Double.compare(myObject.doublef, doublef) != 0) return false;\n        if (!objectF.equals(myObject.objectF)) return false;\n        // Probably incorrect - comparing Object[] arrays with Arrays.equals\n        return Arrays.equals(arrayF, myObject.arrayF);\n    }\n}\n```\n\n***\n## 第9条 覆盖equals时总要覆盖hashCode\n\n### Object规范[JavaSE6]\n* 在应用程序的执行期间,只要对象的`equals`方法的比较操作所用到的信息没有被修改,\n那么对这同一个对象调用多次,`hashCode`方法必须始终如一地返回同一个整数.\n在同一个应用程序的多次执行过程中,每次执行返回的整数可以不一致.\n* 如果两个对象根据`equals`方法比较结果是相等的,那么调用者两个对象中任意对象的\n`hashCode`方法都必须产生同样的整数结果.\n* 如果两个对象根据`equals`方法比较结果是不相等的,那么调用这两个对象任意对象的\n`hashCode`方法,则不一定要产生不同的整数结果.\n**总结**\n```java\nequals等 => hashcode等; equals不等 ≠> hashcode不等\n```\n\n### 覆写hashCode方法的简单办法\n```java\npublic class MyObject {\n    boolean booleanF;\n    byte byteF;\n    char charF;\n    short shortF;\n    int intf;\n    float floatf;\n    double doublef;\n    Object objectF;\n    Object[] arrayF;\n\n    /*由IDEA自动生成,使用Equals中涉及到的每个域*/\n    @Override\n    public int hashCode() {\n        int result;\n        long temp;\n        result = (booleanF ? 1 : 0);\n        result = 31 * result + (int) byteF;\n        result = 31 * result + (int) charF;\n        result = 31 * result + (int) shortF;\n        result = 31 * result + intf;\n        result = 31 * result + (floatf != +0.0f ? Float.floatToIntBits(floatf) : 0);\n        temp = Double.doubleToLongBits(doublef);\n        result = 31 * result + (int) (temp ^ (temp >>> 32));\n        result = 31 * result + objectF.hashCode();\n        result = 31 * result + Arrays.hashCode(arrayF);\n        return result;\n    }\n}\n```\n***\n## 第11条 谨慎使用clone\n### 深拷贝简单例子\n```java\nublic class CloneObject implements Cloneable{\n    Object[] elememts = new Integer[]{1,23,4};\n    Integer anInt = 1;\n    List<String> list = new LinkedList<>(Arrays.asList(\"1\",\"2\"));\n\n    @Override\n    public CloneObject clone() {\n        try {\n            CloneObject clone = (CloneObject) super.clone();\n            clone.anInt = new Integer(this.anInt); //深拷贝\n            clone.elememts = this.elememts.clone();\n            clone.list =(List<String>) ((LinkedList<String>)list).clone(); //浅拷贝\n            for (int i=0; list != null && i<list.size() ; ++i){\n                clone.list.set(i, new String(list.get(i))); //new String对String对象深拷贝.\n            }\n            return clone;\n        } catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n\n    public static void main(String[] args)\n    {\n        CloneObject a = new CloneObject();\n        CloneObject b = a.clone();\n\n        System.out.println(a==b);                           //false\n        System.out.println(a.anInt == b.anInt);             //false\n        System.out.println(a.elememts == b.elememts);       //false\n        System.out.println(a.list == b.list);               //false\n        System.out.println(a.list.get(0) == b.list.get(0)); //false\n    }\n}\n```\n\n\n# chapter04 类和接口\n***\n\n## 第23条 请不要在新代码中使用原生态类型\n```java\n//参数化类型,表示可以包含人和对象类型的集合\n//有受检异常\n List<Object> list = new ArrayList<>();\nlist.add(new String(\"a\"));\nInteger b = list.get(0);//受检异常\n\n//通配符类型,表示只能包含某种位置对象类型的集合\n//有受检异常\n List<Object> list = new ArrayList<>();\nlist.add(new String(\"a\"));//受检异常\n\n//原生态类型,脱离了泛型系统\n//运行时异常\nSet s = new HashSet();\ns.add(new String(\"str\"));\nInteger a = (Integer)list.get(0); //java.lang.ClassCastException\n```\n\n\n# chapter09 异常\n***\n\n## 第60条 优先使用标准的异常\n![常用异常](/img/effective-java-read-note/common-exception.png)","slug":"effective-java-read-note","published":1,"updated":"2017-04-23T09:54:13.131Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v460003gknxw5jf61to","content":"<h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><ul>\n<li>chapter02 -  创建和销毁对象<ul>\n<li>第1条:考虑用静态工厂方法替代构造器(Factory method)</li>\n<li>第2条:遇到多个构造器参数时,要考虑用构建器(Builder)</li>\n<li>第3条:用私有构造器或者枚举类型强化单例属性(Singleton)</li>\n<li>第4条:通过私有构造器强化不可实例化的能力</li>\n<li>第5条:避免创建不必要的对象</li>\n<li>第6条:消除过期的对象引用</li>\n<li>第7条:避免使用终结方法(finalizer)</li>\n</ul>\n</li>\n<li>chapter03 - 对所有对象都通用的方法<ul>\n<li>第8条:覆盖equals时请遵守通用约定</li>\n<li>第9条 覆盖equals时总要覆盖hashCode</li>\n<li>第10条 始终要覆盖toString</li>\n<li>第11条 谨慎使用clone</li>\n<li>第12条 考虑实现<code>Comparable</code>接口</li>\n</ul>\n</li>\n<li>chapter04 - 类和接口<ul>\n<li>第13条 使类和成员的可访问性最小化</li>\n<li>第14条 在公有类中使用访问方法而非公有域</li>\n<li>第15条 使可变性最小化</li>\n<li>第16条 复合优先于继承</li>\n<li>第17条 要么为继承而设计，并提供文档说明，要么就禁止继承</li>\n<li>第18条 接口优于抽象类</li>\n<li>第19条 接口只用于定义类型</li>\n<li>第20条 类层次优于标签类</li>\n<li>第21条 用函数对象表示策略</li>\n<li>第22条 优先考虑静态成员类</li>\n</ul>\n</li>\n<li>chapter05 - 泛型<ul>\n<li>第23条 请不要在新代码中使用原生态类型</li>\n<li>第24条 消除非受检警告</li>\n<li>第25条 列表优先于数组</li>\n<li>第26条 优先考虑泛型</li>\n<li>第27条 优先考虑泛型方法</li>\n<li>第28条 利用有限制通配符来提升API的灵活性</li>\n<li>第29条 优先考虑类型安全的异构容器</li>\n</ul>\n</li>\n<li>chapter06 - 枚举和注解<ul>\n<li>第30条 用enum代替int常量</li>\n<li>第31条 用实例域代替序数</li>\n<li>第32条 用EnumSet代替位域</li>\n<li>第33条 用EnumMap代替序数索引</li>\n<li>第34条 用接口模拟可伸缩的枚举</li>\n<li>第35条 注解优先于命名模式</li>\n<li>第36条 坚持使用Override注解</li>\n<li>第37条 用标记接口定义类型</li>\n</ul>\n</li>\n<li>chapter07 - 方法<ul>\n<li>第38条 检查参数的有效性</li>\n<li>第39条 必要时进行保护性拷贝</li>\n<li>第40条 谨慎设计方法签名</li>\n<li>第41条 慎用重载</li>\n<li>第42条 慎用可变参数</li>\n<li>第43条 返回零长度的数组或者集合，而不是null</li>\n<li>第44条 为所有导出的API元素编写文档注释</li>\n</ul>\n</li>\n<li>chapter08 - 通用程序设计<ul>\n<li>第45条 将局部变量的作用域最小化</li>\n<li>第46条 for-each循环优先于传统的for循环</li>\n<li>第47条 了解和使用类库</li>\n<li>第48条 如果需要精确的答案，请避免使用float和double</li>\n<li>第49条 基本类型优先于装箱基本类型</li>\n<li>第50条 如果其他类型更适合，则尽量避免使用字符串</li>\n<li>第51条 当心字符串连接的性能</li>\n<li>第52条 通过接口引用对象</li>\n<li>第53条 接口优先于反射机制</li>\n<li>第54条 谨慎地使用本地方法</li>\n<li>第55条 谨慎地进行优化</li>\n<li>第56条 遵守普遍接受的命名惯例</li>\n</ul>\n</li>\n<li>chapter09 - 异常<ul>\n<li>第57条 只针对异常的情况才使用异常</li>\n<li>第58条 对可恢复的情况使用受检异常，对编程错误使用运行时异常</li>\n<li>第59条 避免不必要地使用受检的异常</li>\n<li>第60条 优先使用标准的异常</li>\n<li>第61条 抛出与抽象相对应的异常</li>\n<li>第62条 每个方法抛出的异常都要有文档</li>\n<li>第63条 在细节消息中包含能捕获失败的信息</li>\n<li>第64条 努力使失败保持原子性</li>\n<li>第65条 不要忽略异常</li>\n</ul>\n</li>\n<li>chapter10 - 并发<ul>\n<li>第66条 同步访问共享的可变数据</li>\n<li>第66条 同步访问共享的可变数据</li>\n<li>第67条 避免过度同步</li>\n<li>第68条 executor和task优先于线程</li>\n<li>第69条 并发工具优先于wait和notify</li>\n<li>第70条 线程安全性的文档化</li>\n<li>第71条 慎用延迟初始化</li>\n<li>第72条 不要依赖于线程调度器</li>\n<li>第73条 避免使用线程组</li>\n</ul>\n</li>\n<li>chapter11 - 序列化<ul>\n<li>第74条 谨慎地实现Serializable接口</li>\n<li>第75条 考虑使用自定义的序列化形式</li>\n<li>第76条 保护性地编写readObject方法</li>\n<li>第77条 对于实例控制，枚举类型优先于readResolve</li>\n<li>第78条 考虑用序列化代理代替序列化实例</li>\n</ul>\n</li>\n</ul>\n<hr>\n<hr>\n<h1 id=\"chapter03-对所有对象都通用的方法\"><a href=\"#chapter03-对所有对象都通用的方法\" class=\"headerlink\" title=\"chapter03 对所有对象都通用的方法\"></a>chapter03 对所有对象都通用的方法</h1><hr>\n<h2 id=\"第8条-覆盖equals时请遵守通用约定\"><a href=\"#第8条-覆盖equals时请遵守通用约定\" class=\"headerlink\" title=\"第8条 覆盖equals时请遵守通用约定\"></a>第8条 覆盖equals时请遵守通用约定</h2><h3 id=\"实现高质量equals方法的诀窍\"><a href=\"#实现高质量equals方法的诀窍\" class=\"headerlink\" title=\"实现高质量equals方法的诀窍\"></a>实现高质量equals方法的诀窍</h3><ul>\n<li>使用==操作符检查”参数是否为这个对象的应用”</li>\n<li>使用<code>instanceof</code>操作符检查”参数是否为正确的类型”</li>\n<li>把参数传递转换成正确的类型</li>\n<li>对于该类中的每个<strong>关键域</strong>,检查参数中的域是否与该对象中对应域项匹配</li>\n<li>写完<code>equals</code>方法之后,应该问自己三个问题:它是否对称的,传递的,一致的?(记住<code>Point(x,y)</code>和<code>ColorPoint(x,y,color)</code>的例子)</li>\n</ul>\n<h3 id=\"覆写equals的告诫\"><a href=\"#覆写equals的告诫\" class=\"headerlink\" title=\"覆写equals的告诫\"></a>覆写equals的告诫</h3><ul>\n<li>覆写<code>equals</code>时总要覆写<code>hashCode</code>(见第9条)</li>\n<li>不要企图让<code>equals</code>方法过于智能</li>\n<li>不要将<code>equals</code>方法参数声明中的<code>Object</code>对象替换为其他类型.</li>\n</ul>\n<h3 id=\"equals示例\"><a href=\"#equals示例\" class=\"headerlink\" title=\"equals示例\"></a>equals示例</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PhoneNumber</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">boolean</span> booleanF;</div><div class=\"line\">    <span class=\"keyword\">byte</span> byteF;</div><div class=\"line\">    <span class=\"keyword\">char</span> charF;</div><div class=\"line\">    <span class=\"keyword\">short</span> shortF;</div><div class=\"line\">    <span class=\"keyword\">int</span> intf;</div><div class=\"line\">    <span class=\"keyword\">float</span> floatf;</div><div class=\"line\">    <span class=\"keyword\">double</span> doublef;</div><div class=\"line\">    Object objectF;</div><div class=\"line\">    Object[] arrayF;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/*由IDEA自动生成*/</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object o)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> == o) <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!(o <span class=\"keyword\">instanceof</span> MyObject)) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\"></div><div class=\"line\">        MyObject myObject = (MyObject) o;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (booleanF != myObject.booleanF) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (byteF != myObject.byteF) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (charF != myObject.charF) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (shortF != myObject.shortF) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (intf != myObject.intf) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (Float.compare(myObject.floatf, floatf) != <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (Double.compare(myObject.doublef, doublef) != <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!objectF.equals(myObject.objectF)) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"comment\">// Probably incorrect - comparing Object[] arrays with Arrays.equals</span></div><div class=\"line\">        <span class=\"keyword\">return</span> Arrays.equals(arrayF, myObject.arrayF);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"第9条-覆盖equals时总要覆盖hashCode\"><a href=\"#第9条-覆盖equals时总要覆盖hashCode\" class=\"headerlink\" title=\"第9条 覆盖equals时总要覆盖hashCode\"></a>第9条 覆盖equals时总要覆盖hashCode</h2><h3 id=\"Object规范-JavaSE6\"><a href=\"#Object规范-JavaSE6\" class=\"headerlink\" title=\"Object规范[JavaSE6]\"></a>Object规范[JavaSE6]</h3><ul>\n<li>在应用程序的执行期间,只要对象的<code>equals</code>方法的比较操作所用到的信息没有被修改,<br>那么对这同一个对象调用多次,<code>hashCode</code>方法必须始终如一地返回同一个整数.<br>在同一个应用程序的多次执行过程中,每次执行返回的整数可以不一致.</li>\n<li>如果两个对象根据<code>equals</code>方法比较结果是相等的,那么调用者两个对象中任意对象的<br><code>hashCode</code>方法都必须产生同样的整数结果.</li>\n<li>如果两个对象根据<code>equals</code>方法比较结果是不相等的,那么调用这两个对象任意对象的<br><code>hashCode</code>方法,则不一定要产生不同的整数结果.<br><strong>总结</strong><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">equals等 =&gt; hashcode等; equals不等 ≠&gt; hashcode不等</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"覆写hashCode方法的简单办法\"><a href=\"#覆写hashCode方法的简单办法\" class=\"headerlink\" title=\"覆写hashCode方法的简单办法\"></a>覆写hashCode方法的简单办法</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyObject</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">boolean</span> booleanF;</div><div class=\"line\">    <span class=\"keyword\">byte</span> byteF;</div><div class=\"line\">    <span class=\"keyword\">char</span> charF;</div><div class=\"line\">    <span class=\"keyword\">short</span> shortF;</div><div class=\"line\">    <span class=\"keyword\">int</span> intf;</div><div class=\"line\">    <span class=\"keyword\">float</span> floatf;</div><div class=\"line\">    <span class=\"keyword\">double</span> doublef;</div><div class=\"line\">    Object objectF;</div><div class=\"line\">    Object[] arrayF;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/*由IDEA自动生成,使用Equals中涉及到的每个域*/</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">hashCode</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> result;</div><div class=\"line\">        <span class=\"keyword\">long</span> temp;</div><div class=\"line\">        result = (booleanF ? <span class=\"number\">1</span> : <span class=\"number\">0</span>);</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + (<span class=\"keyword\">int</span>) byteF;</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + (<span class=\"keyword\">int</span>) charF;</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + (<span class=\"keyword\">int</span>) shortF;</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + intf;</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + (floatf != +<span class=\"number\">0.0f</span> ? Float.floatToIntBits(floatf) : <span class=\"number\">0</span>);</div><div class=\"line\">        temp = Double.doubleToLongBits(doublef);</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + (<span class=\"keyword\">int</span>) (temp ^ (temp &gt;&gt;&gt; <span class=\"number\">32</span>));</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + objectF.hashCode();</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + Arrays.hashCode(arrayF);</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"第11条-谨慎使用clone\"><a href=\"#第11条-谨慎使用clone\" class=\"headerlink\" title=\"第11条 谨慎使用clone\"></a>第11条 谨慎使用clone</h2><h3 id=\"深拷贝简单例子\"><a href=\"#深拷贝简单例子\" class=\"headerlink\" title=\"深拷贝简单例子\"></a>深拷贝简单例子</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">ublic <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CloneObject</span> <span class=\"keyword\">implements</span> <span class=\"title\">Cloneable</span></span>&#123;</div><div class=\"line\">    Object[] elememts = <span class=\"keyword\">new</span> Integer[]&#123;<span class=\"number\">1</span>,<span class=\"number\">23</span>,<span class=\"number\">4</span>&#125;;</div><div class=\"line\">    Integer anInt = <span class=\"number\">1</span>;</div><div class=\"line\">    List&lt;String&gt; list = <span class=\"keyword\">new</span> LinkedList&lt;&gt;(Arrays.asList(<span class=\"string\">\"1\"</span>,<span class=\"string\">\"2\"</span>));</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> CloneObject <span class=\"title\">clone</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            CloneObject clone = (CloneObject) <span class=\"keyword\">super</span>.clone();</div><div class=\"line\">            clone.anInt = <span class=\"keyword\">new</span> Integer(<span class=\"keyword\">this</span>.anInt); <span class=\"comment\">//深拷贝</span></div><div class=\"line\">            clone.elememts = <span class=\"keyword\">this</span>.elememts.clone();</div><div class=\"line\">            clone.list =(List&lt;String&gt;) ((LinkedList&lt;String&gt;)list).clone(); <span class=\"comment\">//浅拷贝</span></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; list != <span class=\"keyword\">null</span> &amp;&amp; i&lt;list.size() ; ++i)&#123;</div><div class=\"line\">                clone.list.set(i, <span class=\"keyword\">new</span> String(list.get(i))); <span class=\"comment\">//new String对String对象深拷贝.</span></div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> clone;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (CloneNotSupportedException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        CloneObject a = <span class=\"keyword\">new</span> CloneObject();</div><div class=\"line\">        CloneObject b = a.clone();</div><div class=\"line\"></div><div class=\"line\">        System.out.println(a==b);                           <span class=\"comment\">//false</span></div><div class=\"line\">        System.out.println(a.anInt == b.anInt);             <span class=\"comment\">//false</span></div><div class=\"line\">        System.out.println(a.elememts == b.elememts);       <span class=\"comment\">//false</span></div><div class=\"line\">        System.out.println(a.list == b.list);               <span class=\"comment\">//false</span></div><div class=\"line\">        System.out.println(a.list.get(<span class=\"number\">0</span>) == b.list.get(<span class=\"number\">0</span>)); <span class=\"comment\">//false</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"chapter04-类和接口\"><a href=\"#chapter04-类和接口\" class=\"headerlink\" title=\"chapter04 类和接口\"></a>chapter04 类和接口</h1><hr>\n<h2 id=\"第23条-请不要在新代码中使用原生态类型\"><a href=\"#第23条-请不要在新代码中使用原生态类型\" class=\"headerlink\" title=\"第23条 请不要在新代码中使用原生态类型\"></a>第23条 请不要在新代码中使用原生态类型</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//参数化类型,表示可以包含人和对象类型的集合</span></div><div class=\"line\"><span class=\"comment\">//有受检异常</span></div><div class=\"line\"> List&lt;Object&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</div><div class=\"line\">list.add(<span class=\"keyword\">new</span> String(<span class=\"string\">\"a\"</span>));</div><div class=\"line\">Integer b = list.get(<span class=\"number\">0</span>);<span class=\"comment\">//受检异常</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//通配符类型,表示只能包含某种位置对象类型的集合</span></div><div class=\"line\"><span class=\"comment\">//有受检异常</span></div><div class=\"line\"> List&lt;Object&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</div><div class=\"line\">list.add(<span class=\"keyword\">new</span> String(<span class=\"string\">\"a\"</span>));<span class=\"comment\">//受检异常</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//原生态类型,脱离了泛型系统</span></div><div class=\"line\"><span class=\"comment\">//运行时异常</span></div><div class=\"line\">Set s = <span class=\"keyword\">new</span> HashSet();</div><div class=\"line\">s.add(<span class=\"keyword\">new</span> String(<span class=\"string\">\"str\"</span>));</div><div class=\"line\">Integer a = (Integer)list.get(<span class=\"number\">0</span>); <span class=\"comment\">//java.lang.ClassCastException</span></div></pre></td></tr></table></figure>\n<h1 id=\"chapter09-异常\"><a href=\"#chapter09-异常\" class=\"headerlink\" title=\"chapter09 异常\"></a>chapter09 异常</h1><hr>\n<h2 id=\"第60条-优先使用标准的异常\"><a href=\"#第60条-优先使用标准的异常\" class=\"headerlink\" title=\"第60条 优先使用标准的异常\"></a>第60条 优先使用标准的异常</h2><p><img src=\"/img/effective-java-read-note/common-exception.png\" alt=\"常用异常\"></p>\n","excerpt":"","more":"<h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><ul>\n<li>chapter02 -  创建和销毁对象<ul>\n<li>第1条:考虑用静态工厂方法替代构造器(Factory method)</li>\n<li>第2条:遇到多个构造器参数时,要考虑用构建器(Builder)</li>\n<li>第3条:用私有构造器或者枚举类型强化单例属性(Singleton)</li>\n<li>第4条:通过私有构造器强化不可实例化的能力</li>\n<li>第5条:避免创建不必要的对象</li>\n<li>第6条:消除过期的对象引用</li>\n<li>第7条:避免使用终结方法(finalizer)</li>\n</ul>\n</li>\n<li>chapter03 - 对所有对象都通用的方法<ul>\n<li>第8条:覆盖equals时请遵守通用约定</li>\n<li>第9条 覆盖equals时总要覆盖hashCode</li>\n<li>第10条 始终要覆盖toString</li>\n<li>第11条 谨慎使用clone</li>\n<li>第12条 考虑实现<code>Comparable</code>接口</li>\n</ul>\n</li>\n<li>chapter04 - 类和接口<ul>\n<li>第13条 使类和成员的可访问性最小化</li>\n<li>第14条 在公有类中使用访问方法而非公有域</li>\n<li>第15条 使可变性最小化</li>\n<li>第16条 复合优先于继承</li>\n<li>第17条 要么为继承而设计，并提供文档说明，要么就禁止继承</li>\n<li>第18条 接口优于抽象类</li>\n<li>第19条 接口只用于定义类型</li>\n<li>第20条 类层次优于标签类</li>\n<li>第21条 用函数对象表示策略</li>\n<li>第22条 优先考虑静态成员类</li>\n</ul>\n</li>\n<li>chapter05 - 泛型<ul>\n<li>第23条 请不要在新代码中使用原生态类型</li>\n<li>第24条 消除非受检警告</li>\n<li>第25条 列表优先于数组</li>\n<li>第26条 优先考虑泛型</li>\n<li>第27条 优先考虑泛型方法</li>\n<li>第28条 利用有限制通配符来提升API的灵活性</li>\n<li>第29条 优先考虑类型安全的异构容器</li>\n</ul>\n</li>\n<li>chapter06 - 枚举和注解<ul>\n<li>第30条 用enum代替int常量</li>\n<li>第31条 用实例域代替序数</li>\n<li>第32条 用EnumSet代替位域</li>\n<li>第33条 用EnumMap代替序数索引</li>\n<li>第34条 用接口模拟可伸缩的枚举</li>\n<li>第35条 注解优先于命名模式</li>\n<li>第36条 坚持使用Override注解</li>\n<li>第37条 用标记接口定义类型</li>\n</ul>\n</li>\n<li>chapter07 - 方法<ul>\n<li>第38条 检查参数的有效性</li>\n<li>第39条 必要时进行保护性拷贝</li>\n<li>第40条 谨慎设计方法签名</li>\n<li>第41条 慎用重载</li>\n<li>第42条 慎用可变参数</li>\n<li>第43条 返回零长度的数组或者集合，而不是null</li>\n<li>第44条 为所有导出的API元素编写文档注释</li>\n</ul>\n</li>\n<li>chapter08 - 通用程序设计<ul>\n<li>第45条 将局部变量的作用域最小化</li>\n<li>第46条 for-each循环优先于传统的for循环</li>\n<li>第47条 了解和使用类库</li>\n<li>第48条 如果需要精确的答案，请避免使用float和double</li>\n<li>第49条 基本类型优先于装箱基本类型</li>\n<li>第50条 如果其他类型更适合，则尽量避免使用字符串</li>\n<li>第51条 当心字符串连接的性能</li>\n<li>第52条 通过接口引用对象</li>\n<li>第53条 接口优先于反射机制</li>\n<li>第54条 谨慎地使用本地方法</li>\n<li>第55条 谨慎地进行优化</li>\n<li>第56条 遵守普遍接受的命名惯例</li>\n</ul>\n</li>\n<li>chapter09 - 异常<ul>\n<li>第57条 只针对异常的情况才使用异常</li>\n<li>第58条 对可恢复的情况使用受检异常，对编程错误使用运行时异常</li>\n<li>第59条 避免不必要地使用受检的异常</li>\n<li>第60条 优先使用标准的异常</li>\n<li>第61条 抛出与抽象相对应的异常</li>\n<li>第62条 每个方法抛出的异常都要有文档</li>\n<li>第63条 在细节消息中包含能捕获失败的信息</li>\n<li>第64条 努力使失败保持原子性</li>\n<li>第65条 不要忽略异常</li>\n</ul>\n</li>\n<li>chapter10 - 并发<ul>\n<li>第66条 同步访问共享的可变数据</li>\n<li>第66条 同步访问共享的可变数据</li>\n<li>第67条 避免过度同步</li>\n<li>第68条 executor和task优先于线程</li>\n<li>第69条 并发工具优先于wait和notify</li>\n<li>第70条 线程安全性的文档化</li>\n<li>第71条 慎用延迟初始化</li>\n<li>第72条 不要依赖于线程调度器</li>\n<li>第73条 避免使用线程组</li>\n</ul>\n</li>\n<li>chapter11 - 序列化<ul>\n<li>第74条 谨慎地实现Serializable接口</li>\n<li>第75条 考虑使用自定义的序列化形式</li>\n<li>第76条 保护性地编写readObject方法</li>\n<li>第77条 对于实例控制，枚举类型优先于readResolve</li>\n<li>第78条 考虑用序列化代理代替序列化实例</li>\n</ul>\n</li>\n</ul>\n<hr>\n<hr>\n<h1 id=\"chapter03-对所有对象都通用的方法\"><a href=\"#chapter03-对所有对象都通用的方法\" class=\"headerlink\" title=\"chapter03 对所有对象都通用的方法\"></a>chapter03 对所有对象都通用的方法</h1><hr>\n<h2 id=\"第8条-覆盖equals时请遵守通用约定\"><a href=\"#第8条-覆盖equals时请遵守通用约定\" class=\"headerlink\" title=\"第8条 覆盖equals时请遵守通用约定\"></a>第8条 覆盖equals时请遵守通用约定</h2><h3 id=\"实现高质量equals方法的诀窍\"><a href=\"#实现高质量equals方法的诀窍\" class=\"headerlink\" title=\"实现高质量equals方法的诀窍\"></a>实现高质量equals方法的诀窍</h3><ul>\n<li>使用==操作符检查”参数是否为这个对象的应用”</li>\n<li>使用<code>instanceof</code>操作符检查”参数是否为正确的类型”</li>\n<li>把参数传递转换成正确的类型</li>\n<li>对于该类中的每个<strong>关键域</strong>,检查参数中的域是否与该对象中对应域项匹配</li>\n<li>写完<code>equals</code>方法之后,应该问自己三个问题:它是否对称的,传递的,一致的?(记住<code>Point(x,y)</code>和<code>ColorPoint(x,y,color)</code>的例子)</li>\n</ul>\n<h3 id=\"覆写equals的告诫\"><a href=\"#覆写equals的告诫\" class=\"headerlink\" title=\"覆写equals的告诫\"></a>覆写equals的告诫</h3><ul>\n<li>覆写<code>equals</code>时总要覆写<code>hashCode</code>(见第9条)</li>\n<li>不要企图让<code>equals</code>方法过于智能</li>\n<li>不要将<code>equals</code>方法参数声明中的<code>Object</code>对象替换为其他类型.</li>\n</ul>\n<h3 id=\"equals示例\"><a href=\"#equals示例\" class=\"headerlink\" title=\"equals示例\"></a>equals示例</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PhoneNumber</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">boolean</span> booleanF;</div><div class=\"line\">    <span class=\"keyword\">byte</span> byteF;</div><div class=\"line\">    <span class=\"keyword\">char</span> charF;</div><div class=\"line\">    <span class=\"keyword\">short</span> shortF;</div><div class=\"line\">    <span class=\"keyword\">int</span> intf;</div><div class=\"line\">    <span class=\"keyword\">float</span> floatf;</div><div class=\"line\">    <span class=\"keyword\">double</span> doublef;</div><div class=\"line\">    Object objectF;</div><div class=\"line\">    Object[] arrayF;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/*由IDEA自动生成*/</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object o)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> == o) <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!(o <span class=\"keyword\">instanceof</span> MyObject)) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\"></div><div class=\"line\">        MyObject myObject = (MyObject) o;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (booleanF != myObject.booleanF) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (byteF != myObject.byteF) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (charF != myObject.charF) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (shortF != myObject.shortF) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (intf != myObject.intf) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (Float.compare(myObject.floatf, floatf) != <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (Double.compare(myObject.doublef, doublef) != <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!objectF.equals(myObject.objectF)) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"comment\">// Probably incorrect - comparing Object[] arrays with Arrays.equals</span></div><div class=\"line\">        <span class=\"keyword\">return</span> Arrays.equals(arrayF, myObject.arrayF);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"第9条-覆盖equals时总要覆盖hashCode\"><a href=\"#第9条-覆盖equals时总要覆盖hashCode\" class=\"headerlink\" title=\"第9条 覆盖equals时总要覆盖hashCode\"></a>第9条 覆盖equals时总要覆盖hashCode</h2><h3 id=\"Object规范-JavaSE6\"><a href=\"#Object规范-JavaSE6\" class=\"headerlink\" title=\"Object规范[JavaSE6]\"></a>Object规范[JavaSE6]</h3><ul>\n<li>在应用程序的执行期间,只要对象的<code>equals</code>方法的比较操作所用到的信息没有被修改,<br>那么对这同一个对象调用多次,<code>hashCode</code>方法必须始终如一地返回同一个整数.<br>在同一个应用程序的多次执行过程中,每次执行返回的整数可以不一致.</li>\n<li>如果两个对象根据<code>equals</code>方法比较结果是相等的,那么调用者两个对象中任意对象的<br><code>hashCode</code>方法都必须产生同样的整数结果.</li>\n<li>如果两个对象根据<code>equals</code>方法比较结果是不相等的,那么调用这两个对象任意对象的<br><code>hashCode</code>方法,则不一定要产生不同的整数结果.<br><strong>总结</strong><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">equals等 =&gt; hashcode等; equals不等 ≠&gt; hashcode不等</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"覆写hashCode方法的简单办法\"><a href=\"#覆写hashCode方法的简单办法\" class=\"headerlink\" title=\"覆写hashCode方法的简单办法\"></a>覆写hashCode方法的简单办法</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyObject</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">boolean</span> booleanF;</div><div class=\"line\">    <span class=\"keyword\">byte</span> byteF;</div><div class=\"line\">    <span class=\"keyword\">char</span> charF;</div><div class=\"line\">    <span class=\"keyword\">short</span> shortF;</div><div class=\"line\">    <span class=\"keyword\">int</span> intf;</div><div class=\"line\">    <span class=\"keyword\">float</span> floatf;</div><div class=\"line\">    <span class=\"keyword\">double</span> doublef;</div><div class=\"line\">    Object objectF;</div><div class=\"line\">    Object[] arrayF;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/*由IDEA自动生成,使用Equals中涉及到的每个域*/</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">hashCode</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> result;</div><div class=\"line\">        <span class=\"keyword\">long</span> temp;</div><div class=\"line\">        result = (booleanF ? <span class=\"number\">1</span> : <span class=\"number\">0</span>);</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + (<span class=\"keyword\">int</span>) byteF;</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + (<span class=\"keyword\">int</span>) charF;</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + (<span class=\"keyword\">int</span>) shortF;</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + intf;</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + (floatf != +<span class=\"number\">0.0f</span> ? Float.floatToIntBits(floatf) : <span class=\"number\">0</span>);</div><div class=\"line\">        temp = Double.doubleToLongBits(doublef);</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + (<span class=\"keyword\">int</span>) (temp ^ (temp &gt;&gt;&gt; <span class=\"number\">32</span>));</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + objectF.hashCode();</div><div class=\"line\">        result = <span class=\"number\">31</span> * result + Arrays.hashCode(arrayF);</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"第11条-谨慎使用clone\"><a href=\"#第11条-谨慎使用clone\" class=\"headerlink\" title=\"第11条 谨慎使用clone\"></a>第11条 谨慎使用clone</h2><h3 id=\"深拷贝简单例子\"><a href=\"#深拷贝简单例子\" class=\"headerlink\" title=\"深拷贝简单例子\"></a>深拷贝简单例子</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">ublic <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CloneObject</span> <span class=\"keyword\">implements</span> <span class=\"title\">Cloneable</span></span>&#123;</div><div class=\"line\">    Object[] elememts = <span class=\"keyword\">new</span> Integer[]&#123;<span class=\"number\">1</span>,<span class=\"number\">23</span>,<span class=\"number\">4</span>&#125;;</div><div class=\"line\">    Integer anInt = <span class=\"number\">1</span>;</div><div class=\"line\">    List&lt;String&gt; list = <span class=\"keyword\">new</span> LinkedList&lt;&gt;(Arrays.asList(<span class=\"string\">\"1\"</span>,<span class=\"string\">\"2\"</span>));</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> CloneObject <span class=\"title\">clone</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            CloneObject clone = (CloneObject) <span class=\"keyword\">super</span>.clone();</div><div class=\"line\">            clone.anInt = <span class=\"keyword\">new</span> Integer(<span class=\"keyword\">this</span>.anInt); <span class=\"comment\">//深拷贝</span></div><div class=\"line\">            clone.elememts = <span class=\"keyword\">this</span>.elememts.clone();</div><div class=\"line\">            clone.list =(List&lt;String&gt;) ((LinkedList&lt;String&gt;)list).clone(); <span class=\"comment\">//浅拷贝</span></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; list != <span class=\"keyword\">null</span> &amp;&amp; i&lt;list.size() ; ++i)&#123;</div><div class=\"line\">                clone.list.set(i, <span class=\"keyword\">new</span> String(list.get(i))); <span class=\"comment\">//new String对String对象深拷贝.</span></div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> clone;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (CloneNotSupportedException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        CloneObject a = <span class=\"keyword\">new</span> CloneObject();</div><div class=\"line\">        CloneObject b = a.clone();</div><div class=\"line\"></div><div class=\"line\">        System.out.println(a==b);                           <span class=\"comment\">//false</span></div><div class=\"line\">        System.out.println(a.anInt == b.anInt);             <span class=\"comment\">//false</span></div><div class=\"line\">        System.out.println(a.elememts == b.elememts);       <span class=\"comment\">//false</span></div><div class=\"line\">        System.out.println(a.list == b.list);               <span class=\"comment\">//false</span></div><div class=\"line\">        System.out.println(a.list.get(<span class=\"number\">0</span>) == b.list.get(<span class=\"number\">0</span>)); <span class=\"comment\">//false</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"chapter04-类和接口\"><a href=\"#chapter04-类和接口\" class=\"headerlink\" title=\"chapter04 类和接口\"></a>chapter04 类和接口</h1><hr>\n<h2 id=\"第23条-请不要在新代码中使用原生态类型\"><a href=\"#第23条-请不要在新代码中使用原生态类型\" class=\"headerlink\" title=\"第23条 请不要在新代码中使用原生态类型\"></a>第23条 请不要在新代码中使用原生态类型</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//参数化类型,表示可以包含人和对象类型的集合</span></div><div class=\"line\"><span class=\"comment\">//有受检异常</span></div><div class=\"line\"> List&lt;Object&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</div><div class=\"line\">list.add(<span class=\"keyword\">new</span> String(<span class=\"string\">\"a\"</span>));</div><div class=\"line\">Integer b = list.get(<span class=\"number\">0</span>);<span class=\"comment\">//受检异常</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//通配符类型,表示只能包含某种位置对象类型的集合</span></div><div class=\"line\"><span class=\"comment\">//有受检异常</span></div><div class=\"line\"> List&lt;Object&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</div><div class=\"line\">list.add(<span class=\"keyword\">new</span> String(<span class=\"string\">\"a\"</span>));<span class=\"comment\">//受检异常</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//原生态类型,脱离了泛型系统</span></div><div class=\"line\"><span class=\"comment\">//运行时异常</span></div><div class=\"line\">Set s = <span class=\"keyword\">new</span> HashSet();</div><div class=\"line\">s.add(<span class=\"keyword\">new</span> String(<span class=\"string\">\"str\"</span>));</div><div class=\"line\">Integer a = (Integer)list.get(<span class=\"number\">0</span>); <span class=\"comment\">//java.lang.ClassCastException</span></div></pre></td></tr></table></figure>\n<h1 id=\"chapter09-异常\"><a href=\"#chapter09-异常\" class=\"headerlink\" title=\"chapter09 异常\"></a>chapter09 异常</h1><hr>\n<h2 id=\"第60条-优先使用标准的异常\"><a href=\"#第60条-优先使用标准的异常\" class=\"headerlink\" title=\"第60条 优先使用标准的异常\"></a>第60条 优先使用标准的异常</h2><p><img src=\"/img/effective-java-read-note/common-exception.png\" alt=\"常用异常\"></p>\n"},{"title":"interview-java基础","date":"2017-04-23T10:55:58.000Z","_content":"\n# 多线程\n## 多线程并发访问HashMap\n* 会造成线程死锁.(原因是并发插入会造成闭散列链表形成闭环,读线程会一直死循环在闭环里)\n","source":"_posts/interview-java基础.md","raw":"---\ntitle: interview-java基础\ndate: 2017-04-23 18:55:58\ntags: [Java,Interview]\ncategories: Interview\n---\n\n# 多线程\n## 多线程并发访问HashMap\n* 会造成线程死锁.(原因是并发插入会造成闭散列链表形成闭环,读线程会一直死循环在闭环里)\n","slug":"interview-java基础","published":1,"updated":"2017-04-23T10:59:07.290Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v4g0005gknxdiv4ve3b","content":"<h1 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h1><h2 id=\"多线程并发访问HashMap\"><a href=\"#多线程并发访问HashMap\" class=\"headerlink\" title=\"多线程并发访问HashMap\"></a>多线程并发访问HashMap</h2><ul>\n<li>会造成线程死锁.(原因是并发插入会造成闭散列链表形成闭环,读线程会一直死循环在闭环里)</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"多线程\"><a href=\"#多线程\" class=\"headerlink\" title=\"多线程\"></a>多线程</h1><h2 id=\"多线程并发访问HashMap\"><a href=\"#多线程并发访问HashMap\" class=\"headerlink\" title=\"多线程并发访问HashMap\"></a>多线程并发访问HashMap</h2><ul>\n<li>会造成线程死锁.(原因是并发插入会造成闭散列链表形成闭环,读线程会一直死循环在闭环里)</li>\n</ul>\n"},{"title":"interview-数据库","date":"2017-04-23T10:35:43.000Z","_content":"\n# 脏读 不可重复读 幻读\n## 脏读\nA事务访问数据并修改数据,事务未提交时\nB事务来`读取`已修改的数据.\nA事务回滚,放弃修改,那么B事务读到的就是脏数据\n## 不可重复读\nA事务第一次读取数据(比如前10条)\nB事务`update`第1条数据,commit\nA事务第二次读取数据(前10条),和第一次读取有差异\n## 幻读\nA事务第一次读取全部数据行(共10条)\nB事务`insert`一条数据,commit\nA事务第二次读取全部数据行(共11条),和第一次读取有差异\n\n\n\n# 事务隔离级别\n| 隔离级别       | 脏读           |  不可重复读     | 幻读  |\n| ------------- |:-------------:| :-------------:| -----:|\n| Read uncommitted (读未提交)| √ | √ | √ |\n| Read committed (读已提交)  | x | √ | √ |\n| Repeatable read (可重复读) | x | x | √ |\n| Serializable (可串行化)    | x | x | x |\n\n\n\n\n# 索引\n## 聚集索引\n## 非聚集索引\n","source":"_posts/interview-数据库.md","raw":"---\ntitle: interview-数据库\ndate: 2017-04-23 18:35:43\ntags: [SQL,Interview]\ncategories: Interview\n---\n\n# 脏读 不可重复读 幻读\n## 脏读\nA事务访问数据并修改数据,事务未提交时\nB事务来`读取`已修改的数据.\nA事务回滚,放弃修改,那么B事务读到的就是脏数据\n## 不可重复读\nA事务第一次读取数据(比如前10条)\nB事务`update`第1条数据,commit\nA事务第二次读取数据(前10条),和第一次读取有差异\n## 幻读\nA事务第一次读取全部数据行(共10条)\nB事务`insert`一条数据,commit\nA事务第二次读取全部数据行(共11条),和第一次读取有差异\n\n\n\n# 事务隔离级别\n| 隔离级别       | 脏读           |  不可重复读     | 幻读  |\n| ------------- |:-------------:| :-------------:| -----:|\n| Read uncommitted (读未提交)| √ | √ | √ |\n| Read committed (读已提交)  | x | √ | √ |\n| Repeatable read (可重复读) | x | x | √ |\n| Serializable (可串行化)    | x | x | x |\n\n\n\n\n# 索引\n## 聚集索引\n## 非聚集索引\n","slug":"interview-数据库","published":1,"updated":"2017-04-23T10:57:12.335Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v4t0009gknx352wqjcb","content":"<h1 id=\"脏读-不可重复读-幻读\"><a href=\"#脏读-不可重复读-幻读\" class=\"headerlink\" title=\"脏读 不可重复读 幻读\"></a>脏读 不可重复读 幻读</h1><h2 id=\"脏读\"><a href=\"#脏读\" class=\"headerlink\" title=\"脏读\"></a>脏读</h2><p>A事务访问数据并修改数据,事务未提交时<br>B事务来<code>读取</code>已修改的数据.<br>A事务回滚,放弃修改,那么B事务读到的就是脏数据</p>\n<h2 id=\"不可重复读\"><a href=\"#不可重复读\" class=\"headerlink\" title=\"不可重复读\"></a>不可重复读</h2><p>A事务第一次读取数据(比如前10条)<br>B事务<code>update</code>第1条数据,commit<br>A事务第二次读取数据(前10条),和第一次读取有差异</p>\n<h2 id=\"幻读\"><a href=\"#幻读\" class=\"headerlink\" title=\"幻读\"></a>幻读</h2><p>A事务第一次读取全部数据行(共10条)<br>B事务<code>insert</code>一条数据,commit<br>A事务第二次读取全部数据行(共11条),和第一次读取有差异</p>\n<h1 id=\"事务隔离级别\"><a href=\"#事务隔离级别\" class=\"headerlink\" title=\"事务隔离级别\"></a>事务隔离级别</h1><table>\n<thead>\n<tr>\n<th>隔离级别</th>\n<th style=\"text-align:center\">脏读</th>\n<th style=\"text-align:center\">不可重复读</th>\n<th style=\"text-align:right\">幻读</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Read uncommitted (读未提交)</td>\n<td style=\"text-align:center\">√</td>\n<td style=\"text-align:center\">√</td>\n<td style=\"text-align:right\">√</td>\n</tr>\n<tr>\n<td>Read committed (读已提交)</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">√</td>\n<td style=\"text-align:right\">√</td>\n</tr>\n<tr>\n<td>Repeatable read (可重复读)</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:right\">√</td>\n</tr>\n<tr>\n<td>Serializable (可串行化)</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:right\">x</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h1><h2 id=\"聚集索引\"><a href=\"#聚集索引\" class=\"headerlink\" title=\"聚集索引\"></a>聚集索引</h2><h2 id=\"非聚集索引\"><a href=\"#非聚集索引\" class=\"headerlink\" title=\"非聚集索引\"></a>非聚集索引</h2>","excerpt":"","more":"<h1 id=\"脏读-不可重复读-幻读\"><a href=\"#脏读-不可重复读-幻读\" class=\"headerlink\" title=\"脏读 不可重复读 幻读\"></a>脏读 不可重复读 幻读</h1><h2 id=\"脏读\"><a href=\"#脏读\" class=\"headerlink\" title=\"脏读\"></a>脏读</h2><p>A事务访问数据并修改数据,事务未提交时<br>B事务来<code>读取</code>已修改的数据.<br>A事务回滚,放弃修改,那么B事务读到的就是脏数据</p>\n<h2 id=\"不可重复读\"><a href=\"#不可重复读\" class=\"headerlink\" title=\"不可重复读\"></a>不可重复读</h2><p>A事务第一次读取数据(比如前10条)<br>B事务<code>update</code>第1条数据,commit<br>A事务第二次读取数据(前10条),和第一次读取有差异</p>\n<h2 id=\"幻读\"><a href=\"#幻读\" class=\"headerlink\" title=\"幻读\"></a>幻读</h2><p>A事务第一次读取全部数据行(共10条)<br>B事务<code>insert</code>一条数据,commit<br>A事务第二次读取全部数据行(共11条),和第一次读取有差异</p>\n<h1 id=\"事务隔离级别\"><a href=\"#事务隔离级别\" class=\"headerlink\" title=\"事务隔离级别\"></a>事务隔离级别</h1><table>\n<thead>\n<tr>\n<th>隔离级别</th>\n<th style=\"text-align:center\">脏读</th>\n<th style=\"text-align:center\">不可重复读</th>\n<th style=\"text-align:right\">幻读</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Read uncommitted (读未提交)</td>\n<td style=\"text-align:center\">√</td>\n<td style=\"text-align:center\">√</td>\n<td style=\"text-align:right\">√</td>\n</tr>\n<tr>\n<td>Read committed (读已提交)</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">√</td>\n<td style=\"text-align:right\">√</td>\n</tr>\n<tr>\n<td>Repeatable read (可重复读)</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:right\">√</td>\n</tr>\n<tr>\n<td>Serializable (可串行化)</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:right\">x</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h1><h2 id=\"聚集索引\"><a href=\"#聚集索引\" class=\"headerlink\" title=\"聚集索引\"></a>聚集索引</h2><h2 id=\"非聚集索引\"><a href=\"#非聚集索引\" class=\"headerlink\" title=\"非聚集索引\"></a>非聚集索引</h2>"},{"title":"learn-java-NIO","date":"2017-04-08T07:11:38.000Z","_content":"\n# 参考\n[http://ifeve.com/overview/](http://ifeve.com/overview/)\n\n# Buffer\n![Buffer](/img/learn-java-NIO/buffer.png)\n\n# Channel\n![Channel](/img/learn-java-NIO/channel.png)\n\n# Selector\n![Selector-Channel](/img/learn-java-NIO/selector-channel.png)\n\n![Selector](/img/learn-java-NIO/selector.png)\n\n# Pipe\n![Pipe](/img/learn-java-NIO/pipe.png)\n\n","source":"_posts/learn-java-NIO.md","raw":"---\ntitle: learn-java-NIO\ndate: 2017-04-08 15:11:38\ntags: [Java,NIO]\ncategories: Java\n---\n\n# 参考\n[http://ifeve.com/overview/](http://ifeve.com/overview/)\n\n# Buffer\n![Buffer](/img/learn-java-NIO/buffer.png)\n\n# Channel\n![Channel](/img/learn-java-NIO/channel.png)\n\n# Selector\n![Selector-Channel](/img/learn-java-NIO/selector-channel.png)\n\n![Selector](/img/learn-java-NIO/selector.png)\n\n# Pipe\n![Pipe](/img/learn-java-NIO/pipe.png)\n\n","slug":"learn-java-NIO","published":1,"updated":"2017-04-23T09:54:13.135Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v4x000agknxb83yelb7","content":"<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"http://ifeve.com/overview/\" target=\"_blank\" rel=\"external\">http://ifeve.com/overview/</a></p>\n<h1 id=\"Buffer\"><a href=\"#Buffer\" class=\"headerlink\" title=\"Buffer\"></a>Buffer</h1><p><img src=\"/img/learn-java-NIO/buffer.png\" alt=\"Buffer\"></p>\n<h1 id=\"Channel\"><a href=\"#Channel\" class=\"headerlink\" title=\"Channel\"></a>Channel</h1><p><img src=\"/img/learn-java-NIO/channel.png\" alt=\"Channel\"></p>\n<h1 id=\"Selector\"><a href=\"#Selector\" class=\"headerlink\" title=\"Selector\"></a>Selector</h1><p><img src=\"/img/learn-java-NIO/selector-channel.png\" alt=\"Selector-Channel\"></p>\n<p><img src=\"/img/learn-java-NIO/selector.png\" alt=\"Selector\"></p>\n<h1 id=\"Pipe\"><a href=\"#Pipe\" class=\"headerlink\" title=\"Pipe\"></a>Pipe</h1><p><img src=\"/img/learn-java-NIO/pipe.png\" alt=\"Pipe\"></p>\n","excerpt":"","more":"<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"http://ifeve.com/overview/\">http://ifeve.com/overview/</a></p>\n<h1 id=\"Buffer\"><a href=\"#Buffer\" class=\"headerlink\" title=\"Buffer\"></a>Buffer</h1><p><img src=\"/img/learn-java-NIO/buffer.png\" alt=\"Buffer\"></p>\n<h1 id=\"Channel\"><a href=\"#Channel\" class=\"headerlink\" title=\"Channel\"></a>Channel</h1><p><img src=\"/img/learn-java-NIO/channel.png\" alt=\"Channel\"></p>\n<h1 id=\"Selector\"><a href=\"#Selector\" class=\"headerlink\" title=\"Selector\"></a>Selector</h1><p><img src=\"/img/learn-java-NIO/selector-channel.png\" alt=\"Selector-Channel\"></p>\n<p><img src=\"/img/learn-java-NIO/selector.png\" alt=\"Selector\"></p>\n<h1 id=\"Pipe\"><a href=\"#Pipe\" class=\"headerlink\" title=\"Pipe\"></a>Pipe</h1><p><img src=\"/img/learn-java-NIO/pipe.png\" alt=\"Pipe\"></p>\n"},{"title":"learn-jvm-0-运行时数据区域","date":"2017-03-08T02:39:55.000Z","_content":"\n![Hotspot](/img/learn-jvm-0/Hotspot_Architecture.png)\n\n# 共享数据区域\n![share](/img/learn-jvm-0/share.png)\n\n## _Method Area_\n方法区（Method Area）与Java堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。虽然Java虚拟机规范把方法区描述为堆的一个逻辑部分，但是它却有一个别名叫做Non-Heap（非堆），目的应该是与Java堆区分开来.\n对于习惯在HotSpot虚拟机上开发、部署程序的开发者来说，很多人都更愿意把方法区称为“永久代”（Permanent Generation），本质上两者并不等价，仅仅是因为HotSpot虚拟机的设计团队选择把GC分代收集扩展至方法区，或者说使用永久代来实现方法区而已，这样HotSpot的垃圾收集器可以像管理Java堆一样管理这部分内存，能够省去专门为方法区编写内存管理代码的工作。\n### _运行时常量池_\n运行时常量池（Runtime Constant Pool）是方法区的一部分。Class文件中除了有类的版本、字段、方法、接口等描述信息外，还有一项信息是常量池（Constant Pool Table），用于存放编译期生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池中存放。\n运行时常量池相对于Class文件常量池的另外一个重要特征是具备动态性，Java语言并不要求常量一定只有编译期才能产生，也就是并非预置入Class文件中常量池的内容才能进入方法区运行时常量池，运行期间也可能将新的常量放入池中，这种特性被开发人员利用得比较多的便是String类的intern（）方法。\n\n## _Heap_\nJava堆（Java Heap）是Java虚拟机所管理的内存中最大的一块。Java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。此内存区域的唯一目的就是存放对象实例，几乎所有的对象实例都在这里分配内存。\n所有的对象实例以及数组都要在堆上分配[1]，但是随着JIT编译器的发展与逃逸分析技术逐渐成熟，栈上分配、标量替换[2]优化技术将会导致一些微妙的变化发生，所有的对象都分配在堆上也渐渐变得不是那么“绝对”了。\nJava堆是**垃圾收集器管理**的主要区域，因此很多时候也被称做“GC堆”.\n\n---\n# 线程私有数据区域\n![private](/img/learn-jvm-0/private.png)\n\n## _PC_\n程序计数器（Program Counter Register）是一块较小的内存空间，它可以看作是当前线程所执行的字节码的行号指示器。\n在虚拟机的概念模型里（仅是概念模型，各种虚拟机可能会通过一些更高效的方式去实现），字节码解释器工作时就是通过改变这个计数器的值来选取下一条需要执行的字节码指令，分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数器来完成。\n由于Java虚拟机的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现的，在任何一个确定的时刻，一个处理器（对于多核处理器来说是一个内核）都只会执行一条线程中的指令。\n因此，为了线程切换后能恢复到正确的执行位置，每条线程都需要有一个**独立的程序计数器**，各条线程之间计数器互不影响，独立存储，我们称这类内存区域为“线程私有”的内存。\n\n## _VM Stack_\n虚拟机栈描述的是Java方法执行的内存模型：每个方法在执行的同时都会创建一个栈帧（Stack Frame[1]）用于存储局部变量表、操作数栈、动态链接、方法出口等信息。每一个方法从调用直至执行完成的过程，就对应着一个栈帧在虚拟机栈中入栈到出栈的过程。\n局部变量表存放了编译期可知的各种基本数据类型（boolean、byte、char、short、int、float、long、double）、对象引用（reference类型，它不等同于对象本身，可能是一个指向对象起始地址的引用指针，也可能是指向一个代表对象的句柄或其他与此对象相关的位置）和returnAddress类型（指向了一条字节码指令的地址）。\n其中64位长度的long和double类型的数据会占用2个局部变量空间（Slot），其余的数据类型只占用1个。局部变量表所需的内存空间在编译期间完成分配，当进入一个方法时，这个方法需要在帧中分配多大的局部变量空间是完全确定的，在方法运行期间不会改变局部变量表的大小。\n在Java虚拟机规范中，对这个区域规定了两种异常状况：如果线程请求的栈深度大于虚拟机所允许的深度，将抛出StackOverflowError异常；如果虚拟机栈可以动态扩展（当前大部分的Java虚拟机都可动态扩展，只不过Java虚拟机规范中也允许固定长度的虚拟机栈），如果扩展时无法申请到足够的内存，就会抛出OutOfMemoryError异常。\n\n## _Native Method Stack_\n本地方法栈（Native Method Stack）与虚拟机栈所发挥的作用是非常相似的，它们之间的区别不过是虚拟机栈为虚拟机执行Java方法（也就是字节码）服务，而本地方法栈则为虚拟机使用到的Native方法服务。\n\n\n\n","source":"_posts/learn-jvm-0-运行时数据区域.md","raw":"---\ntitle: learn-jvm-0-运行时数据区域\ndate: 2017-03-08 10:39:55\ntags: [Java,jvm]\ncategories: Java\n---\n\n![Hotspot](/img/learn-jvm-0/Hotspot_Architecture.png)\n\n# 共享数据区域\n![share](/img/learn-jvm-0/share.png)\n\n## _Method Area_\n方法区（Method Area）与Java堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。虽然Java虚拟机规范把方法区描述为堆的一个逻辑部分，但是它却有一个别名叫做Non-Heap（非堆），目的应该是与Java堆区分开来.\n对于习惯在HotSpot虚拟机上开发、部署程序的开发者来说，很多人都更愿意把方法区称为“永久代”（Permanent Generation），本质上两者并不等价，仅仅是因为HotSpot虚拟机的设计团队选择把GC分代收集扩展至方法区，或者说使用永久代来实现方法区而已，这样HotSpot的垃圾收集器可以像管理Java堆一样管理这部分内存，能够省去专门为方法区编写内存管理代码的工作。\n### _运行时常量池_\n运行时常量池（Runtime Constant Pool）是方法区的一部分。Class文件中除了有类的版本、字段、方法、接口等描述信息外，还有一项信息是常量池（Constant Pool Table），用于存放编译期生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池中存放。\n运行时常量池相对于Class文件常量池的另外一个重要特征是具备动态性，Java语言并不要求常量一定只有编译期才能产生，也就是并非预置入Class文件中常量池的内容才能进入方法区运行时常量池，运行期间也可能将新的常量放入池中，这种特性被开发人员利用得比较多的便是String类的intern（）方法。\n\n## _Heap_\nJava堆（Java Heap）是Java虚拟机所管理的内存中最大的一块。Java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。此内存区域的唯一目的就是存放对象实例，几乎所有的对象实例都在这里分配内存。\n所有的对象实例以及数组都要在堆上分配[1]，但是随着JIT编译器的发展与逃逸分析技术逐渐成熟，栈上分配、标量替换[2]优化技术将会导致一些微妙的变化发生，所有的对象都分配在堆上也渐渐变得不是那么“绝对”了。\nJava堆是**垃圾收集器管理**的主要区域，因此很多时候也被称做“GC堆”.\n\n---\n# 线程私有数据区域\n![private](/img/learn-jvm-0/private.png)\n\n## _PC_\n程序计数器（Program Counter Register）是一块较小的内存空间，它可以看作是当前线程所执行的字节码的行号指示器。\n在虚拟机的概念模型里（仅是概念模型，各种虚拟机可能会通过一些更高效的方式去实现），字节码解释器工作时就是通过改变这个计数器的值来选取下一条需要执行的字节码指令，分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数器来完成。\n由于Java虚拟机的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现的，在任何一个确定的时刻，一个处理器（对于多核处理器来说是一个内核）都只会执行一条线程中的指令。\n因此，为了线程切换后能恢复到正确的执行位置，每条线程都需要有一个**独立的程序计数器**，各条线程之间计数器互不影响，独立存储，我们称这类内存区域为“线程私有”的内存。\n\n## _VM Stack_\n虚拟机栈描述的是Java方法执行的内存模型：每个方法在执行的同时都会创建一个栈帧（Stack Frame[1]）用于存储局部变量表、操作数栈、动态链接、方法出口等信息。每一个方法从调用直至执行完成的过程，就对应着一个栈帧在虚拟机栈中入栈到出栈的过程。\n局部变量表存放了编译期可知的各种基本数据类型（boolean、byte、char、short、int、float、long、double）、对象引用（reference类型，它不等同于对象本身，可能是一个指向对象起始地址的引用指针，也可能是指向一个代表对象的句柄或其他与此对象相关的位置）和returnAddress类型（指向了一条字节码指令的地址）。\n其中64位长度的long和double类型的数据会占用2个局部变量空间（Slot），其余的数据类型只占用1个。局部变量表所需的内存空间在编译期间完成分配，当进入一个方法时，这个方法需要在帧中分配多大的局部变量空间是完全确定的，在方法运行期间不会改变局部变量表的大小。\n在Java虚拟机规范中，对这个区域规定了两种异常状况：如果线程请求的栈深度大于虚拟机所允许的深度，将抛出StackOverflowError异常；如果虚拟机栈可以动态扩展（当前大部分的Java虚拟机都可动态扩展，只不过Java虚拟机规范中也允许固定长度的虚拟机栈），如果扩展时无法申请到足够的内存，就会抛出OutOfMemoryError异常。\n\n## _Native Method Stack_\n本地方法栈（Native Method Stack）与虚拟机栈所发挥的作用是非常相似的，它们之间的区别不过是虚拟机栈为虚拟机执行Java方法（也就是字节码）服务，而本地方法栈则为虚拟机使用到的Native方法服务。\n\n\n\n","slug":"learn-jvm-0-运行时数据区域","published":1,"updated":"2017-04-23T09:54:13.139Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v50000bgknxd4lchxui","content":"<p><img src=\"/img/learn-jvm-0/Hotspot_Architecture.png\" alt=\"Hotspot\"></p>\n<h1 id=\"共享数据区域\"><a href=\"#共享数据区域\" class=\"headerlink\" title=\"共享数据区域\"></a>共享数据区域</h1><p><img src=\"/img/learn-jvm-0/share.png\" alt=\"share\"></p>\n<h2 id=\"Method-Area\"><a href=\"#Method-Area\" class=\"headerlink\" title=\"Method Area\"></a><em>Method Area</em></h2><p>方法区（Method Area）与Java堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。虽然Java虚拟机规范把方法区描述为堆的一个逻辑部分，但是它却有一个别名叫做Non-Heap（非堆），目的应该是与Java堆区分开来.<br>对于习惯在HotSpot虚拟机上开发、部署程序的开发者来说，很多人都更愿意把方法区称为“永久代”（Permanent Generation），本质上两者并不等价，仅仅是因为HotSpot虚拟机的设计团队选择把GC分代收集扩展至方法区，或者说使用永久代来实现方法区而已，这样HotSpot的垃圾收集器可以像管理Java堆一样管理这部分内存，能够省去专门为方法区编写内存管理代码的工作。</p>\n<h3 id=\"运行时常量池\"><a href=\"#运行时常量池\" class=\"headerlink\" title=\"运行时常量池\"></a><em>运行时常量池</em></h3><p>运行时常量池（Runtime Constant Pool）是方法区的一部分。Class文件中除了有类的版本、字段、方法、接口等描述信息外，还有一项信息是常量池（Constant Pool Table），用于存放编译期生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池中存放。<br>运行时常量池相对于Class文件常量池的另外一个重要特征是具备动态性，Java语言并不要求常量一定只有编译期才能产生，也就是并非预置入Class文件中常量池的内容才能进入方法区运行时常量池，运行期间也可能将新的常量放入池中，这种特性被开发人员利用得比较多的便是String类的intern（）方法。</p>\n<h2 id=\"Heap\"><a href=\"#Heap\" class=\"headerlink\" title=\"Heap\"></a><em>Heap</em></h2><p>Java堆（Java Heap）是Java虚拟机所管理的内存中最大的一块。Java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。此内存区域的唯一目的就是存放对象实例，几乎所有的对象实例都在这里分配内存。<br>所有的对象实例以及数组都要在堆上分配[1]，但是随着JIT编译器的发展与逃逸分析技术逐渐成熟，栈上分配、标量替换[2]优化技术将会导致一些微妙的变化发生，所有的对象都分配在堆上也渐渐变得不是那么“绝对”了。<br>Java堆是<strong>垃圾收集器管理</strong>的主要区域，因此很多时候也被称做“GC堆”.</p>\n<hr>\n<h1 id=\"线程私有数据区域\"><a href=\"#线程私有数据区域\" class=\"headerlink\" title=\"线程私有数据区域\"></a>线程私有数据区域</h1><p><img src=\"/img/learn-jvm-0/private.png\" alt=\"private\"></p>\n<h2 id=\"PC\"><a href=\"#PC\" class=\"headerlink\" title=\"PC\"></a><em>PC</em></h2><p>程序计数器（Program Counter Register）是一块较小的内存空间，它可以看作是当前线程所执行的字节码的行号指示器。<br>在虚拟机的概念模型里（仅是概念模型，各种虚拟机可能会通过一些更高效的方式去实现），字节码解释器工作时就是通过改变这个计数器的值来选取下一条需要执行的字节码指令，分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数器来完成。<br>由于Java虚拟机的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现的，在任何一个确定的时刻，一个处理器（对于多核处理器来说是一个内核）都只会执行一条线程中的指令。<br>因此，为了线程切换后能恢复到正确的执行位置，每条线程都需要有一个<strong>独立的程序计数器</strong>，各条线程之间计数器互不影响，独立存储，我们称这类内存区域为“线程私有”的内存。</p>\n<h2 id=\"VM-Stack\"><a href=\"#VM-Stack\" class=\"headerlink\" title=\"VM Stack\"></a><em>VM Stack</em></h2><p>虚拟机栈描述的是Java方法执行的内存模型：每个方法在执行的同时都会创建一个栈帧（Stack Frame[1]）用于存储局部变量表、操作数栈、动态链接、方法出口等信息。每一个方法从调用直至执行完成的过程，就对应着一个栈帧在虚拟机栈中入栈到出栈的过程。<br>局部变量表存放了编译期可知的各种基本数据类型（boolean、byte、char、short、int、float、long、double）、对象引用（reference类型，它不等同于对象本身，可能是一个指向对象起始地址的引用指针，也可能是指向一个代表对象的句柄或其他与此对象相关的位置）和returnAddress类型（指向了一条字节码指令的地址）。<br>其中64位长度的long和double类型的数据会占用2个局部变量空间（Slot），其余的数据类型只占用1个。局部变量表所需的内存空间在编译期间完成分配，当进入一个方法时，这个方法需要在帧中分配多大的局部变量空间是完全确定的，在方法运行期间不会改变局部变量表的大小。<br>在Java虚拟机规范中，对这个区域规定了两种异常状况：如果线程请求的栈深度大于虚拟机所允许的深度，将抛出StackOverflowError异常；如果虚拟机栈可以动态扩展（当前大部分的Java虚拟机都可动态扩展，只不过Java虚拟机规范中也允许固定长度的虚拟机栈），如果扩展时无法申请到足够的内存，就会抛出OutOfMemoryError异常。</p>\n<h2 id=\"Native-Method-Stack\"><a href=\"#Native-Method-Stack\" class=\"headerlink\" title=\"Native Method Stack\"></a><em>Native Method Stack</em></h2><p>本地方法栈（Native Method Stack）与虚拟机栈所发挥的作用是非常相似的，它们之间的区别不过是虚拟机栈为虚拟机执行Java方法（也就是字节码）服务，而本地方法栈则为虚拟机使用到的Native方法服务。</p>\n","excerpt":"","more":"<p><img src=\"/img/learn-jvm-0/Hotspot_Architecture.png\" alt=\"Hotspot\"></p>\n<h1 id=\"共享数据区域\"><a href=\"#共享数据区域\" class=\"headerlink\" title=\"共享数据区域\"></a>共享数据区域</h1><p><img src=\"/img/learn-jvm-0/share.png\" alt=\"share\"></p>\n<h2 id=\"Method-Area\"><a href=\"#Method-Area\" class=\"headerlink\" title=\"Method Area\"></a><em>Method Area</em></h2><p>方法区（Method Area）与Java堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。虽然Java虚拟机规范把方法区描述为堆的一个逻辑部分，但是它却有一个别名叫做Non-Heap（非堆），目的应该是与Java堆区分开来.<br>对于习惯在HotSpot虚拟机上开发、部署程序的开发者来说，很多人都更愿意把方法区称为“永久代”（Permanent Generation），本质上两者并不等价，仅仅是因为HotSpot虚拟机的设计团队选择把GC分代收集扩展至方法区，或者说使用永久代来实现方法区而已，这样HotSpot的垃圾收集器可以像管理Java堆一样管理这部分内存，能够省去专门为方法区编写内存管理代码的工作。</p>\n<h3 id=\"运行时常量池\"><a href=\"#运行时常量池\" class=\"headerlink\" title=\"运行时常量池\"></a><em>运行时常量池</em></h3><p>运行时常量池（Runtime Constant Pool）是方法区的一部分。Class文件中除了有类的版本、字段、方法、接口等描述信息外，还有一项信息是常量池（Constant Pool Table），用于存放编译期生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池中存放。<br>运行时常量池相对于Class文件常量池的另外一个重要特征是具备动态性，Java语言并不要求常量一定只有编译期才能产生，也就是并非预置入Class文件中常量池的内容才能进入方法区运行时常量池，运行期间也可能将新的常量放入池中，这种特性被开发人员利用得比较多的便是String类的intern（）方法。</p>\n<h2 id=\"Heap\"><a href=\"#Heap\" class=\"headerlink\" title=\"Heap\"></a><em>Heap</em></h2><p>Java堆（Java Heap）是Java虚拟机所管理的内存中最大的一块。Java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。此内存区域的唯一目的就是存放对象实例，几乎所有的对象实例都在这里分配内存。<br>所有的对象实例以及数组都要在堆上分配[1]，但是随着JIT编译器的发展与逃逸分析技术逐渐成熟，栈上分配、标量替换[2]优化技术将会导致一些微妙的变化发生，所有的对象都分配在堆上也渐渐变得不是那么“绝对”了。<br>Java堆是<strong>垃圾收集器管理</strong>的主要区域，因此很多时候也被称做“GC堆”.</p>\n<hr>\n<h1 id=\"线程私有数据区域\"><a href=\"#线程私有数据区域\" class=\"headerlink\" title=\"线程私有数据区域\"></a>线程私有数据区域</h1><p><img src=\"/img/learn-jvm-0/private.png\" alt=\"private\"></p>\n<h2 id=\"PC\"><a href=\"#PC\" class=\"headerlink\" title=\"PC\"></a><em>PC</em></h2><p>程序计数器（Program Counter Register）是一块较小的内存空间，它可以看作是当前线程所执行的字节码的行号指示器。<br>在虚拟机的概念模型里（仅是概念模型，各种虚拟机可能会通过一些更高效的方式去实现），字节码解释器工作时就是通过改变这个计数器的值来选取下一条需要执行的字节码指令，分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数器来完成。<br>由于Java虚拟机的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现的，在任何一个确定的时刻，一个处理器（对于多核处理器来说是一个内核）都只会执行一条线程中的指令。<br>因此，为了线程切换后能恢复到正确的执行位置，每条线程都需要有一个<strong>独立的程序计数器</strong>，各条线程之间计数器互不影响，独立存储，我们称这类内存区域为“线程私有”的内存。</p>\n<h2 id=\"VM-Stack\"><a href=\"#VM-Stack\" class=\"headerlink\" title=\"VM Stack\"></a><em>VM Stack</em></h2><p>虚拟机栈描述的是Java方法执行的内存模型：每个方法在执行的同时都会创建一个栈帧（Stack Frame[1]）用于存储局部变量表、操作数栈、动态链接、方法出口等信息。每一个方法从调用直至执行完成的过程，就对应着一个栈帧在虚拟机栈中入栈到出栈的过程。<br>局部变量表存放了编译期可知的各种基本数据类型（boolean、byte、char、short、int、float、long、double）、对象引用（reference类型，它不等同于对象本身，可能是一个指向对象起始地址的引用指针，也可能是指向一个代表对象的句柄或其他与此对象相关的位置）和returnAddress类型（指向了一条字节码指令的地址）。<br>其中64位长度的long和double类型的数据会占用2个局部变量空间（Slot），其余的数据类型只占用1个。局部变量表所需的内存空间在编译期间完成分配，当进入一个方法时，这个方法需要在帧中分配多大的局部变量空间是完全确定的，在方法运行期间不会改变局部变量表的大小。<br>在Java虚拟机规范中，对这个区域规定了两种异常状况：如果线程请求的栈深度大于虚拟机所允许的深度，将抛出StackOverflowError异常；如果虚拟机栈可以动态扩展（当前大部分的Java虚拟机都可动态扩展，只不过Java虚拟机规范中也允许固定长度的虚拟机栈），如果扩展时无法申请到足够的内存，就会抛出OutOfMemoryError异常。</p>\n<h2 id=\"Native-Method-Stack\"><a href=\"#Native-Method-Stack\" class=\"headerlink\" title=\"Native Method Stack\"></a><em>Native Method Stack</em></h2><p>本地方法栈（Native Method Stack）与虚拟机栈所发挥的作用是非常相似的，它们之间的区别不过是虚拟机栈为虚拟机执行Java方法（也就是字节码）服务，而本地方法栈则为虚拟机使用到的Native方法服务。</p>\n"},{"title":"learn-jvm-1-内存分配与回收策略实战","date":"2017-03-08T05:21:49.000Z","_content":"# 参考资料\n* [Java Garbage Collection Basics](http://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html#t3)\n* [JVM参数释义](http://www.cnblogs.com/redcreen/archive/2011/05/04/2037057.html)\n\n# Debug环境\n笔者是在IDEA + jvm调试工具环境下调试.\n* 虚拟机启动参数配置\n```\n-XX：+PrintGCDetails  --虚拟机在发生垃圾收集行为时打印内存回收日志，并且在进程退出的时候输出当前的内存各区域分配情况。\n-Xms20M  --初始堆大小\n-Xmx20M  --最大堆大小\n-Xmn10M  --年轻代大小\n-XX:+UseSerialGC --指定垃圾回收器为串行垃圾回收器\n-XX:PretenureSizeThreshold=3145728  --超过阀值(3MB)直接分配到老年代,只对Serial和ParNew两款收集器有效\n```\n* 常用调试命令\n\n```\n查看虚拟机唯一ID(Local Virtual Machine Identifier,LVMID),通常情况下与进程ID是一个值\n> jps\n```\n\n```\n查看堆栈信息\n> jmap\n> jmap -heap $LVMID  //查看堆内存\n> jmap -dump:format=b,file=xx.bin  $LVMID  //生成dump文件, 可用jhat命令分析生成的内存镜像文件\n```\n\n```\n查看堆栈内存变化信息\n> jstat\n> jstat -gcutil -h 20 $LVMID 500 1000     // (每隔20行显示表头,每隔500ms显示一次,一共显示1000次)\noption 可选\n    -gcnew\n    -gcnewcapacity\n    -gcold\n    -gcoldcapacity\n    -gcpermcapacity\n    -gcutil\n表头含义(https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jstat.html)\n-gcutil option\nSummary of garbage collection statistics.\nS0: Survivor space 0 utilization as a percentage of the space's current capacity.\nS1: Survivor space 1 utilization as a percentage of the space's current capacity.\nE: Eden space utilization as a percentage of the space's current capacity.\nO: Old space utilization as a percentage of the space's current capacity.\nM: Metaspace utilization as a percentage of the space's current capacity.\nCCS: Compressed class space utilization as a percentage.\nYGC: Number of young generation GC events.\nYGCT: Young generation garbage collection time.\nFGC: Number of full GC events.\nFGCT: Full garbage collection time.\nGCT: Total garbage collection time.\n```\n\n# 内存分配与回收策略\n\n## 对象优先在Eden分配\n```java\npublic class TestAllocation {\n    public static int _1MB = 1024 * 1024;\n    /**\n     * 测试垃圾回收\n     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails\n     * -Xms20M  --初始堆大小\n     * -Xmx20M  --最大堆大小\n     * -Xmn10M  --年轻代大小\n     * 这3个参数限制了Java堆大小为20MB,不可扩展,其中10MB分配给新生代,剩下的10MB分配给老年代。\n     * -XX:SurvivorRatio=8  决定了新生代中Eden区与一个Survivor区的空间比例是8:1\n     * -XX:+PrintGCDetails  告诉虚拟机在发生垃圾收集行为时打印内存回收日志，并且在进程退出的时候输出当前的内存各区域分配情况。\n     */\n    public static void test_3_6_1(){\n        byte[] a1 = new byte[2 * _1MB];\n        byte[] a2 = new byte[2 * _1MB];\n        byte[] a3 = new byte[2 * _1MB];\n        byte[] a4 = new byte[_1MB >> 1];\n        a1 = null;\n        a2 = null;\n        a3 = null;\n        byte[] a5 = new byte[_1MB >> 2];//第一次发生Minor GC (YGC)\n    }\n    public static void main(String[] args){\n        test_3_6_1();\n    }\n}\n```\n调试到第一次发生YGC的地方,GC导致的内存占用变化如下图所示.\n![YGC](/img/learn-jvm-1/firstYGC.png)\n\n## 直接分配大对象到老年代\n```java\npublic class Test_3_6_2 {\n    public static int _1MB = 1024 * 1024;\n    /**\n     * 测试直接分配大对象到老年代\n     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails -XX:+UseSerialGC -XX:PretenureSizeThreshold=3145728\n     * -Xms20M  --初始堆大小\n     * -Xmx20M  --最大堆大小\n     * -Xmn10M  --年轻代大小\n     * -XX:+UseSerialGC --指定垃圾回收器为串行垃圾回收器\n     * -XX:PretenureSizeThreshold=3145728  --超过阀值(3MB)直接分配到老年代,只对Serial和ParNew两款收集器有效\n     */\n    public static void test_3_6_2(){\n        byte[] b = new byte[4* _1MB]; //直接分配到老年代\n    }\n    public static void main(String[] args){\n        test_3_6_2();\n    }\n}\n```\n内存占用变化如下图所示.\n![YGC](/img/learn-jvm-1/allocateToOldGeneration.png)\n\n## 长期存活的对象进入老年代\n```java\npublic class Test_3_6_3 {\n    public static int _1MB = 1024 * 1024;\n    /**\n     * 测试长期存活的对象进入老年代\n     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails -XX:MaxTenuringThreshold=1 -XX:+PrintTenuringDistribution\n     * -Xms20M  --初始堆大小\n     * -Xmx20M  --最大堆大小\n     * -Xmn10M  --年轻代大小\n     * -XX:MaxTenuringThreshold=1 -- 对象转移到老年代阀值(每次垃圾回收对象age+1,age大于阀值时对象被移到老年代中)\n     * -XX:+PrintTenuringDistribution\n     */\n    public static void test_3_6_3(){\n        byte[] a1 = new byte[_1MB >> 2];\n        byte[] a2 = new byte[2 * _1MB];\n        byte[] a3 = new byte[2 * _1MB];\n        byte[] a4 = new byte[2 * _1MB];\n        a2 = null;\n        a3 = null;\n        a4 = null;\n\n        a2 = new byte[2 * _1MB];//第1次YGC\n        a3 = new byte[2 * _1MB];\n        a4 = new byte[2 * _1MB];\n        a2 = null;\n        a3 = null;\n        a4 = null;\n\n        a2 = new byte[2 * _1MB];//第2次YGC,a1被移到老年代\n    }\n    public static void main(String[] args){\n        test_3_6_3();\n    }\n}\n```\n内存占用变化如下图所示.\n![ageToOld](/img/learn-jvm-1/ageToOldGenerationMemory.png)\n\n第2次YDC后堆内存信息\n![ageToOld](/img/learn-jvm-1/ageToOldGenerationHeap.png)\n\n\n## 动态对象年龄判定\n```java\npublic class Test_3_6_4 {\n    public static int _1MB = 1024 * 1024;\n    /**\n     * 测试动态对象年龄判定\n     *\n     * 为了能更好地适应不同程序的内存状况，\n     * 虚拟机并不是永远地要求对象的年龄必须达到了MaxTenuringThreshold才能晋升老年代，\n     * 如果在Survivor空间中相同年龄所有对象大小的总和大于Survivor空间的一半，\n     * 年龄大于或等于该年龄的对象就可以直接进入老年代，\n     * 无须等到MaxTenuringThreshold中要求的年龄。\n     *\n     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails -XX:MaxTenuringThreshold=15 -XX:+PrintTenuringDistribution\n     * -Xms20M  --初始堆大小\n     * -Xmx20M  --最大堆大小\n     * -Xmn10M  --年轻代大小\n     * -XX:MaxTenuringThreshold=1 -- 对象转移到老年代阀值(每次垃圾回收对象age+1,age大于阀值时对象被移到老年代中)\n     * -XX:+PrintTenuringDistribution\n     */\n    public static void test_3_6_4(){\n        byte[] a1 = new byte[_1MB >> 2];\n        byte[] a2 = new byte[_1MB >> 2];//a1+a2大于survivo空间一半\n        byte[] a3 = new byte[3 * _1MB];\n        byte[] a4 = new byte[3 * _1MB];\n        a4 = null;\n        byte[] a5 = new byte[2 * _1MB];//此时发生YGC, a1+a2 --> S0, a3 --> old\n    }\n    public static void main(String[] args){\n        test_3_6_4();\n    }\n}\n```\n内存占用变化如下图所示.\n![ageToOld](/img/learn-jvm-1/maxTenuringThreshold.png)\n\n\n## 空间分配担保\n```java\npublic class Test_3_6_5 {\n    public static int _1MB = 1024 * 1024;\n    /**\n     * 测试空间分配担保\n     *\n     * 当出现大量对象在Minor GC后仍然存活的情况（最极端的情况就是内存回收后新生代中所有对象都存活），\n     * 就需要老年代进行分配担保，把Survivor无法容纳的对象直接进入老年代.\n     *\n     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails\n     * -Xms20M  --初始堆大小\n     * -Xmx20M  --最大堆大小\n     * -Xmn10M  --年轻代大小\n     */\n    public static void test_3_6_5(){\n        byte[] a1 = new byte[ 4 * _1MB ];\n        byte[] a2 = new byte[ 4 * _1MB ];\n        byte[] a3 = new byte[ 3 * _1MB];//没有GC, 直接在老年代分配空间给a3\n    }\n    public static void main(String[] args){\n        test_3_6_5();\n    }\n}\n```\n内存占用变化如下图所示.\n![ageToOld](/img/learn-jvm-1/allocateToOld.png)","source":"_posts/learn-jvm-1-内存分配与回收策略实战.md","raw":"---\ntitle: learn-jvm-1-内存分配与回收策略实战\ndate: 2017-03-08 13:21:49\ntags: [Java,jvm]\ncategories: Java\n---\n# 参考资料\n* [Java Garbage Collection Basics](http://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html#t3)\n* [JVM参数释义](http://www.cnblogs.com/redcreen/archive/2011/05/04/2037057.html)\n\n# Debug环境\n笔者是在IDEA + jvm调试工具环境下调试.\n* 虚拟机启动参数配置\n```\n-XX：+PrintGCDetails  --虚拟机在发生垃圾收集行为时打印内存回收日志，并且在进程退出的时候输出当前的内存各区域分配情况。\n-Xms20M  --初始堆大小\n-Xmx20M  --最大堆大小\n-Xmn10M  --年轻代大小\n-XX:+UseSerialGC --指定垃圾回收器为串行垃圾回收器\n-XX:PretenureSizeThreshold=3145728  --超过阀值(3MB)直接分配到老年代,只对Serial和ParNew两款收集器有效\n```\n* 常用调试命令\n\n```\n查看虚拟机唯一ID(Local Virtual Machine Identifier,LVMID),通常情况下与进程ID是一个值\n> jps\n```\n\n```\n查看堆栈信息\n> jmap\n> jmap -heap $LVMID  //查看堆内存\n> jmap -dump:format=b,file=xx.bin  $LVMID  //生成dump文件, 可用jhat命令分析生成的内存镜像文件\n```\n\n```\n查看堆栈内存变化信息\n> jstat\n> jstat -gcutil -h 20 $LVMID 500 1000     // (每隔20行显示表头,每隔500ms显示一次,一共显示1000次)\noption 可选\n    -gcnew\n    -gcnewcapacity\n    -gcold\n    -gcoldcapacity\n    -gcpermcapacity\n    -gcutil\n表头含义(https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jstat.html)\n-gcutil option\nSummary of garbage collection statistics.\nS0: Survivor space 0 utilization as a percentage of the space's current capacity.\nS1: Survivor space 1 utilization as a percentage of the space's current capacity.\nE: Eden space utilization as a percentage of the space's current capacity.\nO: Old space utilization as a percentage of the space's current capacity.\nM: Metaspace utilization as a percentage of the space's current capacity.\nCCS: Compressed class space utilization as a percentage.\nYGC: Number of young generation GC events.\nYGCT: Young generation garbage collection time.\nFGC: Number of full GC events.\nFGCT: Full garbage collection time.\nGCT: Total garbage collection time.\n```\n\n# 内存分配与回收策略\n\n## 对象优先在Eden分配\n```java\npublic class TestAllocation {\n    public static int _1MB = 1024 * 1024;\n    /**\n     * 测试垃圾回收\n     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails\n     * -Xms20M  --初始堆大小\n     * -Xmx20M  --最大堆大小\n     * -Xmn10M  --年轻代大小\n     * 这3个参数限制了Java堆大小为20MB,不可扩展,其中10MB分配给新生代,剩下的10MB分配给老年代。\n     * -XX:SurvivorRatio=8  决定了新生代中Eden区与一个Survivor区的空间比例是8:1\n     * -XX:+PrintGCDetails  告诉虚拟机在发生垃圾收集行为时打印内存回收日志，并且在进程退出的时候输出当前的内存各区域分配情况。\n     */\n    public static void test_3_6_1(){\n        byte[] a1 = new byte[2 * _1MB];\n        byte[] a2 = new byte[2 * _1MB];\n        byte[] a3 = new byte[2 * _1MB];\n        byte[] a4 = new byte[_1MB >> 1];\n        a1 = null;\n        a2 = null;\n        a3 = null;\n        byte[] a5 = new byte[_1MB >> 2];//第一次发生Minor GC (YGC)\n    }\n    public static void main(String[] args){\n        test_3_6_1();\n    }\n}\n```\n调试到第一次发生YGC的地方,GC导致的内存占用变化如下图所示.\n![YGC](/img/learn-jvm-1/firstYGC.png)\n\n## 直接分配大对象到老年代\n```java\npublic class Test_3_6_2 {\n    public static int _1MB = 1024 * 1024;\n    /**\n     * 测试直接分配大对象到老年代\n     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails -XX:+UseSerialGC -XX:PretenureSizeThreshold=3145728\n     * -Xms20M  --初始堆大小\n     * -Xmx20M  --最大堆大小\n     * -Xmn10M  --年轻代大小\n     * -XX:+UseSerialGC --指定垃圾回收器为串行垃圾回收器\n     * -XX:PretenureSizeThreshold=3145728  --超过阀值(3MB)直接分配到老年代,只对Serial和ParNew两款收集器有效\n     */\n    public static void test_3_6_2(){\n        byte[] b = new byte[4* _1MB]; //直接分配到老年代\n    }\n    public static void main(String[] args){\n        test_3_6_2();\n    }\n}\n```\n内存占用变化如下图所示.\n![YGC](/img/learn-jvm-1/allocateToOldGeneration.png)\n\n## 长期存活的对象进入老年代\n```java\npublic class Test_3_6_3 {\n    public static int _1MB = 1024 * 1024;\n    /**\n     * 测试长期存活的对象进入老年代\n     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails -XX:MaxTenuringThreshold=1 -XX:+PrintTenuringDistribution\n     * -Xms20M  --初始堆大小\n     * -Xmx20M  --最大堆大小\n     * -Xmn10M  --年轻代大小\n     * -XX:MaxTenuringThreshold=1 -- 对象转移到老年代阀值(每次垃圾回收对象age+1,age大于阀值时对象被移到老年代中)\n     * -XX:+PrintTenuringDistribution\n     */\n    public static void test_3_6_3(){\n        byte[] a1 = new byte[_1MB >> 2];\n        byte[] a2 = new byte[2 * _1MB];\n        byte[] a3 = new byte[2 * _1MB];\n        byte[] a4 = new byte[2 * _1MB];\n        a2 = null;\n        a3 = null;\n        a4 = null;\n\n        a2 = new byte[2 * _1MB];//第1次YGC\n        a3 = new byte[2 * _1MB];\n        a4 = new byte[2 * _1MB];\n        a2 = null;\n        a3 = null;\n        a4 = null;\n\n        a2 = new byte[2 * _1MB];//第2次YGC,a1被移到老年代\n    }\n    public static void main(String[] args){\n        test_3_6_3();\n    }\n}\n```\n内存占用变化如下图所示.\n![ageToOld](/img/learn-jvm-1/ageToOldGenerationMemory.png)\n\n第2次YDC后堆内存信息\n![ageToOld](/img/learn-jvm-1/ageToOldGenerationHeap.png)\n\n\n## 动态对象年龄判定\n```java\npublic class Test_3_6_4 {\n    public static int _1MB = 1024 * 1024;\n    /**\n     * 测试动态对象年龄判定\n     *\n     * 为了能更好地适应不同程序的内存状况，\n     * 虚拟机并不是永远地要求对象的年龄必须达到了MaxTenuringThreshold才能晋升老年代，\n     * 如果在Survivor空间中相同年龄所有对象大小的总和大于Survivor空间的一半，\n     * 年龄大于或等于该年龄的对象就可以直接进入老年代，\n     * 无须等到MaxTenuringThreshold中要求的年龄。\n     *\n     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails -XX:MaxTenuringThreshold=15 -XX:+PrintTenuringDistribution\n     * -Xms20M  --初始堆大小\n     * -Xmx20M  --最大堆大小\n     * -Xmn10M  --年轻代大小\n     * -XX:MaxTenuringThreshold=1 -- 对象转移到老年代阀值(每次垃圾回收对象age+1,age大于阀值时对象被移到老年代中)\n     * -XX:+PrintTenuringDistribution\n     */\n    public static void test_3_6_4(){\n        byte[] a1 = new byte[_1MB >> 2];\n        byte[] a2 = new byte[_1MB >> 2];//a1+a2大于survivo空间一半\n        byte[] a3 = new byte[3 * _1MB];\n        byte[] a4 = new byte[3 * _1MB];\n        a4 = null;\n        byte[] a5 = new byte[2 * _1MB];//此时发生YGC, a1+a2 --> S0, a3 --> old\n    }\n    public static void main(String[] args){\n        test_3_6_4();\n    }\n}\n```\n内存占用变化如下图所示.\n![ageToOld](/img/learn-jvm-1/maxTenuringThreshold.png)\n\n\n## 空间分配担保\n```java\npublic class Test_3_6_5 {\n    public static int _1MB = 1024 * 1024;\n    /**\n     * 测试空间分配担保\n     *\n     * 当出现大量对象在Minor GC后仍然存活的情况（最极端的情况就是内存回收后新生代中所有对象都存活），\n     * 就需要老年代进行分配担保，把Survivor无法容纳的对象直接进入老年代.\n     *\n     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails\n     * -Xms20M  --初始堆大小\n     * -Xmx20M  --最大堆大小\n     * -Xmn10M  --年轻代大小\n     */\n    public static void test_3_6_5(){\n        byte[] a1 = new byte[ 4 * _1MB ];\n        byte[] a2 = new byte[ 4 * _1MB ];\n        byte[] a3 = new byte[ 3 * _1MB];//没有GC, 直接在老年代分配空间给a3\n    }\n    public static void main(String[] args){\n        test_3_6_5();\n    }\n}\n```\n内存占用变化如下图所示.\n![ageToOld](/img/learn-jvm-1/allocateToOld.png)","slug":"learn-jvm-1-内存分配与回收策略实战","published":1,"updated":"2017-04-23T09:54:13.150Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v58000fgknx48usshk3","content":"<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"http://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html#t3\" target=\"_blank\" rel=\"external\">Java Garbage Collection Basics</a></li>\n<li><a href=\"http://www.cnblogs.com/redcreen/archive/2011/05/04/2037057.html\" target=\"_blank\" rel=\"external\">JVM参数释义</a></li>\n</ul>\n<h1 id=\"Debug环境\"><a href=\"#Debug环境\" class=\"headerlink\" title=\"Debug环境\"></a>Debug环境</h1><p>笔者是在IDEA + jvm调试工具环境下调试.</p>\n<ul>\n<li><p>虚拟机启动参数配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">-XX：+PrintGCDetails  --虚拟机在发生垃圾收集行为时打印内存回收日志，并且在进程退出的时候输出当前的内存各区域分配情况。</div><div class=\"line\">-Xms20M  --初始堆大小</div><div class=\"line\">-Xmx20M  --最大堆大小</div><div class=\"line\">-Xmn10M  --年轻代大小</div><div class=\"line\">-XX:+UseSerialGC --指定垃圾回收器为串行垃圾回收器</div><div class=\"line\">-XX:PretenureSizeThreshold=3145728  --超过阀值(3MB)直接分配到老年代,只对Serial和ParNew两款收集器有效</div></pre></td></tr></table></figure>\n</li>\n<li><p>常用调试命令</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">查看虚拟机唯一ID(Local Virtual Machine Identifier,LVMID),通常情况下与进程ID是一个值</div><div class=\"line\">&gt; jps</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">查看堆栈信息</div><div class=\"line\">&gt; jmap</div><div class=\"line\">&gt; jmap -heap $LVMID  //查看堆内存</div><div class=\"line\">&gt; jmap -dump:format=b,file=xx.bin  $LVMID  //生成dump文件, 可用jhat命令分析生成的内存镜像文件</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">查看堆栈内存变化信息</div><div class=\"line\">&gt; jstat</div><div class=\"line\">&gt; jstat -gcutil -h 20 $LVMID 500 1000     // (每隔20行显示表头,每隔500ms显示一次,一共显示1000次)</div><div class=\"line\">option 可选</div><div class=\"line\">    -gcnew</div><div class=\"line\">    -gcnewcapacity</div><div class=\"line\">    -gcold</div><div class=\"line\">    -gcoldcapacity</div><div class=\"line\">    -gcpermcapacity</div><div class=\"line\">    -gcutil</div><div class=\"line\">表头含义(https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jstat.html)</div><div class=\"line\">-gcutil option</div><div class=\"line\">Summary of garbage collection statistics.</div><div class=\"line\">S0: Survivor space 0 utilization as a percentage of the space&apos;s current capacity.</div><div class=\"line\">S1: Survivor space 1 utilization as a percentage of the space&apos;s current capacity.</div><div class=\"line\">E: Eden space utilization as a percentage of the space&apos;s current capacity.</div><div class=\"line\">O: Old space utilization as a percentage of the space&apos;s current capacity.</div><div class=\"line\">M: Metaspace utilization as a percentage of the space&apos;s current capacity.</div><div class=\"line\">CCS: Compressed class space utilization as a percentage.</div><div class=\"line\">YGC: Number of young generation GC events.</div><div class=\"line\">YGCT: Young generation garbage collection time.</div><div class=\"line\">FGC: Number of full GC events.</div><div class=\"line\">FGCT: Full garbage collection time.</div><div class=\"line\">GCT: Total garbage collection time.</div></pre></td></tr></table></figure>\n<h1 id=\"内存分配与回收策略\"><a href=\"#内存分配与回收策略\" class=\"headerlink\" title=\"内存分配与回收策略\"></a>内存分配与回收策略</h1><h2 id=\"对象优先在Eden分配\"><a href=\"#对象优先在Eden分配\" class=\"headerlink\" title=\"对象优先在Eden分配\"></a>对象优先在Eden分配</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestAllocation</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> _1MB = <span class=\"number\">1024</span> * <span class=\"number\">1024</span>;</div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 测试垃圾回收</div><div class=\"line\">     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails</div><div class=\"line\">     * -Xms20M  --初始堆大小</div><div class=\"line\">     * -Xmx20M  --最大堆大小</div><div class=\"line\">     * -Xmn10M  --年轻代大小</div><div class=\"line\">     * 这3个参数限制了Java堆大小为20MB,不可扩展,其中10MB分配给新生代,剩下的10MB分配给老年代。</div><div class=\"line\">     * -XX:SurvivorRatio=8  决定了新生代中Eden区与一个Survivor区的空间比例是8:1</div><div class=\"line\">     * -XX:+PrintGCDetails  告诉虚拟机在发生垃圾收集行为时打印内存回收日志，并且在进程退出的时候输出当前的内存各区域分配情况。</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">test_3_6_1</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a1 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a2 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a3 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a4 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[_1MB &gt;&gt; <span class=\"number\">1</span>];</div><div class=\"line\">        a1 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        a2 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        a3 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a5 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[_1MB &gt;&gt; <span class=\"number\">2</span>];<span class=\"comment\">//第一次发生Minor GC (YGC)</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        test_3_6_1();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>调试到第一次发生YGC的地方,GC导致的内存占用变化如下图所示.<br><img src=\"/img/learn-jvm-1/firstYGC.png\" alt=\"YGC\"></p>\n<h2 id=\"直接分配大对象到老年代\"><a href=\"#直接分配大对象到老年代\" class=\"headerlink\" title=\"直接分配大对象到老年代\"></a>直接分配大对象到老年代</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test_3_6_2</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> _1MB = <span class=\"number\">1024</span> * <span class=\"number\">1024</span>;</div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 测试直接分配大对象到老年代</div><div class=\"line\">     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails -XX:+UseSerialGC -XX:PretenureSizeThreshold=3145728</div><div class=\"line\">     * -Xms20M  --初始堆大小</div><div class=\"line\">     * -Xmx20M  --最大堆大小</div><div class=\"line\">     * -Xmn10M  --年轻代大小</div><div class=\"line\">     * -XX:+UseSerialGC --指定垃圾回收器为串行垃圾回收器</div><div class=\"line\">     * -XX:PretenureSizeThreshold=3145728  --超过阀值(3MB)直接分配到老年代,只对Serial和ParNew两款收集器有效</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">test_3_6_2</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] b = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">4</span>* _1MB]; <span class=\"comment\">//直接分配到老年代</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        test_3_6_2();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>内存占用变化如下图所示.<br><img src=\"/img/learn-jvm-1/allocateToOldGeneration.png\" alt=\"YGC\"></p>\n<h2 id=\"长期存活的对象进入老年代\"><a href=\"#长期存活的对象进入老年代\" class=\"headerlink\" title=\"长期存活的对象进入老年代\"></a>长期存活的对象进入老年代</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test_3_6_3</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> _1MB = <span class=\"number\">1024</span> * <span class=\"number\">1024</span>;</div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 测试长期存活的对象进入老年代</div><div class=\"line\">     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails -XX:MaxTenuringThreshold=1 -XX:+PrintTenuringDistribution</div><div class=\"line\">     * -Xms20M  --初始堆大小</div><div class=\"line\">     * -Xmx20M  --最大堆大小</div><div class=\"line\">     * -Xmn10M  --年轻代大小</div><div class=\"line\">     * -XX:MaxTenuringThreshold=1 -- 对象转移到老年代阀值(每次垃圾回收对象age+1,age大于阀值时对象被移到老年代中)</div><div class=\"line\">     * -XX:+PrintTenuringDistribution</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">test_3_6_3</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a1 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[_1MB &gt;&gt; <span class=\"number\">2</span>];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a2 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a3 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a4 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        a2 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        a3 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        a4 = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">        a2 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];<span class=\"comment\">//第1次YGC</span></div><div class=\"line\">        a3 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        a4 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        a2 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        a3 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        a4 = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">        a2 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];<span class=\"comment\">//第2次YGC,a1被移到老年代</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        test_3_6_3();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>内存占用变化如下图所示.<br><img src=\"/img/learn-jvm-1/ageToOldGenerationMemory.png\" alt=\"ageToOld\"></p>\n<p>第2次YDC后堆内存信息<br><img src=\"/img/learn-jvm-1/ageToOldGenerationHeap.png\" alt=\"ageToOld\"></p>\n<h2 id=\"动态对象年龄判定\"><a href=\"#动态对象年龄判定\" class=\"headerlink\" title=\"动态对象年龄判定\"></a>动态对象年龄判定</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test_3_6_4</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> _1MB = <span class=\"number\">1024</span> * <span class=\"number\">1024</span>;</div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 测试动态对象年龄判定</div><div class=\"line\">     *</div><div class=\"line\">     * 为了能更好地适应不同程序的内存状况，</div><div class=\"line\">     * 虚拟机并不是永远地要求对象的年龄必须达到了MaxTenuringThreshold才能晋升老年代，</div><div class=\"line\">     * 如果在Survivor空间中相同年龄所有对象大小的总和大于Survivor空间的一半，</div><div class=\"line\">     * 年龄大于或等于该年龄的对象就可以直接进入老年代，</div><div class=\"line\">     * 无须等到MaxTenuringThreshold中要求的年龄。</div><div class=\"line\">     *</div><div class=\"line\">     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails -XX:MaxTenuringThreshold=15 -XX:+PrintTenuringDistribution</div><div class=\"line\">     * -Xms20M  --初始堆大小</div><div class=\"line\">     * -Xmx20M  --最大堆大小</div><div class=\"line\">     * -Xmn10M  --年轻代大小</div><div class=\"line\">     * -XX:MaxTenuringThreshold=1 -- 对象转移到老年代阀值(每次垃圾回收对象age+1,age大于阀值时对象被移到老年代中)</div><div class=\"line\">     * -XX:+PrintTenuringDistribution</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">test_3_6_4</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a1 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[_1MB &gt;&gt; <span class=\"number\">2</span>];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a2 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[_1MB &gt;&gt; <span class=\"number\">2</span>];<span class=\"comment\">//a1+a2大于survivo空间一半</span></div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a3 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">3</span> * _1MB];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a4 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">3</span> * _1MB];</div><div class=\"line\">        a4 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a5 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];<span class=\"comment\">//此时发生YGC, a1+a2 --&gt; S0, a3 --&gt; old</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        test_3_6_4();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>内存占用变化如下图所示.<br><img src=\"/img/learn-jvm-1/maxTenuringThreshold.png\" alt=\"ageToOld\"></p>\n<h2 id=\"空间分配担保\"><a href=\"#空间分配担保\" class=\"headerlink\" title=\"空间分配担保\"></a>空间分配担保</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test_3_6_5</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> _1MB = <span class=\"number\">1024</span> * <span class=\"number\">1024</span>;</div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 测试空间分配担保</div><div class=\"line\">     *</div><div class=\"line\">     * 当出现大量对象在Minor GC后仍然存活的情况（最极端的情况就是内存回收后新生代中所有对象都存活），</div><div class=\"line\">     * 就需要老年代进行分配担保，把Survivor无法容纳的对象直接进入老年代.</div><div class=\"line\">     *</div><div class=\"line\">     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails</div><div class=\"line\">     * -Xms20M  --初始堆大小</div><div class=\"line\">     * -Xmx20M  --最大堆大小</div><div class=\"line\">     * -Xmn10M  --年轻代大小</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">test_3_6_5</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a1 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[ <span class=\"number\">4</span> * _1MB ];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a2 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[ <span class=\"number\">4</span> * _1MB ];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a3 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[ <span class=\"number\">3</span> * _1MB];<span class=\"comment\">//没有GC, 直接在老年代分配空间给a3</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        test_3_6_5();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>内存占用变化如下图所示.<br><img src=\"/img/learn-jvm-1/allocateToOld.png\" alt=\"ageToOld\"></p>\n","excerpt":"","more":"<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"http://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html#t3\">Java Garbage Collection Basics</a></li>\n<li><a href=\"http://www.cnblogs.com/redcreen/archive/2011/05/04/2037057.html\">JVM参数释义</a></li>\n</ul>\n<h1 id=\"Debug环境\"><a href=\"#Debug环境\" class=\"headerlink\" title=\"Debug环境\"></a>Debug环境</h1><p>笔者是在IDEA + jvm调试工具环境下调试.</p>\n<ul>\n<li><p>虚拟机启动参数配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">-XX：+PrintGCDetails  --虚拟机在发生垃圾收集行为时打印内存回收日志，并且在进程退出的时候输出当前的内存各区域分配情况。</div><div class=\"line\">-Xms20M  --初始堆大小</div><div class=\"line\">-Xmx20M  --最大堆大小</div><div class=\"line\">-Xmn10M  --年轻代大小</div><div class=\"line\">-XX:+UseSerialGC --指定垃圾回收器为串行垃圾回收器</div><div class=\"line\">-XX:PretenureSizeThreshold=3145728  --超过阀值(3MB)直接分配到老年代,只对Serial和ParNew两款收集器有效</div></pre></td></tr></table></figure>\n</li>\n<li><p>常用调试命令</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">查看虚拟机唯一ID(Local Virtual Machine Identifier,LVMID),通常情况下与进程ID是一个值</div><div class=\"line\">&gt; jps</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">查看堆栈信息</div><div class=\"line\">&gt; jmap</div><div class=\"line\">&gt; jmap -heap $LVMID  //查看堆内存</div><div class=\"line\">&gt; jmap -dump:format=b,file=xx.bin  $LVMID  //生成dump文件, 可用jhat命令分析生成的内存镜像文件</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">查看堆栈内存变化信息</div><div class=\"line\">&gt; jstat</div><div class=\"line\">&gt; jstat -gcutil -h 20 $LVMID 500 1000     // (每隔20行显示表头,每隔500ms显示一次,一共显示1000次)</div><div class=\"line\">option 可选</div><div class=\"line\">    -gcnew</div><div class=\"line\">    -gcnewcapacity</div><div class=\"line\">    -gcold</div><div class=\"line\">    -gcoldcapacity</div><div class=\"line\">    -gcpermcapacity</div><div class=\"line\">    -gcutil</div><div class=\"line\">表头含义(https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jstat.html)</div><div class=\"line\">-gcutil option</div><div class=\"line\">Summary of garbage collection statistics.</div><div class=\"line\">S0: Survivor space 0 utilization as a percentage of the space&apos;s current capacity.</div><div class=\"line\">S1: Survivor space 1 utilization as a percentage of the space&apos;s current capacity.</div><div class=\"line\">E: Eden space utilization as a percentage of the space&apos;s current capacity.</div><div class=\"line\">O: Old space utilization as a percentage of the space&apos;s current capacity.</div><div class=\"line\">M: Metaspace utilization as a percentage of the space&apos;s current capacity.</div><div class=\"line\">CCS: Compressed class space utilization as a percentage.</div><div class=\"line\">YGC: Number of young generation GC events.</div><div class=\"line\">YGCT: Young generation garbage collection time.</div><div class=\"line\">FGC: Number of full GC events.</div><div class=\"line\">FGCT: Full garbage collection time.</div><div class=\"line\">GCT: Total garbage collection time.</div></pre></td></tr></table></figure>\n<h1 id=\"内存分配与回收策略\"><a href=\"#内存分配与回收策略\" class=\"headerlink\" title=\"内存分配与回收策略\"></a>内存分配与回收策略</h1><h2 id=\"对象优先在Eden分配\"><a href=\"#对象优先在Eden分配\" class=\"headerlink\" title=\"对象优先在Eden分配\"></a>对象优先在Eden分配</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestAllocation</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> _1MB = <span class=\"number\">1024</span> * <span class=\"number\">1024</span>;</div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 测试垃圾回收</div><div class=\"line\">     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails</div><div class=\"line\">     * -Xms20M  --初始堆大小</div><div class=\"line\">     * -Xmx20M  --最大堆大小</div><div class=\"line\">     * -Xmn10M  --年轻代大小</div><div class=\"line\">     * 这3个参数限制了Java堆大小为20MB,不可扩展,其中10MB分配给新生代,剩下的10MB分配给老年代。</div><div class=\"line\">     * -XX:SurvivorRatio=8  决定了新生代中Eden区与一个Survivor区的空间比例是8:1</div><div class=\"line\">     * -XX:+PrintGCDetails  告诉虚拟机在发生垃圾收集行为时打印内存回收日志，并且在进程退出的时候输出当前的内存各区域分配情况。</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">test_3_6_1</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a1 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a2 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a3 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a4 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[_1MB &gt;&gt; <span class=\"number\">1</span>];</div><div class=\"line\">        a1 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        a2 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        a3 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a5 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[_1MB &gt;&gt; <span class=\"number\">2</span>];<span class=\"comment\">//第一次发生Minor GC (YGC)</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        test_3_6_1();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>调试到第一次发生YGC的地方,GC导致的内存占用变化如下图所示.<br><img src=\"/img/learn-jvm-1/firstYGC.png\" alt=\"YGC\"></p>\n<h2 id=\"直接分配大对象到老年代\"><a href=\"#直接分配大对象到老年代\" class=\"headerlink\" title=\"直接分配大对象到老年代\"></a>直接分配大对象到老年代</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test_3_6_2</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> _1MB = <span class=\"number\">1024</span> * <span class=\"number\">1024</span>;</div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 测试直接分配大对象到老年代</div><div class=\"line\">     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails -XX:+UseSerialGC -XX:PretenureSizeThreshold=3145728</div><div class=\"line\">     * -Xms20M  --初始堆大小</div><div class=\"line\">     * -Xmx20M  --最大堆大小</div><div class=\"line\">     * -Xmn10M  --年轻代大小</div><div class=\"line\">     * -XX:+UseSerialGC --指定垃圾回收器为串行垃圾回收器</div><div class=\"line\">     * -XX:PretenureSizeThreshold=3145728  --超过阀值(3MB)直接分配到老年代,只对Serial和ParNew两款收集器有效</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">test_3_6_2</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] b = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">4</span>* _1MB]; <span class=\"comment\">//直接分配到老年代</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        test_3_6_2();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>内存占用变化如下图所示.<br><img src=\"/img/learn-jvm-1/allocateToOldGeneration.png\" alt=\"YGC\"></p>\n<h2 id=\"长期存活的对象进入老年代\"><a href=\"#长期存活的对象进入老年代\" class=\"headerlink\" title=\"长期存活的对象进入老年代\"></a>长期存活的对象进入老年代</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test_3_6_3</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> _1MB = <span class=\"number\">1024</span> * <span class=\"number\">1024</span>;</div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 测试长期存活的对象进入老年代</div><div class=\"line\">     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails -XX:MaxTenuringThreshold=1 -XX:+PrintTenuringDistribution</div><div class=\"line\">     * -Xms20M  --初始堆大小</div><div class=\"line\">     * -Xmx20M  --最大堆大小</div><div class=\"line\">     * -Xmn10M  --年轻代大小</div><div class=\"line\">     * -XX:MaxTenuringThreshold=1 -- 对象转移到老年代阀值(每次垃圾回收对象age+1,age大于阀值时对象被移到老年代中)</div><div class=\"line\">     * -XX:+PrintTenuringDistribution</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">test_3_6_3</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a1 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[_1MB &gt;&gt; <span class=\"number\">2</span>];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a2 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a3 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a4 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        a2 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        a3 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        a4 = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">        a2 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];<span class=\"comment\">//第1次YGC</span></div><div class=\"line\">        a3 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        a4 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];</div><div class=\"line\">        a2 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        a3 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        a4 = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">        a2 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];<span class=\"comment\">//第2次YGC,a1被移到老年代</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        test_3_6_3();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>内存占用变化如下图所示.<br><img src=\"/img/learn-jvm-1/ageToOldGenerationMemory.png\" alt=\"ageToOld\"></p>\n<p>第2次YDC后堆内存信息<br><img src=\"/img/learn-jvm-1/ageToOldGenerationHeap.png\" alt=\"ageToOld\"></p>\n<h2 id=\"动态对象年龄判定\"><a href=\"#动态对象年龄判定\" class=\"headerlink\" title=\"动态对象年龄判定\"></a>动态对象年龄判定</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test_3_6_4</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> _1MB = <span class=\"number\">1024</span> * <span class=\"number\">1024</span>;</div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 测试动态对象年龄判定</div><div class=\"line\">     *</div><div class=\"line\">     * 为了能更好地适应不同程序的内存状况，</div><div class=\"line\">     * 虚拟机并不是永远地要求对象的年龄必须达到了MaxTenuringThreshold才能晋升老年代，</div><div class=\"line\">     * 如果在Survivor空间中相同年龄所有对象大小的总和大于Survivor空间的一半，</div><div class=\"line\">     * 年龄大于或等于该年龄的对象就可以直接进入老年代，</div><div class=\"line\">     * 无须等到MaxTenuringThreshold中要求的年龄。</div><div class=\"line\">     *</div><div class=\"line\">     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails -XX:MaxTenuringThreshold=15 -XX:+PrintTenuringDistribution</div><div class=\"line\">     * -Xms20M  --初始堆大小</div><div class=\"line\">     * -Xmx20M  --最大堆大小</div><div class=\"line\">     * -Xmn10M  --年轻代大小</div><div class=\"line\">     * -XX:MaxTenuringThreshold=1 -- 对象转移到老年代阀值(每次垃圾回收对象age+1,age大于阀值时对象被移到老年代中)</div><div class=\"line\">     * -XX:+PrintTenuringDistribution</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">test_3_6_4</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a1 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[_1MB &gt;&gt; <span class=\"number\">2</span>];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a2 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[_1MB &gt;&gt; <span class=\"number\">2</span>];<span class=\"comment\">//a1+a2大于survivo空间一半</span></div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a3 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">3</span> * _1MB];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a4 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">3</span> * _1MB];</div><div class=\"line\">        a4 = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a5 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2</span> * _1MB];<span class=\"comment\">//此时发生YGC, a1+a2 --&gt; S0, a3 --&gt; old</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        test_3_6_4();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>内存占用变化如下图所示.<br><img src=\"/img/learn-jvm-1/maxTenuringThreshold.png\" alt=\"ageToOld\"></p>\n<h2 id=\"空间分配担保\"><a href=\"#空间分配担保\" class=\"headerlink\" title=\"空间分配担保\"></a>空间分配担保</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test_3_6_5</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> _1MB = <span class=\"number\">1024</span> * <span class=\"number\">1024</span>;</div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 测试空间分配担保</div><div class=\"line\">     *</div><div class=\"line\">     * 当出现大量对象在Minor GC后仍然存活的情况（最极端的情况就是内存回收后新生代中所有对象都存活），</div><div class=\"line\">     * 就需要老年代进行分配担保，把Survivor无法容纳的对象直接进入老年代.</div><div class=\"line\">     *</div><div class=\"line\">     * jvm添加参数:-Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails</div><div class=\"line\">     * -Xms20M  --初始堆大小</div><div class=\"line\">     * -Xmx20M  --最大堆大小</div><div class=\"line\">     * -Xmn10M  --年轻代大小</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">test_3_6_5</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a1 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[ <span class=\"number\">4</span> * _1MB ];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a2 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[ <span class=\"number\">4</span> * _1MB ];</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] a3 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[ <span class=\"number\">3</span> * _1MB];<span class=\"comment\">//没有GC, 直接在老年代分配空间给a3</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        test_3_6_5();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>内存占用变化如下图所示.<br><img src=\"/img/learn-jvm-1/allocateToOld.png\" alt=\"ageToOld\"></p>\n"},{"title":"learn-jvm-2-BTrace初探","date":"2017-03-11T06:21:49.000Z","_content":"\n# 参考资料\n* [Btrace入门到熟练小工完全指南](http://calvin1978.blogcn.com/articles/btrace1.html)\n* [git - BTrace](https://github.com/btraceio/btrace)\n\n# 环境准备\n* jdk 1.8\n* jvisualvm 安装BTrace插件\n* Atom 用来写BTrace脚本,别用写字板写\n* BTrace的基本知识参考[Btrace入门到熟练小工完全指南](http://calvin1978.blogcn.com/articles/btrace1.html)\n\n# 计算方法调用过程时间\n利用@Duration来获取方法调用时间, 顺便验证Array和HashMap在较少量数据下,哪个容器查找更快.\n## 测试代码\n```java\npublic class BtraceDuration {\n    private static final int size = 400;\n    private static Map<Integer, Integer> map = new HashMap<>();\n    private static int[] arr = new int[size];\n\n    static {\n        for (int i = 0; i < size; i++) {\n            map.put(i, i);\n            arr[i] = i;\n        }\n    }\n\n    public static boolean findInMap(int v) {\n        return map.get(v) != null;\n    }\n\n    public static boolean findInArr(int v) {\n        for (int i : arr) {\n            if (i == v) return true;\n        }\n        return false;\n    }\n\n    public static void main(String[] args) throws IOException {\n        Scanner scanner = new Scanner(System.in);\n        int input;\n        while (true) {\n            input = scanner.nextInt(); // 用于阻塞程序,便于观察\n            findInArr(input);\n            findInMap(input);\n        }\n    }\n}\n```\n\n## BTrace代码\n```java\nimport com.sun.btrace.annotations.*;\nimport static com.sun.btrace.BTraceUtils.*;\n\n@BTrace\npublic class TracingScript {\n\n@OnMethod(clazz = \"/cn.stq.learn.jvm.btrace\\\\..*/\", method = \"/find.*/\", location = @Location(Kind.RETURN))\npublic static void testDuration(@ProbeClassName String pcn,@ProbeMethodName String pmn,  @Duration long duration, @Return boolean result) {\n    // duration 是纳秒,除以1000000得毫秒\n    print(strcat(pcn,\"#\"));\n    print(strcat(pmn, \": \"));\n    print(strcat(str(duration), \"ns  \"));\n    println(strcat(\"result->\", str(result)));\n}\n}\n```\n\n## 结果\n![Duration](/img/learn-jvm-2/Duration.png)\n\n***\n# 谁调用了这个函数\n\n## 测试代码\n见**_计算方法调用过程时间_**的测试代码\n\n## BTrace代码\n```java\nimport com.sun.btrace.annotations.*;\nimport static com.sun.btrace.BTraceUtils.*;\n\n@BTrace\npublic class TracingScript {\n  @OnMethod(clazz = \"/cn.stq.learn.jvm.btrace\\\\..*/\", method = \"/find.*/\")\n  public static void testInvokeStack(@ProbeClassName String pcn,@ProbeMethodName String pmn, int param) {\n    print(strcat(pcn,\"#\"));\n    println(strcat(pmn, \"\"));\n    println(strcat(\"param:\", str(param)));\n    jstack(); // 打印调用栈\n  }\n}\n```\n\n## 结果\n![invoke stack](/img/learn-jvm-2/invoke-stack.png)\n\n","source":"_posts/learn-jvm-2-BTrace初探.md","raw":"---\ntitle: learn-jvm-2-BTrace初探\ndate: 2017-03-11 14:21:49\ntags: [Java,jvm]\ncategories: Java\n---\n\n# 参考资料\n* [Btrace入门到熟练小工完全指南](http://calvin1978.blogcn.com/articles/btrace1.html)\n* [git - BTrace](https://github.com/btraceio/btrace)\n\n# 环境准备\n* jdk 1.8\n* jvisualvm 安装BTrace插件\n* Atom 用来写BTrace脚本,别用写字板写\n* BTrace的基本知识参考[Btrace入门到熟练小工完全指南](http://calvin1978.blogcn.com/articles/btrace1.html)\n\n# 计算方法调用过程时间\n利用@Duration来获取方法调用时间, 顺便验证Array和HashMap在较少量数据下,哪个容器查找更快.\n## 测试代码\n```java\npublic class BtraceDuration {\n    private static final int size = 400;\n    private static Map<Integer, Integer> map = new HashMap<>();\n    private static int[] arr = new int[size];\n\n    static {\n        for (int i = 0; i < size; i++) {\n            map.put(i, i);\n            arr[i] = i;\n        }\n    }\n\n    public static boolean findInMap(int v) {\n        return map.get(v) != null;\n    }\n\n    public static boolean findInArr(int v) {\n        for (int i : arr) {\n            if (i == v) return true;\n        }\n        return false;\n    }\n\n    public static void main(String[] args) throws IOException {\n        Scanner scanner = new Scanner(System.in);\n        int input;\n        while (true) {\n            input = scanner.nextInt(); // 用于阻塞程序,便于观察\n            findInArr(input);\n            findInMap(input);\n        }\n    }\n}\n```\n\n## BTrace代码\n```java\nimport com.sun.btrace.annotations.*;\nimport static com.sun.btrace.BTraceUtils.*;\n\n@BTrace\npublic class TracingScript {\n\n@OnMethod(clazz = \"/cn.stq.learn.jvm.btrace\\\\..*/\", method = \"/find.*/\", location = @Location(Kind.RETURN))\npublic static void testDuration(@ProbeClassName String pcn,@ProbeMethodName String pmn,  @Duration long duration, @Return boolean result) {\n    // duration 是纳秒,除以1000000得毫秒\n    print(strcat(pcn,\"#\"));\n    print(strcat(pmn, \": \"));\n    print(strcat(str(duration), \"ns  \"));\n    println(strcat(\"result->\", str(result)));\n}\n}\n```\n\n## 结果\n![Duration](/img/learn-jvm-2/Duration.png)\n\n***\n# 谁调用了这个函数\n\n## 测试代码\n见**_计算方法调用过程时间_**的测试代码\n\n## BTrace代码\n```java\nimport com.sun.btrace.annotations.*;\nimport static com.sun.btrace.BTraceUtils.*;\n\n@BTrace\npublic class TracingScript {\n  @OnMethod(clazz = \"/cn.stq.learn.jvm.btrace\\\\..*/\", method = \"/find.*/\")\n  public static void testInvokeStack(@ProbeClassName String pcn,@ProbeMethodName String pmn, int param) {\n    print(strcat(pcn,\"#\"));\n    println(strcat(pmn, \"\"));\n    println(strcat(\"param:\", str(param)));\n    jstack(); // 打印调用栈\n  }\n}\n```\n\n## 结果\n![invoke stack](/img/learn-jvm-2/invoke-stack.png)\n\n","slug":"learn-jvm-2-BTrace初探","published":1,"updated":"2017-04-23T09:54:13.158Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v5e000hgknxujatdv8o","content":"<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"http://calvin1978.blogcn.com/articles/btrace1.html\" target=\"_blank\" rel=\"external\">Btrace入门到熟练小工完全指南</a></li>\n<li><a href=\"https://github.com/btraceio/btrace\" target=\"_blank\" rel=\"external\">git - BTrace</a></li>\n</ul>\n<h1 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h1><ul>\n<li>jdk 1.8</li>\n<li>jvisualvm 安装BTrace插件</li>\n<li>Atom 用来写BTrace脚本,别用写字板写</li>\n<li>BTrace的基本知识参考<a href=\"http://calvin1978.blogcn.com/articles/btrace1.html\" target=\"_blank\" rel=\"external\">Btrace入门到熟练小工完全指南</a></li>\n</ul>\n<h1 id=\"计算方法调用过程时间\"><a href=\"#计算方法调用过程时间\" class=\"headerlink\" title=\"计算方法调用过程时间\"></a>计算方法调用过程时间</h1><p>利用@Duration来获取方法调用时间, 顺便验证Array和HashMap在较少量数据下,哪个容器查找更快.</p>\n<h2 id=\"测试代码\"><a href=\"#测试代码\" class=\"headerlink\" title=\"测试代码\"></a>测试代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BtraceDuration</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> size = <span class=\"number\">400</span>;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Map&lt;Integer, Integer&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[size];</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">static</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; size; i++) &#123;</div><div class=\"line\">            map.put(i, i);</div><div class=\"line\">            arr[i] = i;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">findInMap</span><span class=\"params\">(<span class=\"keyword\">int</span> v)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> map.get(v) != <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">findInArr</span><span class=\"params\">(<span class=\"keyword\">int</span> v)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i : arr) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (i == v) <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">        Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">        <span class=\"keyword\">int</span> input;</div><div class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">            input = scanner.nextInt(); <span class=\"comment\">// 用于阻塞程序,便于观察</span></div><div class=\"line\">            findInArr(input);</div><div class=\"line\">            findInMap(input);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"BTrace代码\"><a href=\"#BTrace代码\" class=\"headerlink\" title=\"BTrace代码\"></a>BTrace代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> com.sun.btrace.annotations.*;</div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> com.sun.btrace.BTraceUtils.*;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@BTrace</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TracingScript</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@OnMethod</span>(clazz = <span class=\"string\">\"/cn.stq.learn.jvm.btrace\\\\..*/\"</span>, method = <span class=\"string\">\"/find.*/\"</span>, location = <span class=\"meta\">@Location</span>(Kind.RETURN))</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">testDuration</span><span class=\"params\">(@ProbeClassName String pcn,@ProbeMethodName String pmn,  @Duration <span class=\"keyword\">long</span> duration, @Return <span class=\"keyword\">boolean</span> result)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// duration 是纳秒,除以1000000得毫秒</span></div><div class=\"line\">    print(strcat(pcn,<span class=\"string\">\"#\"</span>));</div><div class=\"line\">    print(strcat(pmn, <span class=\"string\">\": \"</span>));</div><div class=\"line\">    print(strcat(str(duration), <span class=\"string\">\"ns  \"</span>));</div><div class=\"line\">    println(strcat(<span class=\"string\">\"result-&gt;\"</span>, str(result)));</div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h2><p><img src=\"/img/learn-jvm-2/Duration.png\" alt=\"Duration\"></p>\n<hr>\n<h1 id=\"谁调用了这个函数\"><a href=\"#谁调用了这个函数\" class=\"headerlink\" title=\"谁调用了这个函数\"></a>谁调用了这个函数</h1><h2 id=\"测试代码-1\"><a href=\"#测试代码-1\" class=\"headerlink\" title=\"测试代码\"></a>测试代码</h2><p>见<strong><em>计算方法调用过程时间</em></strong>的测试代码</p>\n<h2 id=\"BTrace代码-1\"><a href=\"#BTrace代码-1\" class=\"headerlink\" title=\"BTrace代码\"></a>BTrace代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> com.sun.btrace.annotations.*;</div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> com.sun.btrace.BTraceUtils.*;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@BTrace</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TracingScript</span> </span>&#123;</div><div class=\"line\">  <span class=\"meta\">@OnMethod</span>(clazz = <span class=\"string\">\"/cn.stq.learn.jvm.btrace\\\\..*/\"</span>, method = <span class=\"string\">\"/find.*/\"</span>)</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">testInvokeStack</span><span class=\"params\">(@ProbeClassName String pcn,@ProbeMethodName String pmn, <span class=\"keyword\">int</span> param)</span> </span>&#123;</div><div class=\"line\">    print(strcat(pcn,<span class=\"string\">\"#\"</span>));</div><div class=\"line\">    println(strcat(pmn, <span class=\"string\">\"\"</span>));</div><div class=\"line\">    println(strcat(<span class=\"string\">\"param:\"</span>, str(param)));</div><div class=\"line\">    jstack(); <span class=\"comment\">// 打印调用栈</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"结果-1\"><a href=\"#结果-1\" class=\"headerlink\" title=\"结果\"></a>结果</h2><p><img src=\"/img/learn-jvm-2/invoke-stack.png\" alt=\"invoke stack\"></p>\n","excerpt":"","more":"<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"http://calvin1978.blogcn.com/articles/btrace1.html\">Btrace入门到熟练小工完全指南</a></li>\n<li><a href=\"https://github.com/btraceio/btrace\">git - BTrace</a></li>\n</ul>\n<h1 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h1><ul>\n<li>jdk 1.8</li>\n<li>jvisualvm 安装BTrace插件</li>\n<li>Atom 用来写BTrace脚本,别用写字板写</li>\n<li>BTrace的基本知识参考<a href=\"http://calvin1978.blogcn.com/articles/btrace1.html\">Btrace入门到熟练小工完全指南</a></li>\n</ul>\n<h1 id=\"计算方法调用过程时间\"><a href=\"#计算方法调用过程时间\" class=\"headerlink\" title=\"计算方法调用过程时间\"></a>计算方法调用过程时间</h1><p>利用@Duration来获取方法调用时间, 顺便验证Array和HashMap在较少量数据下,哪个容器查找更快.</p>\n<h2 id=\"测试代码\"><a href=\"#测试代码\" class=\"headerlink\" title=\"测试代码\"></a>测试代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BtraceDuration</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> size = <span class=\"number\">400</span>;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Map&lt;Integer, Integer&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[size];</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">static</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; size; i++) &#123;</div><div class=\"line\">            map.put(i, i);</div><div class=\"line\">            arr[i] = i;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">findInMap</span><span class=\"params\">(<span class=\"keyword\">int</span> v)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> map.get(v) != <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">findInArr</span><span class=\"params\">(<span class=\"keyword\">int</span> v)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i : arr) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (i == v) <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">        Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">        <span class=\"keyword\">int</span> input;</div><div class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">            input = scanner.nextInt(); <span class=\"comment\">// 用于阻塞程序,便于观察</span></div><div class=\"line\">            findInArr(input);</div><div class=\"line\">            findInMap(input);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"BTrace代码\"><a href=\"#BTrace代码\" class=\"headerlink\" title=\"BTrace代码\"></a>BTrace代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> com.sun.btrace.annotations.*;</div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> com.sun.btrace.BTraceUtils.*;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@BTrace</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TracingScript</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@OnMethod</span>(clazz = <span class=\"string\">\"/cn.stq.learn.jvm.btrace\\\\..*/\"</span>, method = <span class=\"string\">\"/find.*/\"</span>, location = <span class=\"meta\">@Location</span>(Kind.RETURN))</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">testDuration</span><span class=\"params\">(@ProbeClassName String pcn,@ProbeMethodName String pmn,  @Duration <span class=\"keyword\">long</span> duration, @Return <span class=\"keyword\">boolean</span> result)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// duration 是纳秒,除以1000000得毫秒</span></div><div class=\"line\">    print(strcat(pcn,<span class=\"string\">\"#\"</span>));</div><div class=\"line\">    print(strcat(pmn, <span class=\"string\">\": \"</span>));</div><div class=\"line\">    print(strcat(str(duration), <span class=\"string\">\"ns  \"</span>));</div><div class=\"line\">    println(strcat(<span class=\"string\">\"result-&gt;\"</span>, str(result)));</div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h2><p><img src=\"/img/learn-jvm-2/Duration.png\" alt=\"Duration\"></p>\n<hr>\n<h1 id=\"谁调用了这个函数\"><a href=\"#谁调用了这个函数\" class=\"headerlink\" title=\"谁调用了这个函数\"></a>谁调用了这个函数</h1><h2 id=\"测试代码-1\"><a href=\"#测试代码-1\" class=\"headerlink\" title=\"测试代码\"></a>测试代码</h2><p>见<strong><em>计算方法调用过程时间</em></strong>的测试代码</p>\n<h2 id=\"BTrace代码-1\"><a href=\"#BTrace代码-1\" class=\"headerlink\" title=\"BTrace代码\"></a>BTrace代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> com.sun.btrace.annotations.*;</div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> com.sun.btrace.BTraceUtils.*;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@BTrace</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TracingScript</span> </span>&#123;</div><div class=\"line\">  <span class=\"meta\">@OnMethod</span>(clazz = <span class=\"string\">\"/cn.stq.learn.jvm.btrace\\\\..*/\"</span>, method = <span class=\"string\">\"/find.*/\"</span>)</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">testInvokeStack</span><span class=\"params\">(@ProbeClassName String pcn,@ProbeMethodName String pmn, <span class=\"keyword\">int</span> param)</span> </span>&#123;</div><div class=\"line\">    print(strcat(pcn,<span class=\"string\">\"#\"</span>));</div><div class=\"line\">    println(strcat(pmn, <span class=\"string\">\"\"</span>));</div><div class=\"line\">    println(strcat(<span class=\"string\">\"param:\"</span>, str(param)));</div><div class=\"line\">    jstack(); <span class=\"comment\">// 打印调用栈</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"结果-1\"><a href=\"#结果-1\" class=\"headerlink\" title=\"结果\"></a>结果</h2><p><img src=\"/img/learn-jvm-2/invoke-stack.png\" alt=\"invoke stack\"></p>\n"},{"title":"learn-jvm-3-垃圾回收","_content":"\n\n# 何时进行回收\n一般来说，当某个区域内存不够的时候就会进行垃圾收集\n\n# 如何判断一块内存是垃圾?\n\n## 引用计数\n当有对象引用自身时，就会计数器加1，删除一个引用就减一，当计数为0时即可判断为垃圾.\n存在的问题:引用计数存在循环引用问题\n\n## 可达性分析(根搜索算法)\n通过一些根节点开始，分析引用链，没有被引用的对象都可以被标记为垃圾对象。\nJVM普遍采用该算法\n\n### GC Roots\nJava虚拟机将以下对象定义为 GC Roots:\n* Java虚拟机栈中引用的对象：比如方法里面定义这种局部变量 User user= new User();\n* 静态属性引用的对象：比如 private static User user = new User();\n* 常量引用的对象：比如 private static final  User user = new User();\n* 本地方法栈中引用的对象\n\n### 引用链不可达标记\n即便引用链不可达，也并不意味着该对象一定会被回收，因为回收要经历**两次标记**过程！\n**第一次标记**：对象进行根搜索之后，如果发现没有与GC Roots 相连接的引用链，就会被第一次标记并进行筛选。所谓筛选，就是检查此对象是否有必要执行finalize方法，如果对象定义了该方法并且没有执行过。那么该对象就会被放入到一个队列F-Queue，随后会有一个低优先级的线程去执行这个队列里面对象的finalize方法\n**第二次标记**：JVM 将对F-Queue队列里面的对象进行第二次标记。如果对象不想被回收，那么就得在finalize方法里面拯救自己，否则，这些对象就真的会被回收\n\n---\n# 垃圾回收算法\n## 标记清除\n对非垃圾对象进行标记，清除其他的对象。\n存在的问题:这种方式对对内存空间造成空隙，即内存碎片，最终导致有空余空间，但没有连续的足够大小的空间分配内存。\n\n## 标记整理\n标记非垃圾对象后，将这些对象整理好，依次排列内存。\n存在的问题:这样内存就是整齐的了。但是因为会造成对象移动，所以效率会有降低。~\n\n## 标记清除整理\n即组合`标记清除`和`标记整理`两种方式，在若干次清除后进行一次整理。\n\n## 复制\n划分成两个相同大小的区域，收集时，将第一个区域的活对象复制到另一个区域.\n这样不会有内存碎片问题。但是最多只能存放一半内存,而且所有的活对象都需要拷贝。\n将内存分为一块较大的eden空间和2块较少的survivor空间，\n每次使用eden和其中一块survivor，\n当回收时将eden和 survivor还存活的对象一次过拷贝到另外一块survivor空间上，\n然后清理掉eden和用过的survivor。\nSun Hotspot虚拟机默认eden和survivor的大小比例是8:1，也就是每次只有10%的内存是“浪费”的。\n\n## 分代回收\n* 对于新生代的对象回收,使用复制算法\n* 对于老年代的对象回收,使用标记-清除算法","source":"_posts/learn-jvm-3-垃圾回收.md","raw":"---\ntitle: learn-jvm-3-垃圾回收\ntags: [Java,jvm]\ncategories: Java\n---\n\n\n# 何时进行回收\n一般来说，当某个区域内存不够的时候就会进行垃圾收集\n\n# 如何判断一块内存是垃圾?\n\n## 引用计数\n当有对象引用自身时，就会计数器加1，删除一个引用就减一，当计数为0时即可判断为垃圾.\n存在的问题:引用计数存在循环引用问题\n\n## 可达性分析(根搜索算法)\n通过一些根节点开始，分析引用链，没有被引用的对象都可以被标记为垃圾对象。\nJVM普遍采用该算法\n\n### GC Roots\nJava虚拟机将以下对象定义为 GC Roots:\n* Java虚拟机栈中引用的对象：比如方法里面定义这种局部变量 User user= new User();\n* 静态属性引用的对象：比如 private static User user = new User();\n* 常量引用的对象：比如 private static final  User user = new User();\n* 本地方法栈中引用的对象\n\n### 引用链不可达标记\n即便引用链不可达，也并不意味着该对象一定会被回收，因为回收要经历**两次标记**过程！\n**第一次标记**：对象进行根搜索之后，如果发现没有与GC Roots 相连接的引用链，就会被第一次标记并进行筛选。所谓筛选，就是检查此对象是否有必要执行finalize方法，如果对象定义了该方法并且没有执行过。那么该对象就会被放入到一个队列F-Queue，随后会有一个低优先级的线程去执行这个队列里面对象的finalize方法\n**第二次标记**：JVM 将对F-Queue队列里面的对象进行第二次标记。如果对象不想被回收，那么就得在finalize方法里面拯救自己，否则，这些对象就真的会被回收\n\n---\n# 垃圾回收算法\n## 标记清除\n对非垃圾对象进行标记，清除其他的对象。\n存在的问题:这种方式对对内存空间造成空隙，即内存碎片，最终导致有空余空间，但没有连续的足够大小的空间分配内存。\n\n## 标记整理\n标记非垃圾对象后，将这些对象整理好，依次排列内存。\n存在的问题:这样内存就是整齐的了。但是因为会造成对象移动，所以效率会有降低。~\n\n## 标记清除整理\n即组合`标记清除`和`标记整理`两种方式，在若干次清除后进行一次整理。\n\n## 复制\n划分成两个相同大小的区域，收集时，将第一个区域的活对象复制到另一个区域.\n这样不会有内存碎片问题。但是最多只能存放一半内存,而且所有的活对象都需要拷贝。\n将内存分为一块较大的eden空间和2块较少的survivor空间，\n每次使用eden和其中一块survivor，\n当回收时将eden和 survivor还存活的对象一次过拷贝到另外一块survivor空间上，\n然后清理掉eden和用过的survivor。\nSun Hotspot虚拟机默认eden和survivor的大小比例是8:1，也就是每次只有10%的内存是“浪费”的。\n\n## 分代回收\n* 对于新生代的对象回收,使用复制算法\n* 对于老年代的对象回收,使用标记-清除算法","slug":"learn-jvm-3-垃圾回收","published":1,"date":"2017-04-23T10:25:04.341Z","updated":"2017-04-23T09:54:13.162Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v5j000lgknxbk984d3y","content":"<h1 id=\"何时进行回收\"><a href=\"#何时进行回收\" class=\"headerlink\" title=\"何时进行回收\"></a>何时进行回收</h1><p>一般来说，当某个区域内存不够的时候就会进行垃圾收集</p>\n<h1 id=\"如何判断一块内存是垃圾\"><a href=\"#如何判断一块内存是垃圾\" class=\"headerlink\" title=\"如何判断一块内存是垃圾?\"></a>如何判断一块内存是垃圾?</h1><h2 id=\"引用计数\"><a href=\"#引用计数\" class=\"headerlink\" title=\"引用计数\"></a>引用计数</h2><p>当有对象引用自身时，就会计数器加1，删除一个引用就减一，当计数为0时即可判断为垃圾.<br>存在的问题:引用计数存在循环引用问题</p>\n<h2 id=\"可达性分析-根搜索算法\"><a href=\"#可达性分析-根搜索算法\" class=\"headerlink\" title=\"可达性分析(根搜索算法)\"></a>可达性分析(根搜索算法)</h2><p>通过一些根节点开始，分析引用链，没有被引用的对象都可以被标记为垃圾对象。<br>JVM普遍采用该算法</p>\n<h3 id=\"GC-Roots\"><a href=\"#GC-Roots\" class=\"headerlink\" title=\"GC Roots\"></a>GC Roots</h3><p>Java虚拟机将以下对象定义为 GC Roots:</p>\n<ul>\n<li>Java虚拟机栈中引用的对象：比如方法里面定义这种局部变量 User user= new User();</li>\n<li>静态属性引用的对象：比如 private static User user = new User();</li>\n<li>常量引用的对象：比如 private static final  User user = new User();</li>\n<li>本地方法栈中引用的对象</li>\n</ul>\n<h3 id=\"引用链不可达标记\"><a href=\"#引用链不可达标记\" class=\"headerlink\" title=\"引用链不可达标记\"></a>引用链不可达标记</h3><p>即便引用链不可达，也并不意味着该对象一定会被回收，因为回收要经历<strong>两次标记</strong>过程！<br><strong>第一次标记</strong>：对象进行根搜索之后，如果发现没有与GC Roots 相连接的引用链，就会被第一次标记并进行筛选。所谓筛选，就是检查此对象是否有必要执行finalize方法，如果对象定义了该方法并且没有执行过。那么该对象就会被放入到一个队列F-Queue，随后会有一个低优先级的线程去执行这个队列里面对象的finalize方法<br><strong>第二次标记</strong>：JVM 将对F-Queue队列里面的对象进行第二次标记。如果对象不想被回收，那么就得在finalize方法里面拯救自己，否则，这些对象就真的会被回收</p>\n<hr>\n<h1 id=\"垃圾回收算法\"><a href=\"#垃圾回收算法\" class=\"headerlink\" title=\"垃圾回收算法\"></a>垃圾回收算法</h1><h2 id=\"标记清除\"><a href=\"#标记清除\" class=\"headerlink\" title=\"标记清除\"></a>标记清除</h2><p>对非垃圾对象进行标记，清除其他的对象。<br>存在的问题:这种方式对对内存空间造成空隙，即内存碎片，最终导致有空余空间，但没有连续的足够大小的空间分配内存。</p>\n<h2 id=\"标记整理\"><a href=\"#标记整理\" class=\"headerlink\" title=\"标记整理\"></a>标记整理</h2><p>标记非垃圾对象后，将这些对象整理好，依次排列内存。<br>存在的问题:这样内存就是整齐的了。但是因为会造成对象移动，所以效率会有降低。~</p>\n<h2 id=\"标记清除整理\"><a href=\"#标记清除整理\" class=\"headerlink\" title=\"标记清除整理\"></a>标记清除整理</h2><p>即组合<code>标记清除</code>和<code>标记整理</code>两种方式，在若干次清除后进行一次整理。</p>\n<h2 id=\"复制\"><a href=\"#复制\" class=\"headerlink\" title=\"复制\"></a>复制</h2><p>划分成两个相同大小的区域，收集时，将第一个区域的活对象复制到另一个区域.<br>这样不会有内存碎片问题。但是最多只能存放一半内存,而且所有的活对象都需要拷贝。<br>将内存分为一块较大的eden空间和2块较少的survivor空间，<br>每次使用eden和其中一块survivor，<br>当回收时将eden和 survivor还存活的对象一次过拷贝到另外一块survivor空间上，<br>然后清理掉eden和用过的survivor。<br>Sun Hotspot虚拟机默认eden和survivor的大小比例是8:1，也就是每次只有10%的内存是“浪费”的。</p>\n<h2 id=\"分代回收\"><a href=\"#分代回收\" class=\"headerlink\" title=\"分代回收\"></a>分代回收</h2><ul>\n<li>对于新生代的对象回收,使用复制算法</li>\n<li>对于老年代的对象回收,使用标记-清除算法</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"何时进行回收\"><a href=\"#何时进行回收\" class=\"headerlink\" title=\"何时进行回收\"></a>何时进行回收</h1><p>一般来说，当某个区域内存不够的时候就会进行垃圾收集</p>\n<h1 id=\"如何判断一块内存是垃圾\"><a href=\"#如何判断一块内存是垃圾\" class=\"headerlink\" title=\"如何判断一块内存是垃圾?\"></a>如何判断一块内存是垃圾?</h1><h2 id=\"引用计数\"><a href=\"#引用计数\" class=\"headerlink\" title=\"引用计数\"></a>引用计数</h2><p>当有对象引用自身时，就会计数器加1，删除一个引用就减一，当计数为0时即可判断为垃圾.<br>存在的问题:引用计数存在循环引用问题</p>\n<h2 id=\"可达性分析-根搜索算法\"><a href=\"#可达性分析-根搜索算法\" class=\"headerlink\" title=\"可达性分析(根搜索算法)\"></a>可达性分析(根搜索算法)</h2><p>通过一些根节点开始，分析引用链，没有被引用的对象都可以被标记为垃圾对象。<br>JVM普遍采用该算法</p>\n<h3 id=\"GC-Roots\"><a href=\"#GC-Roots\" class=\"headerlink\" title=\"GC Roots\"></a>GC Roots</h3><p>Java虚拟机将以下对象定义为 GC Roots:</p>\n<ul>\n<li>Java虚拟机栈中引用的对象：比如方法里面定义这种局部变量 User user= new User();</li>\n<li>静态属性引用的对象：比如 private static User user = new User();</li>\n<li>常量引用的对象：比如 private static final  User user = new User();</li>\n<li>本地方法栈中引用的对象</li>\n</ul>\n<h3 id=\"引用链不可达标记\"><a href=\"#引用链不可达标记\" class=\"headerlink\" title=\"引用链不可达标记\"></a>引用链不可达标记</h3><p>即便引用链不可达，也并不意味着该对象一定会被回收，因为回收要经历<strong>两次标记</strong>过程！<br><strong>第一次标记</strong>：对象进行根搜索之后，如果发现没有与GC Roots 相连接的引用链，就会被第一次标记并进行筛选。所谓筛选，就是检查此对象是否有必要执行finalize方法，如果对象定义了该方法并且没有执行过。那么该对象就会被放入到一个队列F-Queue，随后会有一个低优先级的线程去执行这个队列里面对象的finalize方法<br><strong>第二次标记</strong>：JVM 将对F-Queue队列里面的对象进行第二次标记。如果对象不想被回收，那么就得在finalize方法里面拯救自己，否则，这些对象就真的会被回收</p>\n<hr>\n<h1 id=\"垃圾回收算法\"><a href=\"#垃圾回收算法\" class=\"headerlink\" title=\"垃圾回收算法\"></a>垃圾回收算法</h1><h2 id=\"标记清除\"><a href=\"#标记清除\" class=\"headerlink\" title=\"标记清除\"></a>标记清除</h2><p>对非垃圾对象进行标记，清除其他的对象。<br>存在的问题:这种方式对对内存空间造成空隙，即内存碎片，最终导致有空余空间，但没有连续的足够大小的空间分配内存。</p>\n<h2 id=\"标记整理\"><a href=\"#标记整理\" class=\"headerlink\" title=\"标记整理\"></a>标记整理</h2><p>标记非垃圾对象后，将这些对象整理好，依次排列内存。<br>存在的问题:这样内存就是整齐的了。但是因为会造成对象移动，所以效率会有降低。~</p>\n<h2 id=\"标记清除整理\"><a href=\"#标记清除整理\" class=\"headerlink\" title=\"标记清除整理\"></a>标记清除整理</h2><p>即组合<code>标记清除</code>和<code>标记整理</code>两种方式，在若干次清除后进行一次整理。</p>\n<h2 id=\"复制\"><a href=\"#复制\" class=\"headerlink\" title=\"复制\"></a>复制</h2><p>划分成两个相同大小的区域，收集时，将第一个区域的活对象复制到另一个区域.<br>这样不会有内存碎片问题。但是最多只能存放一半内存,而且所有的活对象都需要拷贝。<br>将内存分为一块较大的eden空间和2块较少的survivor空间，<br>每次使用eden和其中一块survivor，<br>当回收时将eden和 survivor还存活的对象一次过拷贝到另外一块survivor空间上，<br>然后清理掉eden和用过的survivor。<br>Sun Hotspot虚拟机默认eden和survivor的大小比例是8:1，也就是每次只有10%的内存是“浪费”的。</p>\n<h2 id=\"分代回收\"><a href=\"#分代回收\" class=\"headerlink\" title=\"分代回收\"></a>分代回收</h2><ul>\n<li>对于新生代的对象回收,使用复制算法</li>\n<li>对于老年代的对象回收,使用标记-清除算法</li>\n</ul>\n"},{"title":"learn-jvm-4-类加载","date":"2017-04-19T06:49:57.000Z","_content":"\n# 加载\n![加载](/img/learn-jvm-4/1.加载.png)\n\n# 验证\n![加载](/img/learn-jvm-4/2.验证.png)\n\n# 准备\n![加载](/img/learn-jvm-4/3.准备.png)\n\n# 解析\n![加载](/img/learn-jvm-4/4.解析.png)\n\n# 初始化\n![加载](/img/learn-jvm-4/5.初始化.png)\n\n# 使用\n\n# 卸载\n\n","source":"_posts/learn-jvm-4-类加载.md","raw":"---\ntitle: learn-jvm-4-类加载\ndate: 2017-04-19 14:49:57\ntags: [Java,jvm]\ncategories: Java\n---\n\n# 加载\n![加载](/img/learn-jvm-4/1.加载.png)\n\n# 验证\n![加载](/img/learn-jvm-4/2.验证.png)\n\n# 准备\n![加载](/img/learn-jvm-4/3.准备.png)\n\n# 解析\n![加载](/img/learn-jvm-4/4.解析.png)\n\n# 初始化\n![加载](/img/learn-jvm-4/5.初始化.png)\n\n# 使用\n\n# 卸载\n\n","slug":"learn-jvm-4-类加载","published":1,"updated":"2017-04-23T09:54:13.166Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v5m000ngknxurn6a8dv","content":"<h1 id=\"加载\"><a href=\"#加载\" class=\"headerlink\" title=\"加载\"></a>加载</h1><p><img src=\"/img/learn-jvm-4/1.加载.png\" alt=\"加载\"></p>\n<h1 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h1><p><img src=\"/img/learn-jvm-4/2.验证.png\" alt=\"加载\"></p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p><img src=\"/img/learn-jvm-4/3.准备.png\" alt=\"加载\"></p>\n<h1 id=\"解析\"><a href=\"#解析\" class=\"headerlink\" title=\"解析\"></a>解析</h1><p><img src=\"/img/learn-jvm-4/4.解析.png\" alt=\"加载\"></p>\n<h1 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h1><p><img src=\"/img/learn-jvm-4/5.初始化.png\" alt=\"加载\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><h1 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h1>","excerpt":"","more":"<h1 id=\"加载\"><a href=\"#加载\" class=\"headerlink\" title=\"加载\"></a>加载</h1><p><img src=\"/img/learn-jvm-4/1.加载.png\" alt=\"加载\"></p>\n<h1 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h1><p><img src=\"/img/learn-jvm-4/2.验证.png\" alt=\"加载\"></p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p><img src=\"/img/learn-jvm-4/3.准备.png\" alt=\"加载\"></p>\n<h1 id=\"解析\"><a href=\"#解析\" class=\"headerlink\" title=\"解析\"></a>解析</h1><p><img src=\"/img/learn-jvm-4/4.解析.png\" alt=\"加载\"></p>\n<h1 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h1><p><img src=\"/img/learn-jvm-4/5.初始化.png\" alt=\"加载\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><h1 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h1>"},{"title":"learn RabbitMQ","date":"2017-04-16T07:30:36.000Z","_content":"\n# Exchange\n![exchange](/img/learn-mq-rabbitMQ/exchange.png)\n\n# RPC\n![exchange](/img/learn-mq-rabbitMQ/rpc.png)","source":"_posts/learn-mq-rabbitMQ.md","raw":"---\ntitle: learn RabbitMQ\ndate: 2017-04-16 15:30:36\ntags: [MQ,RabbitMQ]\ncategories: MQ\n---\n\n# Exchange\n![exchange](/img/learn-mq-rabbitMQ/exchange.png)\n\n# RPC\n![exchange](/img/learn-mq-rabbitMQ/rpc.png)","slug":"learn-mq-rabbitMQ","published":1,"updated":"2017-04-23T09:54:13.170Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v5r000qgknx00noe06m","content":"<h1 id=\"Exchange\"><a href=\"#Exchange\" class=\"headerlink\" title=\"Exchange\"></a>Exchange</h1><p><img src=\"/img/learn-mq-rabbitMQ/exchange.png\" alt=\"exchange\"></p>\n<h1 id=\"RPC\"><a href=\"#RPC\" class=\"headerlink\" title=\"RPC\"></a>RPC</h1><p><img src=\"/img/learn-mq-rabbitMQ/rpc.png\" alt=\"exchange\"></p>\n","excerpt":"","more":"<h1 id=\"Exchange\"><a href=\"#Exchange\" class=\"headerlink\" title=\"Exchange\"></a>Exchange</h1><p><img src=\"/img/learn-mq-rabbitMQ/exchange.png\" alt=\"exchange\"></p>\n<h1 id=\"RPC\"><a href=\"#RPC\" class=\"headerlink\" title=\"RPC\"></a>RPC</h1><p><img src=\"/img/learn-mq-rabbitMQ/rpc.png\" alt=\"exchange\"></p>\n"},{"title":"SQL基础-ORACLE","date":"2017-02-08T08:50:35.000Z","_content":"\n### 正则表达式\n```SQL\n--1,REGEXP_LIKE\n--默认是大小写敏感的\n--REGEXP_LIKE(ACCT_TYPE,'E','i')是大小写不敏感\nSELECT ACCT_NBR from CCS_ACCT\nwhere REGEXP_LIKE(ACCT_NBR,'1$');\n\n--2,REGEXP_INSTR\n--查找第一次出现匹配模式是index\nSELECT REGEXP_INSTR(112233,'233')  from dual;\n--3,REGEXP_SUBSTR\n--查找匹配的字串\nSELECT REGEXP_SUBSTR(112233,'[1-2]*') from dual;\n--4,REGEXP_REPLACE\n--替换匹配字串的值\nSELECT REGEXP_REPLACE(112233,'1{2}','aa') from dual;\n```\n\n### 集合操作\n```SQL\n--1,合集;UNION (去重),UNION ALL(不去重)\n--UNION\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'0$'))\nUNION\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'10$'))\n;\n--UNION ALL\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'0$'))\nUNION ALL\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'10$'))\n;\n\n--2,交集; INTERSECT\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'0$'))\nINTERSECT\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'10$'))\n;\n\n--3.差集. MINUS\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'0$'))\nMINUS\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'10$'))\n;\n```\n\n### 字符串操作\n```SQL\n--1.字符串拼接;concat,ORACLE只能拼接两个field\nSELECT concat('a','b') from dual;\n\n--2.字符串长度,length\nSELECT length('aaa') from dual;\n\n--3.字符串比较\nselect case when 'aa'<'ab' then 'true' else 'false' end as result from dual;\n\n--4.字符串裁剪\nSELECT SUBSTR('123456789',1,4) from dual;\n\n--5.长度不足左右填充; lpad,rpad ,长度不足则填充,长度够则截取指定长度.\nSELECT lpad('1234',10,'*'),lpad('1234',2,'*') from dual;\n\n--6.左右删除;LTRIM,RTRIM\nselect RTRIM('00111333111','(0|1)'),LTRIM('00111333111','(0|1)') from dual;\n\n--7.字符串替换;REPLACE\nSELECT REPLACE('123','2','a') from dual;\n\n--8.查找第一次出现的位置\nselect INSTR('abcdc', 'c')from dual;\n```\n\n### 时间日期操作\n```SQL\n--1.系统时间,时间戳\nSELECT sysdate,SYSTIMESTAMP,CURRENT_DATE\nfrom dual;\n--2.字符串转日期\nSELECT TO_DATE('2016-12-06 20:15:30','yyyy-mm-dd hh24:mi:ss'),TO_DATE('20161206','yyyy-mm-dd'),cast('11:15:30'as time)\nfrom dual\n;\n--3.日期转字符串, 获取年月日,季度.\nSELECT to_char(sysdate,'yyyy-mm') from dual;\nSELECT to_char(sysdate,'q') from dual;\nSELECT extract(YEAR from sysdate),sysdate from dual;--取出时间中的Year\nSELECT extract(MONTH from sysdate),sysdate from dual;--取出时间中的Month\nSELECT extract(DAY from sysdate),sysdate from dual;--取出时间中的Day\n--4.日期增加\nselect sysdate,add_months(sysdate,12) from dual;        --加1年\nselect sysdate,add_months(sysdate,1) from dual;        --加1月\nselect sysdate,to_char(sysdate+7,'yyyy-mm-dd HH24:MI:SS') from dual;   --加1星期\nselect sysdate,to_char(sysdate+1,'yyyy-mm-dd HH24:MI:SS') from dual;   --加1天\nselect sysdate,to_char(sysdate+1/24,'yyyy-mm-dd HH24:MI:SS') from dual;  --加1小时\nselect sysdate,to_char(sysdate+1/24/60,'yyyy-mm-dd HH24:MI:SS') from dual;  --加1分钟\nselect sysdate,to_char(sysdate+1/24/60/60,'yyyy-mm-dd HH24:MI:SS') from dual;  --加1秒\n--5.日期间隔\nselect months_between(to_date('2006-04-20','yyyy-mm-dd'),to_date('2005-05-20','yyyy-mm-dd')) mon_betw from dual; --时间间隔(月)\nselect ceil(((to_date('2008-05-02 00:00' , 'yyyy-mm-dd hh24:mi:ss') - to_date('2008-05-01 22:58' , 'yyyy-mm-dd hh24:mi:ss'))) * 24 * 60) FROM DUAL; --间隔分钟\n\n```\n\n### CAST转换操作\n```SQL\n--1.转换为Integer\nselect cast('111' as int) from dual;\n--2.转换为NUMBER\nselect cast('111.333' as  NUMBER(5,2)) from dual;\nSELECT to_number('123') from dual;\n```\n\n### 分组操作\n```SQL\n--按季度分组统计\nselect to_CHAR(a.SETUP_DATE,'yyyy-q') m,count(*)\nfrom CCS_ACCT a\nwhere 1=1\ngroup by to_CHAR(a.SETUP_DATE,'yyyy-q');\n```\n\n### ALL ANY EXISTS 操作符\n```SQL\n--1.ALL.字段值与ALL结果集中进行比较,与每一个比较都成立,则结果为真.\n--与not in 差别. 下面的例子,ALL将返回结果集,not in返回空集.\nSELECT * from CCS_ACCT\nWHERE ACCT_NBR <> ALL(SELECT ACCT_NBR from CCS_ACCT where ACCT_NBR in (1123000,1123001,NULL))\n;\n\nSELECT * from CCS_ACCT\nWHERE ACCT_NBR not in (1123000,1123001,NULL);\n--2.Any,字段值与any结果集中进行比较,只要有一个成立,则结果为真.\nSELECT * from CCS_ACCT\nWHERE CURR_BAL > any(SELECT CURR_BAL from CCS_ACCT where ROWNUM<5)\n\n--3.EXISTS\nSELECT sysdate from dual where EXISTS(select 1 from dual where 1=1);\nSELECT sysdate from dual where EXISTS(select 1 from dual where 1<>1);\n```\n\n### trunc、round、ceil/floor\n```SQL\n--1.trunc函数\n--trunc函数处理数字 TRUNC(number[,decimals])\nselect trunc(123.89,0) from dual; -- 123\nselect trunc(123.123,2) from dual; --123.12\nselect trunc(123.123,-1) from dual; --120\n--trunc函数处理日期 TRUNC(date,[fmt]), sysdate为2017-02-15 10:30:09\nSELECT trunc(sysdate,'yyyy'),sysdate from dual;  --返回当年第一天. 2017-01-01 00:00:00\nSELECT trunc(sysdate,'mm'),sysdate from dual; --返回当月第一天. 2017-02-01 00:00:00\nSELECT trunc(sysdate,'d'),sysdate from dual; --返回当前星期的第一天. 2017-02-12 00:00:00\nSELECT trunc(sysdate,'dd') from dual;  --截取到当天0点0分0秒,2018-08-25 00:00:00\nSELECT trunc(sysdate,'hh24') from dual;  --截取到小时（当前小时，零分零秒）,2018-08-25 04:00:00\nSELECT trunc(sysdate,'mi') from dual; --截取到分（当前分，零秒）2018-08-25 04:28:00\nSELECT trunc(sysdate,'ss') from dual ;--报错，没有精确到秒的格式\n\n--2.round 函数\n--round函数处理数字 round( number, [ decimal_places ] ), decimal_places为保留的小数位数\n--传回一个数值，该数值是按照指定的小数位元数进行四舍五入运算的结果。\nselect round(123.456, 0) from dual;     --回传 123\nselect round(123.456, 1) from dual;     --回传 123.5\nselect round(-123.456, 2) from dual;    --回传 -123.46\n--round函数处理日期 round(date,fmt) ,fmt为四舍五入的单位.\n--月\nselect round(to_date('20170215','yyyymmdd'),'mm') from dual;    -- 2017-02-01\nselect round(to_date('20170216','yyyymmdd'),'mm') from dual;    -- 2017-03-01\n--日\nselect round(to_date('20170215 11:20','yyyymmdd hh24:mi'),'dd') from dual;    -- 2017-02-15 00:00:00\nselect round(to_date('20170215 12:20','yyyymmdd hh24:mi'),'dd') from dual;    -- 2017-02-16 00:00:00\n--小时\nselect round(to_date('20170215 11:20','yyyymmdd hh24:mi'),'hh') from dual;    -- 2017-02-15 11:00:00\nselect round(to_date('20170215 11:30','yyyymmdd hh24:mi'),'hh') from dual;    -- 2017-02-15 12:00:00\n\n--3.ceil/floor 函数\n--处理数字\nselect ceil(123.456) from dual;     --回传 124\nselect floor(123.456) from dual;     --回传 123\n--处理日期\nselect ceil(to_date('20170215 11:00','yyyymmdd hh24:mi') - to_date('20170214 11:00','yyyymmdd hh24:mi')) from dual; -- return 1\nselect ceil(to_date('20170215 11:00','yyyymmdd hh24:mi') - to_date('20170214 10:59','yyyymmdd hh24:mi')) from dual; -- return 2\nselect floor(to_date('20170215 11:00','yyyymmdd hh24:mi') - to_date('20170214 10:59','yyyymmdd hh24:mi')) from dual; -- return 1\n```\n\n### 常用函数\n```SQL\n--1.NVL NVL2 NULLIF\n--NVL(e1,e2), 相当于 e1 != NULL ? e1 : e2\nSELECT NVL(NULL,'0'), NVL('123','1') from dual;\n--NVL(field,e1,e2) 相当于 field != NULL ? e1:e2\nSELECT NVL2(NULL,'not-null','null'),NVL2('a','not-null','null') from dual;\n--NULLIF(e1,e2), 相当于 e1==e2 ? NULL : e1\nSELECT NULLIF('a','a'),NULLIF('a','b'),NULLIF('b','a') from dual;\n\n--2. (+)的使用,哪边有（+）哪边就允许为空\nSELECT a.*, b.* from a,b where a.ID(+) = b.ID ; --就是一个右连接，等同于select a.*, b.* from a right join b on a.ID=b.ID\nSELECT a.*, b.* from a,b where a.ID = b.ID (+);  --就是一个左连接，等同于select a.*, b.* from a left join b on a.ID=b.ID\n\n--3. decode\nSELECT decode('a','a',96,'b',97) from dual; -- 96\nSELECT decode('b','a',96,'b',97) from dual; -- 97\n\n```\n","source":"_posts/learn-oracle.md","raw":"---\ntitle: SQL基础-ORACLE\ndate: 2017-02-08 16:50:35\ntags: [SQL,ORACLE]\ncategories: SQL\n---\n\n### 正则表达式\n```SQL\n--1,REGEXP_LIKE\n--默认是大小写敏感的\n--REGEXP_LIKE(ACCT_TYPE,'E','i')是大小写不敏感\nSELECT ACCT_NBR from CCS_ACCT\nwhere REGEXP_LIKE(ACCT_NBR,'1$');\n\n--2,REGEXP_INSTR\n--查找第一次出现匹配模式是index\nSELECT REGEXP_INSTR(112233,'233')  from dual;\n--3,REGEXP_SUBSTR\n--查找匹配的字串\nSELECT REGEXP_SUBSTR(112233,'[1-2]*') from dual;\n--4,REGEXP_REPLACE\n--替换匹配字串的值\nSELECT REGEXP_REPLACE(112233,'1{2}','aa') from dual;\n```\n\n### 集合操作\n```SQL\n--1,合集;UNION (去重),UNION ALL(不去重)\n--UNION\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'0$'))\nUNION\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'10$'))\n;\n--UNION ALL\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'0$'))\nUNION ALL\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'10$'))\n;\n\n--2,交集; INTERSECT\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'0$'))\nINTERSECT\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'10$'))\n;\n\n--3.差集. MINUS\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'0$'))\nMINUS\n(SELECT ACCT_NBR from CCS_ACCT c WHERE REGEXP_LIKE(ACCT_NBR,'10$'))\n;\n```\n\n### 字符串操作\n```SQL\n--1.字符串拼接;concat,ORACLE只能拼接两个field\nSELECT concat('a','b') from dual;\n\n--2.字符串长度,length\nSELECT length('aaa') from dual;\n\n--3.字符串比较\nselect case when 'aa'<'ab' then 'true' else 'false' end as result from dual;\n\n--4.字符串裁剪\nSELECT SUBSTR('123456789',1,4) from dual;\n\n--5.长度不足左右填充; lpad,rpad ,长度不足则填充,长度够则截取指定长度.\nSELECT lpad('1234',10,'*'),lpad('1234',2,'*') from dual;\n\n--6.左右删除;LTRIM,RTRIM\nselect RTRIM('00111333111','(0|1)'),LTRIM('00111333111','(0|1)') from dual;\n\n--7.字符串替换;REPLACE\nSELECT REPLACE('123','2','a') from dual;\n\n--8.查找第一次出现的位置\nselect INSTR('abcdc', 'c')from dual;\n```\n\n### 时间日期操作\n```SQL\n--1.系统时间,时间戳\nSELECT sysdate,SYSTIMESTAMP,CURRENT_DATE\nfrom dual;\n--2.字符串转日期\nSELECT TO_DATE('2016-12-06 20:15:30','yyyy-mm-dd hh24:mi:ss'),TO_DATE('20161206','yyyy-mm-dd'),cast('11:15:30'as time)\nfrom dual\n;\n--3.日期转字符串, 获取年月日,季度.\nSELECT to_char(sysdate,'yyyy-mm') from dual;\nSELECT to_char(sysdate,'q') from dual;\nSELECT extract(YEAR from sysdate),sysdate from dual;--取出时间中的Year\nSELECT extract(MONTH from sysdate),sysdate from dual;--取出时间中的Month\nSELECT extract(DAY from sysdate),sysdate from dual;--取出时间中的Day\n--4.日期增加\nselect sysdate,add_months(sysdate,12) from dual;        --加1年\nselect sysdate,add_months(sysdate,1) from dual;        --加1月\nselect sysdate,to_char(sysdate+7,'yyyy-mm-dd HH24:MI:SS') from dual;   --加1星期\nselect sysdate,to_char(sysdate+1,'yyyy-mm-dd HH24:MI:SS') from dual;   --加1天\nselect sysdate,to_char(sysdate+1/24,'yyyy-mm-dd HH24:MI:SS') from dual;  --加1小时\nselect sysdate,to_char(sysdate+1/24/60,'yyyy-mm-dd HH24:MI:SS') from dual;  --加1分钟\nselect sysdate,to_char(sysdate+1/24/60/60,'yyyy-mm-dd HH24:MI:SS') from dual;  --加1秒\n--5.日期间隔\nselect months_between(to_date('2006-04-20','yyyy-mm-dd'),to_date('2005-05-20','yyyy-mm-dd')) mon_betw from dual; --时间间隔(月)\nselect ceil(((to_date('2008-05-02 00:00' , 'yyyy-mm-dd hh24:mi:ss') - to_date('2008-05-01 22:58' , 'yyyy-mm-dd hh24:mi:ss'))) * 24 * 60) FROM DUAL; --间隔分钟\n\n```\n\n### CAST转换操作\n```SQL\n--1.转换为Integer\nselect cast('111' as int) from dual;\n--2.转换为NUMBER\nselect cast('111.333' as  NUMBER(5,2)) from dual;\nSELECT to_number('123') from dual;\n```\n\n### 分组操作\n```SQL\n--按季度分组统计\nselect to_CHAR(a.SETUP_DATE,'yyyy-q') m,count(*)\nfrom CCS_ACCT a\nwhere 1=1\ngroup by to_CHAR(a.SETUP_DATE,'yyyy-q');\n```\n\n### ALL ANY EXISTS 操作符\n```SQL\n--1.ALL.字段值与ALL结果集中进行比较,与每一个比较都成立,则结果为真.\n--与not in 差别. 下面的例子,ALL将返回结果集,not in返回空集.\nSELECT * from CCS_ACCT\nWHERE ACCT_NBR <> ALL(SELECT ACCT_NBR from CCS_ACCT where ACCT_NBR in (1123000,1123001,NULL))\n;\n\nSELECT * from CCS_ACCT\nWHERE ACCT_NBR not in (1123000,1123001,NULL);\n--2.Any,字段值与any结果集中进行比较,只要有一个成立,则结果为真.\nSELECT * from CCS_ACCT\nWHERE CURR_BAL > any(SELECT CURR_BAL from CCS_ACCT where ROWNUM<5)\n\n--3.EXISTS\nSELECT sysdate from dual where EXISTS(select 1 from dual where 1=1);\nSELECT sysdate from dual where EXISTS(select 1 from dual where 1<>1);\n```\n\n### trunc、round、ceil/floor\n```SQL\n--1.trunc函数\n--trunc函数处理数字 TRUNC(number[,decimals])\nselect trunc(123.89,0) from dual; -- 123\nselect trunc(123.123,2) from dual; --123.12\nselect trunc(123.123,-1) from dual; --120\n--trunc函数处理日期 TRUNC(date,[fmt]), sysdate为2017-02-15 10:30:09\nSELECT trunc(sysdate,'yyyy'),sysdate from dual;  --返回当年第一天. 2017-01-01 00:00:00\nSELECT trunc(sysdate,'mm'),sysdate from dual; --返回当月第一天. 2017-02-01 00:00:00\nSELECT trunc(sysdate,'d'),sysdate from dual; --返回当前星期的第一天. 2017-02-12 00:00:00\nSELECT trunc(sysdate,'dd') from dual;  --截取到当天0点0分0秒,2018-08-25 00:00:00\nSELECT trunc(sysdate,'hh24') from dual;  --截取到小时（当前小时，零分零秒）,2018-08-25 04:00:00\nSELECT trunc(sysdate,'mi') from dual; --截取到分（当前分，零秒）2018-08-25 04:28:00\nSELECT trunc(sysdate,'ss') from dual ;--报错，没有精确到秒的格式\n\n--2.round 函数\n--round函数处理数字 round( number, [ decimal_places ] ), decimal_places为保留的小数位数\n--传回一个数值，该数值是按照指定的小数位元数进行四舍五入运算的结果。\nselect round(123.456, 0) from dual;     --回传 123\nselect round(123.456, 1) from dual;     --回传 123.5\nselect round(-123.456, 2) from dual;    --回传 -123.46\n--round函数处理日期 round(date,fmt) ,fmt为四舍五入的单位.\n--月\nselect round(to_date('20170215','yyyymmdd'),'mm') from dual;    -- 2017-02-01\nselect round(to_date('20170216','yyyymmdd'),'mm') from dual;    -- 2017-03-01\n--日\nselect round(to_date('20170215 11:20','yyyymmdd hh24:mi'),'dd') from dual;    -- 2017-02-15 00:00:00\nselect round(to_date('20170215 12:20','yyyymmdd hh24:mi'),'dd') from dual;    -- 2017-02-16 00:00:00\n--小时\nselect round(to_date('20170215 11:20','yyyymmdd hh24:mi'),'hh') from dual;    -- 2017-02-15 11:00:00\nselect round(to_date('20170215 11:30','yyyymmdd hh24:mi'),'hh') from dual;    -- 2017-02-15 12:00:00\n\n--3.ceil/floor 函数\n--处理数字\nselect ceil(123.456) from dual;     --回传 124\nselect floor(123.456) from dual;     --回传 123\n--处理日期\nselect ceil(to_date('20170215 11:00','yyyymmdd hh24:mi') - to_date('20170214 11:00','yyyymmdd hh24:mi')) from dual; -- return 1\nselect ceil(to_date('20170215 11:00','yyyymmdd hh24:mi') - to_date('20170214 10:59','yyyymmdd hh24:mi')) from dual; -- return 2\nselect floor(to_date('20170215 11:00','yyyymmdd hh24:mi') - to_date('20170214 10:59','yyyymmdd hh24:mi')) from dual; -- return 1\n```\n\n### 常用函数\n```SQL\n--1.NVL NVL2 NULLIF\n--NVL(e1,e2), 相当于 e1 != NULL ? e1 : e2\nSELECT NVL(NULL,'0'), NVL('123','1') from dual;\n--NVL(field,e1,e2) 相当于 field != NULL ? e1:e2\nSELECT NVL2(NULL,'not-null','null'),NVL2('a','not-null','null') from dual;\n--NULLIF(e1,e2), 相当于 e1==e2 ? NULL : e1\nSELECT NULLIF('a','a'),NULLIF('a','b'),NULLIF('b','a') from dual;\n\n--2. (+)的使用,哪边有（+）哪边就允许为空\nSELECT a.*, b.* from a,b where a.ID(+) = b.ID ; --就是一个右连接，等同于select a.*, b.* from a right join b on a.ID=b.ID\nSELECT a.*, b.* from a,b where a.ID = b.ID (+);  --就是一个左连接，等同于select a.*, b.* from a left join b on a.ID=b.ID\n\n--3. decode\nSELECT decode('a','a',96,'b',97) from dual; -- 96\nSELECT decode('b','a',96,'b',97) from dual; -- 97\n\n```\n","slug":"learn-oracle","published":1,"updated":"2017-04-23T09:54:13.174Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v5v000tgknxp3evu0oa","content":"<h3 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1,REGEXP_LIKE</span></div><div class=\"line\"><span class=\"comment\">--默认是大小写敏感的</span></div><div class=\"line\"><span class=\"comment\">--REGEXP_LIKE(ACCT_TYPE,'E','i')是大小写不敏感</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT</div><div class=\"line\"><span class=\"keyword\">where</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'1$'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--2,REGEXP_INSTR</span></div><div class=\"line\"><span class=\"comment\">--查找第一次出现匹配模式是index</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> REGEXP_INSTR(<span class=\"number\">112233</span>,<span class=\"string\">'233'</span>)  <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"comment\">--3,REGEXP_SUBSTR</span></div><div class=\"line\"><span class=\"comment\">--查找匹配的字串</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> REGEXP_SUBSTR(<span class=\"number\">112233</span>,<span class=\"string\">'[1-2]*'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"comment\">--4,REGEXP_REPLACE</span></div><div class=\"line\"><span class=\"comment\">--替换匹配字串的值</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> REGEXP_REPLACE(<span class=\"number\">112233</span>,<span class=\"string\">'1&#123;2&#125;'</span>,<span class=\"string\">'aa'</span>) <span class=\"keyword\">from</span> dual;</div></pre></td></tr></table></figure>\n<h3 id=\"集合操作\"><a href=\"#集合操作\" class=\"headerlink\" title=\"集合操作\"></a>集合操作</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1,合集;UNION (去重),UNION ALL(不去重)</span></div><div class=\"line\"><span class=\"comment\">--UNION</span></div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'0$'</span>))</div><div class=\"line\"><span class=\"keyword\">UNION</span></div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'10$'</span>))</div><div class=\"line\">;</div><div class=\"line\"><span class=\"comment\">--UNION ALL</span></div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'0$'</span>))</div><div class=\"line\"><span class=\"keyword\">UNION</span> ALL</div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'10$'</span>))</div><div class=\"line\">;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--2,交集; INTERSECT</span></div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'0$'</span>))</div><div class=\"line\"><span class=\"keyword\">INTERSECT</span></div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'10$'</span>))</div><div class=\"line\">;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--3.差集. MINUS</span></div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'0$'</span>))</div><div class=\"line\"><span class=\"keyword\">MINUS</span></div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'10$'</span>))</div><div class=\"line\">;</div></pre></td></tr></table></figure>\n<h3 id=\"字符串操作\"><a href=\"#字符串操作\" class=\"headerlink\" title=\"字符串操作\"></a>字符串操作</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1.字符串拼接;concat,ORACLE只能拼接两个field</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">concat</span>(<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--2.字符串长度,length</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">length</span>(<span class=\"string\">'aaa'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--3.字符串比较</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">case</span> <span class=\"keyword\">when</span> <span class=\"string\">'aa'</span>&lt;<span class=\"string\">'ab'</span> <span class=\"keyword\">then</span> <span class=\"string\">'true'</span> <span class=\"keyword\">else</span> <span class=\"string\">'false'</span> <span class=\"keyword\">end</span> <span class=\"keyword\">as</span> <span class=\"keyword\">result</span> <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--4.字符串裁剪</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">SUBSTR</span>(<span class=\"string\">'123456789'</span>,<span class=\"number\">1</span>,<span class=\"number\">4</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--5.长度不足左右填充; lpad,rpad ,长度不足则填充,长度够则截取指定长度.</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">lpad</span>(<span class=\"string\">'1234'</span>,<span class=\"number\">10</span>,<span class=\"string\">'*'</span>),<span class=\"keyword\">lpad</span>(<span class=\"string\">'1234'</span>,<span class=\"number\">2</span>,<span class=\"string\">'*'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--6.左右删除;LTRIM,RTRIM</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">RTRIM</span>(<span class=\"string\">'00111333111'</span>,<span class=\"string\">'(0|1)'</span>),<span class=\"keyword\">LTRIM</span>(<span class=\"string\">'00111333111'</span>,<span class=\"string\">'(0|1)'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--7.字符串替换;REPLACE</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">REPLACE</span>(<span class=\"string\">'123'</span>,<span class=\"string\">'2'</span>,<span class=\"string\">'a'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--8.查找第一次出现的位置</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">INSTR</span>(<span class=\"string\">'abcdc'</span>, <span class=\"string\">'c'</span>)<span class=\"keyword\">from</span> dual;</div></pre></td></tr></table></figure>\n<h3 id=\"时间日期操作\"><a href=\"#时间日期操作\" class=\"headerlink\" title=\"时间日期操作\"></a>时间日期操作</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1.系统时间,时间戳</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">sysdate</span>,SYSTIMESTAMP,<span class=\"keyword\">CURRENT_DATE</span></div><div class=\"line\"><span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"comment\">--2.字符串转日期</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">TO_DATE</span>(<span class=\"string\">'2016-12-06 20:15:30'</span>,<span class=\"string\">'yyyy-mm-dd hh24:mi:ss'</span>),<span class=\"keyword\">TO_DATE</span>(<span class=\"string\">'20161206'</span>,<span class=\"string\">'yyyy-mm-dd'</span>),<span class=\"keyword\">cast</span>(<span class=\"string\">'11:15:30'</span><span class=\"keyword\">as</span> <span class=\"keyword\">time</span>)</div><div class=\"line\"><span class=\"keyword\">from</span> dual</div><div class=\"line\">;</div><div class=\"line\"><span class=\"comment\">--3.日期转字符串, 获取年月日,季度.</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> to_char(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'yyyy-mm'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"keyword\">SELECT</span> to_char(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'q'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">extract</span>(<span class=\"keyword\">YEAR</span> <span class=\"keyword\">from</span> <span class=\"keyword\">sysdate</span>),<span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual;<span class=\"comment\">--取出时间中的Year</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">extract</span>(<span class=\"keyword\">MONTH</span> <span class=\"keyword\">from</span> <span class=\"keyword\">sysdate</span>),<span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual;<span class=\"comment\">--取出时间中的Month</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">extract</span>(<span class=\"keyword\">DAY</span> <span class=\"keyword\">from</span> <span class=\"keyword\">sysdate</span>),<span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual;<span class=\"comment\">--取出时间中的Day</span></div><div class=\"line\"><span class=\"comment\">--4.日期增加</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sysdate</span>,add_months(<span class=\"keyword\">sysdate</span>,<span class=\"number\">12</span>) <span class=\"keyword\">from</span> dual;        <span class=\"comment\">--加1年</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sysdate</span>,add_months(<span class=\"keyword\">sysdate</span>,<span class=\"number\">1</span>) <span class=\"keyword\">from</span> dual;        <span class=\"comment\">--加1月</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sysdate</span>,to_char(<span class=\"keyword\">sysdate</span>+<span class=\"number\">7</span>,<span class=\"string\">'yyyy-mm-dd HH24:MI:SS'</span>) <span class=\"keyword\">from</span> dual;   <span class=\"comment\">--加1星期</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sysdate</span>,to_char(<span class=\"keyword\">sysdate</span>+<span class=\"number\">1</span>,<span class=\"string\">'yyyy-mm-dd HH24:MI:SS'</span>) <span class=\"keyword\">from</span> dual;   <span class=\"comment\">--加1天</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sysdate</span>,to_char(<span class=\"keyword\">sysdate</span>+<span class=\"number\">1</span>/<span class=\"number\">24</span>,<span class=\"string\">'yyyy-mm-dd HH24:MI:SS'</span>) <span class=\"keyword\">from</span> dual;  <span class=\"comment\">--加1小时</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sysdate</span>,to_char(<span class=\"keyword\">sysdate</span>+<span class=\"number\">1</span>/<span class=\"number\">24</span>/<span class=\"number\">60</span>,<span class=\"string\">'yyyy-mm-dd HH24:MI:SS'</span>) <span class=\"keyword\">from</span> dual;  <span class=\"comment\">--加1分钟</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sysdate</span>,to_char(<span class=\"keyword\">sysdate</span>+<span class=\"number\">1</span>/<span class=\"number\">24</span>/<span class=\"number\">60</span>/<span class=\"number\">60</span>,<span class=\"string\">'yyyy-mm-dd HH24:MI:SS'</span>) <span class=\"keyword\">from</span> dual;  <span class=\"comment\">--加1秒</span></div><div class=\"line\"><span class=\"comment\">--5.日期间隔</span></div><div class=\"line\"><span class=\"keyword\">select</span> months_between(<span class=\"keyword\">to_date</span>(<span class=\"string\">'2006-04-20'</span>,<span class=\"string\">'yyyy-mm-dd'</span>),<span class=\"keyword\">to_date</span>(<span class=\"string\">'2005-05-20'</span>,<span class=\"string\">'yyyy-mm-dd'</span>)) mon_betw <span class=\"keyword\">from</span> dual; <span class=\"comment\">--时间间隔(月)</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">ceil</span>(((<span class=\"keyword\">to_date</span>(<span class=\"string\">'2008-05-02 00:00'</span> , <span class=\"string\">'yyyy-mm-dd hh24:mi:ss'</span>) - <span class=\"keyword\">to_date</span>(<span class=\"string\">'2008-05-01 22:58'</span> , <span class=\"string\">'yyyy-mm-dd hh24:mi:ss'</span>))) * <span class=\"number\">24</span> * <span class=\"number\">60</span>) <span class=\"keyword\">FROM</span> DUAL; <span class=\"comment\">--间隔分钟</span></div></pre></td></tr></table></figure>\n<h3 id=\"CAST转换操作\"><a href=\"#CAST转换操作\" class=\"headerlink\" title=\"CAST转换操作\"></a>CAST转换操作</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1.转换为Integer</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">cast</span>(<span class=\"string\">'111'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">int</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"comment\">--2.转换为NUMBER</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">cast</span>(<span class=\"string\">'111.333'</span> <span class=\"keyword\">as</span>  <span class=\"built_in\">NUMBER</span>(<span class=\"number\">5</span>,<span class=\"number\">2</span>)) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"keyword\">SELECT</span> to_number(<span class=\"string\">'123'</span>) <span class=\"keyword\">from</span> dual;</div></pre></td></tr></table></figure>\n<h3 id=\"分组操作\"><a href=\"#分组操作\" class=\"headerlink\" title=\"分组操作\"></a>分组操作</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--按季度分组统计</span></div><div class=\"line\"><span class=\"keyword\">select</span> to_CHAR(a.SETUP_DATE,<span class=\"string\">'yyyy-q'</span>) m,<span class=\"keyword\">count</span>(*)</div><div class=\"line\"><span class=\"keyword\">from</span> CCS_ACCT a</div><div class=\"line\"><span class=\"keyword\">where</span> <span class=\"number\">1</span>=<span class=\"number\">1</span></div><div class=\"line\"><span class=\"keyword\">group</span> <span class=\"keyword\">by</span> to_CHAR(a.SETUP_DATE,<span class=\"string\">'yyyy-q'</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"ALL-ANY-EXISTS-操作符\"><a href=\"#ALL-ANY-EXISTS-操作符\" class=\"headerlink\" title=\"ALL ANY EXISTS 操作符\"></a>ALL ANY EXISTS 操作符</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1.ALL.字段值与ALL结果集中进行比较,与每一个比较都成立,则结果为真.</span></div><div class=\"line\"><span class=\"comment\">--与not in 差别. 下面的例子,ALL将返回结果集,not in返回空集.</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">from</span> CCS_ACCT</div><div class=\"line\"><span class=\"keyword\">WHERE</span> ACCT_NBR &lt;&gt; ALL(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT <span class=\"keyword\">where</span> ACCT_NBR <span class=\"keyword\">in</span> (<span class=\"number\">1123000</span>,<span class=\"number\">1123001</span>,<span class=\"literal\">NULL</span>))</div><div class=\"line\">;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">from</span> CCS_ACCT</div><div class=\"line\"><span class=\"keyword\">WHERE</span> ACCT_NBR <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> (<span class=\"number\">1123000</span>,<span class=\"number\">1123001</span>,<span class=\"literal\">NULL</span>);</div><div class=\"line\"><span class=\"comment\">--2.Any,字段值与any结果集中进行比较,只要有一个成立,则结果为真.</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">from</span> CCS_ACCT</div><div class=\"line\"><span class=\"keyword\">WHERE</span> CURR_BAL &gt; <span class=\"keyword\">any</span>(<span class=\"keyword\">SELECT</span> CURR_BAL <span class=\"keyword\">from</span> CCS_ACCT <span class=\"keyword\">where</span> <span class=\"keyword\">ROWNUM</span>&lt;<span class=\"number\">5</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--3.EXISTS</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual <span class=\"keyword\">where</span> <span class=\"keyword\">EXISTS</span>(<span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">from</span> dual <span class=\"keyword\">where</span> <span class=\"number\">1</span>=<span class=\"number\">1</span>);</div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual <span class=\"keyword\">where</span> <span class=\"keyword\">EXISTS</span>(<span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">from</span> dual <span class=\"keyword\">where</span> <span class=\"number\">1</span>&lt;&gt;<span class=\"number\">1</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"trunc、round、ceil-floor\"><a href=\"#trunc、round、ceil-floor\" class=\"headerlink\" title=\"trunc、round、ceil/floor\"></a>trunc、round、ceil/floor</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1.trunc函数</span></div><div class=\"line\"><span class=\"comment\">--trunc函数处理数字 TRUNC(number[,decimals])</span></div><div class=\"line\"><span class=\"keyword\">select</span> trunc(<span class=\"number\">123.89</span>,<span class=\"number\">0</span>) <span class=\"keyword\">from</span> dual; <span class=\"comment\">-- 123</span></div><div class=\"line\"><span class=\"keyword\">select</span> trunc(<span class=\"number\">123.123</span>,<span class=\"number\">2</span>) <span class=\"keyword\">from</span> dual; <span class=\"comment\">--123.12</span></div><div class=\"line\"><span class=\"keyword\">select</span> trunc(<span class=\"number\">123.123</span>,<span class=\"number\">-1</span>) <span class=\"keyword\">from</span> dual; <span class=\"comment\">--120</span></div><div class=\"line\"><span class=\"comment\">--trunc函数处理日期 TRUNC(date,[fmt]), sysdate为2017-02-15 10:30:09</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> trunc(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'yyyy'</span>),<span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual;  <span class=\"comment\">--返回当年第一天. 2017-01-01 00:00:00</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> trunc(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'mm'</span>),<span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual; <span class=\"comment\">--返回当月第一天. 2017-02-01 00:00:00</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> trunc(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'d'</span>),<span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual; <span class=\"comment\">--返回当前星期的第一天. 2017-02-12 00:00:00</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> trunc(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'dd'</span>) <span class=\"keyword\">from</span> dual;  <span class=\"comment\">--截取到当天0点0分0秒,2018-08-25 00:00:00</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> trunc(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'hh24'</span>) <span class=\"keyword\">from</span> dual;  <span class=\"comment\">--截取到小时（当前小时，零分零秒）,2018-08-25 04:00:00</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> trunc(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'mi'</span>) <span class=\"keyword\">from</span> dual; <span class=\"comment\">--截取到分（当前分，零秒）2018-08-25 04:28:00</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> trunc(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'ss'</span>) <span class=\"keyword\">from</span> dual ;<span class=\"comment\">--报错，没有精确到秒的格式</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--2.round 函数</span></div><div class=\"line\"><span class=\"comment\">--round函数处理数字 round( number, [ decimal_places ] ), decimal_places为保留的小数位数</span></div><div class=\"line\"><span class=\"comment\">--传回一个数值，该数值是按照指定的小数位元数进行四舍五入运算的结果。</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"number\">123.456</span>, <span class=\"number\">0</span>) <span class=\"keyword\">from</span> dual;     <span class=\"comment\">--回传 123</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"number\">123.456</span>, <span class=\"number\">1</span>) <span class=\"keyword\">from</span> dual;     <span class=\"comment\">--回传 123.5</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"number\">-123.456</span>, <span class=\"number\">2</span>) <span class=\"keyword\">from</span> dual;    <span class=\"comment\">--回传 -123.46</span></div><div class=\"line\"><span class=\"comment\">--round函数处理日期 round(date,fmt) ,fmt为四舍五入的单位.</span></div><div class=\"line\"><span class=\"comment\">--月</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215'</span>,<span class=\"string\">'yyyymmdd'</span>),<span class=\"string\">'mm'</span>) <span class=\"keyword\">from</span> dual;    <span class=\"comment\">-- 2017-02-01</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170216'</span>,<span class=\"string\">'yyyymmdd'</span>),<span class=\"string\">'mm'</span>) <span class=\"keyword\">from</span> dual;    <span class=\"comment\">-- 2017-03-01</span></div><div class=\"line\"><span class=\"comment\">--日</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215 11:20'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>),<span class=\"string\">'dd'</span>) <span class=\"keyword\">from</span> dual;    <span class=\"comment\">-- 2017-02-15 00:00:00</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215 12:20'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>),<span class=\"string\">'dd'</span>) <span class=\"keyword\">from</span> dual;    <span class=\"comment\">-- 2017-02-16 00:00:00</span></div><div class=\"line\"><span class=\"comment\">--小时</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215 11:20'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>),<span class=\"string\">'hh'</span>) <span class=\"keyword\">from</span> dual;    <span class=\"comment\">-- 2017-02-15 11:00:00</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215 11:30'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>),<span class=\"string\">'hh'</span>) <span class=\"keyword\">from</span> dual;    <span class=\"comment\">-- 2017-02-15 12:00:00</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--3.ceil/floor 函数</span></div><div class=\"line\"><span class=\"comment\">--处理数字</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">ceil</span>(<span class=\"number\">123.456</span>) <span class=\"keyword\">from</span> dual;     <span class=\"comment\">--回传 124</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">floor</span>(<span class=\"number\">123.456</span>) <span class=\"keyword\">from</span> dual;     <span class=\"comment\">--回传 123</span></div><div class=\"line\"><span class=\"comment\">--处理日期</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">ceil</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215 11:00'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>) - <span class=\"keyword\">to_date</span>(<span class=\"string\">'20170214 11:00'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>)) <span class=\"keyword\">from</span> dual; <span class=\"comment\">-- return 1</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">ceil</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215 11:00'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>) - <span class=\"keyword\">to_date</span>(<span class=\"string\">'20170214 10:59'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>)) <span class=\"keyword\">from</span> dual; <span class=\"comment\">-- return 2</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">floor</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215 11:00'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>) - <span class=\"keyword\">to_date</span>(<span class=\"string\">'20170214 10:59'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>)) <span class=\"keyword\">from</span> dual; <span class=\"comment\">-- return 1</span></div></pre></td></tr></table></figure>\n<h3 id=\"常用函数\"><a href=\"#常用函数\" class=\"headerlink\" title=\"常用函数\"></a>常用函数</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1.NVL NVL2 NULLIF</span></div><div class=\"line\"><span class=\"comment\">--NVL(e1,e2), 相当于 e1 != NULL ? e1 : e2</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> NVL(<span class=\"literal\">NULL</span>,<span class=\"string\">'0'</span>), NVL(<span class=\"string\">'123'</span>,<span class=\"string\">'1'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"comment\">--NVL(field,e1,e2) 相当于 field != NULL ? e1:e2</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> NVL2(<span class=\"literal\">NULL</span>,<span class=\"string\">'not-null'</span>,<span class=\"string\">'null'</span>),NVL2(<span class=\"string\">'a'</span>,<span class=\"string\">'not-null'</span>,<span class=\"string\">'null'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"comment\">--NULLIF(e1,e2), 相当于 e1==e2 ? NULL : e1</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">NULLIF</span>(<span class=\"string\">'a'</span>,<span class=\"string\">'a'</span>),<span class=\"keyword\">NULLIF</span>(<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>),<span class=\"keyword\">NULLIF</span>(<span class=\"string\">'b'</span>,<span class=\"string\">'a'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--2. (+)的使用,哪边有（+）哪边就允许为空</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> a.*, b.* <span class=\"keyword\">from</span> a,b <span class=\"keyword\">where</span> a.ID(+) = b.ID ; <span class=\"comment\">--就是一个右连接，等同于select a.*, b.* from a right join b on a.ID=b.ID</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> a.*, b.* <span class=\"keyword\">from</span> a,b <span class=\"keyword\">where</span> a.ID = b.ID (+);  <span class=\"comment\">--就是一个左连接，等同于select a.*, b.* from a left join b on a.ID=b.ID</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--3. decode</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">decode</span>(<span class=\"string\">'a'</span>,<span class=\"string\">'a'</span>,<span class=\"number\">96</span>,<span class=\"string\">'b'</span>,<span class=\"number\">97</span>) <span class=\"keyword\">from</span> dual; <span class=\"comment\">-- 96</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">decode</span>(<span class=\"string\">'b'</span>,<span class=\"string\">'a'</span>,<span class=\"number\">96</span>,<span class=\"string\">'b'</span>,<span class=\"number\">97</span>) <span class=\"keyword\">from</span> dual; <span class=\"comment\">-- 97</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1,REGEXP_LIKE</span></div><div class=\"line\"><span class=\"comment\">--默认是大小写敏感的</span></div><div class=\"line\"><span class=\"comment\">--REGEXP_LIKE(ACCT_TYPE,'E','i')是大小写不敏感</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT</div><div class=\"line\"><span class=\"keyword\">where</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'1$'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--2,REGEXP_INSTR</span></div><div class=\"line\"><span class=\"comment\">--查找第一次出现匹配模式是index</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> REGEXP_INSTR(<span class=\"number\">112233</span>,<span class=\"string\">'233'</span>)  <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"comment\">--3,REGEXP_SUBSTR</span></div><div class=\"line\"><span class=\"comment\">--查找匹配的字串</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> REGEXP_SUBSTR(<span class=\"number\">112233</span>,<span class=\"string\">'[1-2]*'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"comment\">--4,REGEXP_REPLACE</span></div><div class=\"line\"><span class=\"comment\">--替换匹配字串的值</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> REGEXP_REPLACE(<span class=\"number\">112233</span>,<span class=\"string\">'1&#123;2&#125;'</span>,<span class=\"string\">'aa'</span>) <span class=\"keyword\">from</span> dual;</div></pre></td></tr></table></figure>\n<h3 id=\"集合操作\"><a href=\"#集合操作\" class=\"headerlink\" title=\"集合操作\"></a>集合操作</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1,合集;UNION (去重),UNION ALL(不去重)</span></div><div class=\"line\"><span class=\"comment\">--UNION</span></div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'0$'</span>))</div><div class=\"line\"><span class=\"keyword\">UNION</span></div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'10$'</span>))</div><div class=\"line\">;</div><div class=\"line\"><span class=\"comment\">--UNION ALL</span></div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'0$'</span>))</div><div class=\"line\"><span class=\"keyword\">UNION</span> ALL</div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'10$'</span>))</div><div class=\"line\">;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--2,交集; INTERSECT</span></div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'0$'</span>))</div><div class=\"line\"><span class=\"keyword\">INTERSECT</span></div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'10$'</span>))</div><div class=\"line\">;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--3.差集. MINUS</span></div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'0$'</span>))</div><div class=\"line\"><span class=\"keyword\">MINUS</span></div><div class=\"line\">(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT c <span class=\"keyword\">WHERE</span> <span class=\"keyword\">REGEXP_LIKE</span>(ACCT_NBR,<span class=\"string\">'10$'</span>))</div><div class=\"line\">;</div></pre></td></tr></table></figure>\n<h3 id=\"字符串操作\"><a href=\"#字符串操作\" class=\"headerlink\" title=\"字符串操作\"></a>字符串操作</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1.字符串拼接;concat,ORACLE只能拼接两个field</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">concat</span>(<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--2.字符串长度,length</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">length</span>(<span class=\"string\">'aaa'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--3.字符串比较</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">case</span> <span class=\"keyword\">when</span> <span class=\"string\">'aa'</span>&lt;<span class=\"string\">'ab'</span> <span class=\"keyword\">then</span> <span class=\"string\">'true'</span> <span class=\"keyword\">else</span> <span class=\"string\">'false'</span> <span class=\"keyword\">end</span> <span class=\"keyword\">as</span> <span class=\"keyword\">result</span> <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--4.字符串裁剪</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">SUBSTR</span>(<span class=\"string\">'123456789'</span>,<span class=\"number\">1</span>,<span class=\"number\">4</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--5.长度不足左右填充; lpad,rpad ,长度不足则填充,长度够则截取指定长度.</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">lpad</span>(<span class=\"string\">'1234'</span>,<span class=\"number\">10</span>,<span class=\"string\">'*'</span>),<span class=\"keyword\">lpad</span>(<span class=\"string\">'1234'</span>,<span class=\"number\">2</span>,<span class=\"string\">'*'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--6.左右删除;LTRIM,RTRIM</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">RTRIM</span>(<span class=\"string\">'00111333111'</span>,<span class=\"string\">'(0|1)'</span>),<span class=\"keyword\">LTRIM</span>(<span class=\"string\">'00111333111'</span>,<span class=\"string\">'(0|1)'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--7.字符串替换;REPLACE</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">REPLACE</span>(<span class=\"string\">'123'</span>,<span class=\"string\">'2'</span>,<span class=\"string\">'a'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--8.查找第一次出现的位置</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">INSTR</span>(<span class=\"string\">'abcdc'</span>, <span class=\"string\">'c'</span>)<span class=\"keyword\">from</span> dual;</div></pre></td></tr></table></figure>\n<h3 id=\"时间日期操作\"><a href=\"#时间日期操作\" class=\"headerlink\" title=\"时间日期操作\"></a>时间日期操作</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1.系统时间,时间戳</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">sysdate</span>,SYSTIMESTAMP,<span class=\"keyword\">CURRENT_DATE</span></div><div class=\"line\"><span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"comment\">--2.字符串转日期</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">TO_DATE</span>(<span class=\"string\">'2016-12-06 20:15:30'</span>,<span class=\"string\">'yyyy-mm-dd hh24:mi:ss'</span>),<span class=\"keyword\">TO_DATE</span>(<span class=\"string\">'20161206'</span>,<span class=\"string\">'yyyy-mm-dd'</span>),<span class=\"keyword\">cast</span>(<span class=\"string\">'11:15:30'</span><span class=\"keyword\">as</span> <span class=\"keyword\">time</span>)</div><div class=\"line\"><span class=\"keyword\">from</span> dual</div><div class=\"line\">;</div><div class=\"line\"><span class=\"comment\">--3.日期转字符串, 获取年月日,季度.</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> to_char(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'yyyy-mm'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"keyword\">SELECT</span> to_char(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'q'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">extract</span>(<span class=\"keyword\">YEAR</span> <span class=\"keyword\">from</span> <span class=\"keyword\">sysdate</span>),<span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual;<span class=\"comment\">--取出时间中的Year</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">extract</span>(<span class=\"keyword\">MONTH</span> <span class=\"keyword\">from</span> <span class=\"keyword\">sysdate</span>),<span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual;<span class=\"comment\">--取出时间中的Month</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">extract</span>(<span class=\"keyword\">DAY</span> <span class=\"keyword\">from</span> <span class=\"keyword\">sysdate</span>),<span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual;<span class=\"comment\">--取出时间中的Day</span></div><div class=\"line\"><span class=\"comment\">--4.日期增加</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sysdate</span>,add_months(<span class=\"keyword\">sysdate</span>,<span class=\"number\">12</span>) <span class=\"keyword\">from</span> dual;        <span class=\"comment\">--加1年</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sysdate</span>,add_months(<span class=\"keyword\">sysdate</span>,<span class=\"number\">1</span>) <span class=\"keyword\">from</span> dual;        <span class=\"comment\">--加1月</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sysdate</span>,to_char(<span class=\"keyword\">sysdate</span>+<span class=\"number\">7</span>,<span class=\"string\">'yyyy-mm-dd HH24:MI:SS'</span>) <span class=\"keyword\">from</span> dual;   <span class=\"comment\">--加1星期</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sysdate</span>,to_char(<span class=\"keyword\">sysdate</span>+<span class=\"number\">1</span>,<span class=\"string\">'yyyy-mm-dd HH24:MI:SS'</span>) <span class=\"keyword\">from</span> dual;   <span class=\"comment\">--加1天</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sysdate</span>,to_char(<span class=\"keyword\">sysdate</span>+<span class=\"number\">1</span>/<span class=\"number\">24</span>,<span class=\"string\">'yyyy-mm-dd HH24:MI:SS'</span>) <span class=\"keyword\">from</span> dual;  <span class=\"comment\">--加1小时</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sysdate</span>,to_char(<span class=\"keyword\">sysdate</span>+<span class=\"number\">1</span>/<span class=\"number\">24</span>/<span class=\"number\">60</span>,<span class=\"string\">'yyyy-mm-dd HH24:MI:SS'</span>) <span class=\"keyword\">from</span> dual;  <span class=\"comment\">--加1分钟</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">sysdate</span>,to_char(<span class=\"keyword\">sysdate</span>+<span class=\"number\">1</span>/<span class=\"number\">24</span>/<span class=\"number\">60</span>/<span class=\"number\">60</span>,<span class=\"string\">'yyyy-mm-dd HH24:MI:SS'</span>) <span class=\"keyword\">from</span> dual;  <span class=\"comment\">--加1秒</span></div><div class=\"line\"><span class=\"comment\">--5.日期间隔</span></div><div class=\"line\"><span class=\"keyword\">select</span> months_between(<span class=\"keyword\">to_date</span>(<span class=\"string\">'2006-04-20'</span>,<span class=\"string\">'yyyy-mm-dd'</span>),<span class=\"keyword\">to_date</span>(<span class=\"string\">'2005-05-20'</span>,<span class=\"string\">'yyyy-mm-dd'</span>)) mon_betw <span class=\"keyword\">from</span> dual; <span class=\"comment\">--时间间隔(月)</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">ceil</span>(((<span class=\"keyword\">to_date</span>(<span class=\"string\">'2008-05-02 00:00'</span> , <span class=\"string\">'yyyy-mm-dd hh24:mi:ss'</span>) - <span class=\"keyword\">to_date</span>(<span class=\"string\">'2008-05-01 22:58'</span> , <span class=\"string\">'yyyy-mm-dd hh24:mi:ss'</span>))) * <span class=\"number\">24</span> * <span class=\"number\">60</span>) <span class=\"keyword\">FROM</span> DUAL; <span class=\"comment\">--间隔分钟</span></div></pre></td></tr></table></figure>\n<h3 id=\"CAST转换操作\"><a href=\"#CAST转换操作\" class=\"headerlink\" title=\"CAST转换操作\"></a>CAST转换操作</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1.转换为Integer</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">cast</span>(<span class=\"string\">'111'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">int</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"comment\">--2.转换为NUMBER</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">cast</span>(<span class=\"string\">'111.333'</span> <span class=\"keyword\">as</span>  <span class=\"built_in\">NUMBER</span>(<span class=\"number\">5</span>,<span class=\"number\">2</span>)) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"keyword\">SELECT</span> to_number(<span class=\"string\">'123'</span>) <span class=\"keyword\">from</span> dual;</div></pre></td></tr></table></figure>\n<h3 id=\"分组操作\"><a href=\"#分组操作\" class=\"headerlink\" title=\"分组操作\"></a>分组操作</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--按季度分组统计</span></div><div class=\"line\"><span class=\"keyword\">select</span> to_CHAR(a.SETUP_DATE,<span class=\"string\">'yyyy-q'</span>) m,<span class=\"keyword\">count</span>(*)</div><div class=\"line\"><span class=\"keyword\">from</span> CCS_ACCT a</div><div class=\"line\"><span class=\"keyword\">where</span> <span class=\"number\">1</span>=<span class=\"number\">1</span></div><div class=\"line\"><span class=\"keyword\">group</span> <span class=\"keyword\">by</span> to_CHAR(a.SETUP_DATE,<span class=\"string\">'yyyy-q'</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"ALL-ANY-EXISTS-操作符\"><a href=\"#ALL-ANY-EXISTS-操作符\" class=\"headerlink\" title=\"ALL ANY EXISTS 操作符\"></a>ALL ANY EXISTS 操作符</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1.ALL.字段值与ALL结果集中进行比较,与每一个比较都成立,则结果为真.</span></div><div class=\"line\"><span class=\"comment\">--与not in 差别. 下面的例子,ALL将返回结果集,not in返回空集.</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">from</span> CCS_ACCT</div><div class=\"line\"><span class=\"keyword\">WHERE</span> ACCT_NBR &lt;&gt; ALL(<span class=\"keyword\">SELECT</span> ACCT_NBR <span class=\"keyword\">from</span> CCS_ACCT <span class=\"keyword\">where</span> ACCT_NBR <span class=\"keyword\">in</span> (<span class=\"number\">1123000</span>,<span class=\"number\">1123001</span>,<span class=\"literal\">NULL</span>))</div><div class=\"line\">;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">from</span> CCS_ACCT</div><div class=\"line\"><span class=\"keyword\">WHERE</span> ACCT_NBR <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> (<span class=\"number\">1123000</span>,<span class=\"number\">1123001</span>,<span class=\"literal\">NULL</span>);</div><div class=\"line\"><span class=\"comment\">--2.Any,字段值与any结果集中进行比较,只要有一个成立,则结果为真.</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">from</span> CCS_ACCT</div><div class=\"line\"><span class=\"keyword\">WHERE</span> CURR_BAL &gt; <span class=\"keyword\">any</span>(<span class=\"keyword\">SELECT</span> CURR_BAL <span class=\"keyword\">from</span> CCS_ACCT <span class=\"keyword\">where</span> <span class=\"keyword\">ROWNUM</span>&lt;<span class=\"number\">5</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--3.EXISTS</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual <span class=\"keyword\">where</span> <span class=\"keyword\">EXISTS</span>(<span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">from</span> dual <span class=\"keyword\">where</span> <span class=\"number\">1</span>=<span class=\"number\">1</span>);</div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual <span class=\"keyword\">where</span> <span class=\"keyword\">EXISTS</span>(<span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">from</span> dual <span class=\"keyword\">where</span> <span class=\"number\">1</span>&lt;&gt;<span class=\"number\">1</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"trunc、round、ceil-floor\"><a href=\"#trunc、round、ceil-floor\" class=\"headerlink\" title=\"trunc、round、ceil/floor\"></a>trunc、round、ceil/floor</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1.trunc函数</span></div><div class=\"line\"><span class=\"comment\">--trunc函数处理数字 TRUNC(number[,decimals])</span></div><div class=\"line\"><span class=\"keyword\">select</span> trunc(<span class=\"number\">123.89</span>,<span class=\"number\">0</span>) <span class=\"keyword\">from</span> dual; <span class=\"comment\">-- 123</span></div><div class=\"line\"><span class=\"keyword\">select</span> trunc(<span class=\"number\">123.123</span>,<span class=\"number\">2</span>) <span class=\"keyword\">from</span> dual; <span class=\"comment\">--123.12</span></div><div class=\"line\"><span class=\"keyword\">select</span> trunc(<span class=\"number\">123.123</span>,<span class=\"number\">-1</span>) <span class=\"keyword\">from</span> dual; <span class=\"comment\">--120</span></div><div class=\"line\"><span class=\"comment\">--trunc函数处理日期 TRUNC(date,[fmt]), sysdate为2017-02-15 10:30:09</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> trunc(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'yyyy'</span>),<span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual;  <span class=\"comment\">--返回当年第一天. 2017-01-01 00:00:00</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> trunc(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'mm'</span>),<span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual; <span class=\"comment\">--返回当月第一天. 2017-02-01 00:00:00</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> trunc(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'d'</span>),<span class=\"keyword\">sysdate</span> <span class=\"keyword\">from</span> dual; <span class=\"comment\">--返回当前星期的第一天. 2017-02-12 00:00:00</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> trunc(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'dd'</span>) <span class=\"keyword\">from</span> dual;  <span class=\"comment\">--截取到当天0点0分0秒,2018-08-25 00:00:00</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> trunc(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'hh24'</span>) <span class=\"keyword\">from</span> dual;  <span class=\"comment\">--截取到小时（当前小时，零分零秒）,2018-08-25 04:00:00</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> trunc(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'mi'</span>) <span class=\"keyword\">from</span> dual; <span class=\"comment\">--截取到分（当前分，零秒）2018-08-25 04:28:00</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> trunc(<span class=\"keyword\">sysdate</span>,<span class=\"string\">'ss'</span>) <span class=\"keyword\">from</span> dual ;<span class=\"comment\">--报错，没有精确到秒的格式</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--2.round 函数</span></div><div class=\"line\"><span class=\"comment\">--round函数处理数字 round( number, [ decimal_places ] ), decimal_places为保留的小数位数</span></div><div class=\"line\"><span class=\"comment\">--传回一个数值，该数值是按照指定的小数位元数进行四舍五入运算的结果。</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"number\">123.456</span>, <span class=\"number\">0</span>) <span class=\"keyword\">from</span> dual;     <span class=\"comment\">--回传 123</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"number\">123.456</span>, <span class=\"number\">1</span>) <span class=\"keyword\">from</span> dual;     <span class=\"comment\">--回传 123.5</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"number\">-123.456</span>, <span class=\"number\">2</span>) <span class=\"keyword\">from</span> dual;    <span class=\"comment\">--回传 -123.46</span></div><div class=\"line\"><span class=\"comment\">--round函数处理日期 round(date,fmt) ,fmt为四舍五入的单位.</span></div><div class=\"line\"><span class=\"comment\">--月</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215'</span>,<span class=\"string\">'yyyymmdd'</span>),<span class=\"string\">'mm'</span>) <span class=\"keyword\">from</span> dual;    <span class=\"comment\">-- 2017-02-01</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170216'</span>,<span class=\"string\">'yyyymmdd'</span>),<span class=\"string\">'mm'</span>) <span class=\"keyword\">from</span> dual;    <span class=\"comment\">-- 2017-03-01</span></div><div class=\"line\"><span class=\"comment\">--日</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215 11:20'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>),<span class=\"string\">'dd'</span>) <span class=\"keyword\">from</span> dual;    <span class=\"comment\">-- 2017-02-15 00:00:00</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215 12:20'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>),<span class=\"string\">'dd'</span>) <span class=\"keyword\">from</span> dual;    <span class=\"comment\">-- 2017-02-16 00:00:00</span></div><div class=\"line\"><span class=\"comment\">--小时</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215 11:20'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>),<span class=\"string\">'hh'</span>) <span class=\"keyword\">from</span> dual;    <span class=\"comment\">-- 2017-02-15 11:00:00</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">round</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215 11:30'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>),<span class=\"string\">'hh'</span>) <span class=\"keyword\">from</span> dual;    <span class=\"comment\">-- 2017-02-15 12:00:00</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--3.ceil/floor 函数</span></div><div class=\"line\"><span class=\"comment\">--处理数字</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">ceil</span>(<span class=\"number\">123.456</span>) <span class=\"keyword\">from</span> dual;     <span class=\"comment\">--回传 124</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">floor</span>(<span class=\"number\">123.456</span>) <span class=\"keyword\">from</span> dual;     <span class=\"comment\">--回传 123</span></div><div class=\"line\"><span class=\"comment\">--处理日期</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">ceil</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215 11:00'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>) - <span class=\"keyword\">to_date</span>(<span class=\"string\">'20170214 11:00'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>)) <span class=\"keyword\">from</span> dual; <span class=\"comment\">-- return 1</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">ceil</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215 11:00'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>) - <span class=\"keyword\">to_date</span>(<span class=\"string\">'20170214 10:59'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>)) <span class=\"keyword\">from</span> dual; <span class=\"comment\">-- return 2</span></div><div class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">floor</span>(<span class=\"keyword\">to_date</span>(<span class=\"string\">'20170215 11:00'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>) - <span class=\"keyword\">to_date</span>(<span class=\"string\">'20170214 10:59'</span>,<span class=\"string\">'yyyymmdd hh24:mi'</span>)) <span class=\"keyword\">from</span> dual; <span class=\"comment\">-- return 1</span></div></pre></td></tr></table></figure>\n<h3 id=\"常用函数\"><a href=\"#常用函数\" class=\"headerlink\" title=\"常用函数\"></a>常用函数</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">--1.NVL NVL2 NULLIF</span></div><div class=\"line\"><span class=\"comment\">--NVL(e1,e2), 相当于 e1 != NULL ? e1 : e2</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> NVL(<span class=\"literal\">NULL</span>,<span class=\"string\">'0'</span>), NVL(<span class=\"string\">'123'</span>,<span class=\"string\">'1'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"comment\">--NVL(field,e1,e2) 相当于 field != NULL ? e1:e2</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> NVL2(<span class=\"literal\">NULL</span>,<span class=\"string\">'not-null'</span>,<span class=\"string\">'null'</span>),NVL2(<span class=\"string\">'a'</span>,<span class=\"string\">'not-null'</span>,<span class=\"string\">'null'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"><span class=\"comment\">--NULLIF(e1,e2), 相当于 e1==e2 ? NULL : e1</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">NULLIF</span>(<span class=\"string\">'a'</span>,<span class=\"string\">'a'</span>),<span class=\"keyword\">NULLIF</span>(<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>),<span class=\"keyword\">NULLIF</span>(<span class=\"string\">'b'</span>,<span class=\"string\">'a'</span>) <span class=\"keyword\">from</span> dual;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--2. (+)的使用,哪边有（+）哪边就允许为空</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> a.*, b.* <span class=\"keyword\">from</span> a,b <span class=\"keyword\">where</span> a.ID(+) = b.ID ; <span class=\"comment\">--就是一个右连接，等同于select a.*, b.* from a right join b on a.ID=b.ID</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> a.*, b.* <span class=\"keyword\">from</span> a,b <span class=\"keyword\">where</span> a.ID = b.ID (+);  <span class=\"comment\">--就是一个左连接，等同于select a.*, b.* from a left join b on a.ID=b.ID</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">--3. decode</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">decode</span>(<span class=\"string\">'a'</span>,<span class=\"string\">'a'</span>,<span class=\"number\">96</span>,<span class=\"string\">'b'</span>,<span class=\"number\">97</span>) <span class=\"keyword\">from</span> dual; <span class=\"comment\">-- 96</span></div><div class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">decode</span>(<span class=\"string\">'b'</span>,<span class=\"string\">'a'</span>,<span class=\"number\">96</span>,<span class=\"string\">'b'</span>,<span class=\"number\">97</span>) <span class=\"keyword\">from</span> dual; <span class=\"comment\">-- 97</span></div></pre></td></tr></table></figure>\n"},{"title":"PL/SQL基础","date":"2017-03-07T02:30:16.000Z","_content":"\n# 数据准备\n```SQL\nDROP TABLE students;\ncreate table students\n(\n  ID int,\n  userName varchar(100),\n  userPass varchar(100),\n  userAge  int\n);\n-- 插入10条\nDECLARE\n\ti number(2);\nBEGIN\n\tfor i in 1..10 loop\n\t\tINSERT INTO students VALUES(i,'jack'||i,'jj',20+i);\n\tend loop;\nEND;\n\nSELECT * from students;\n```\n\n# 语法基础\n\n## if\n```SQL\nDECLARE\n\ti number(1) := 5;\n\tj number(2) := 10;\nBEGIN\n\tif i < 5 then\n\t\tDBMS_OUTPUT.PUT_LINE('i<5');\n\telsif i=5 then\n\t\tDBMS_OUTPUT.PUT_LINE('i=5');\n\telse\n\t\tDBMS_OUTPUT.PUT_LINE('i=5');\n\tend if;\nEND;\n```\n## case when\n```SQL\nDECLARE\n\ti number(1) := 5;\n\tj number(2);\nBEGIN\n\tj:=\n\tcase i\n\t\twhen 0 then 0\n\t\twhen 5 then 5\n\t\telse 10\n\tend;\n\tDBMS_OUTPUT.PUT_LINE(j);\n\n\tj :=\n\tcase\n\t\twhen i < 5 then 0\n\t\twhen i=5 then 6\n\t\telse 10\n\tend;\n\tDBMS_OUTPUT.PUT_LINE(j);\nEND;\n```\n\n## loop\n```SQL\nDECLARE\n\ti number(1) := 0;\nBEGIN\n\tloop\n\t\ti := i + 1;\n\t\tDBMS_OUTPUT.PUT_LINE(i);\n\t\texit when i = 5;\n\tend loop;\nEND;\n```\n\n## while\n```SQL\nDECLARE\n\ti number(2) := 0;\nBEGIN\n\twhile i < 10 loop\n\t\tDBMS_OUTPUT.PUT_LINE(i);\n\t\ti := i + 1;\n\tend loop;\nEND;\n```\n\n## for..in\n```SQL\nBEGIN\n\tfor i in 0..9 loop\n\t\tDBMS_OUTPUT.PUT_LINE(i);\n\tend loop;\nEND;\n```\n\n## goto\n```SQL\nDECLARE\n\ti number(2) := 0;\n\tj number(2) := 0;\nBEGIN\n\tfor j in 0..9 loop\n\t\ti := i + 1;\n\t\tif i=5 then\n\t\t\tgoto EXIT_LOOP;\n\t\tend if;\n\tend loop;\n\t<<EXIT_LOOP>>\n\tDBMS_OUTPUT.PUT_LINE(i);\nEND;\n```\n\n# 获取插入语句的返回值. 可以获取增删改返回的数据\n```SQL\nDECLARE\n\trow_id ROWID;\n\tinfo VARCHAR2(200);\nBEGIN\n\tINSERT INTO students VALUES(1,'jack','jj',23)\n\treturning rowid,to_char(ID)||':'||userName\n\tINTO row_id,info;\n\tDBMS_OUTPUT.PUT_LINE('rowid:'||row_id);\n\tDBMS_OUTPUT.PUT_LINE('name:'||info);\nEND;\n```\n\n# 自定数据类型\n```SQL\nDECLARE\n\tTYPE RECORD_TYPE_PERSON_AGE IS RECORD(\n\t\tuName varchar(100),\n\t\tage students.userAge%TYPE\t--用%TYPE 类型定义与表相配的字段\n\t);\n\tuserRec RECORD_TYPE_PERSON_AGE;\nBEGIN\n\tSELECT userName,userAge INTO userRec from STUDENTS where ID=1;\n\tuserRec.uName := 'changed';\n\tDBMS_OUTPUT.PUT_LINE(userRec.uName||' '||userRec.age);\nEND;\n```\n\n# 数组类型\n```SQL\nDECLARE\n\t --定义一个最多保存5个VARCHAR(25)数据类型成员的VARRAY数据类型\n   TYPE reg_varray_type IS VARRAY(5) OF VARCHAR(25);\n   v_reg_varray REG_VARRAY_TYPE;\nBEGIN\n\t --用构造函数语法赋予初值\n   v_reg_varray := reg_varray_type('1', '2', '3', '4', '5');\n\n   DBMS_OUTPUT.PUT_LINE(v_reg_varray(1)||','\n                    ||v_reg_varray(2)||','\n                    ||v_reg_varray(3)||','\n                    ||v_reg_varray(4));\n   DBMS_OUTPUT.PUT_LINE(v_reg_varray(5));\n\t--用构造函数语法赋予初值后就可以这样对成员赋值\n   v_reg_varray(5) := 'xx';\n   DBMS_OUTPUT.PUT_LINE('5th is '||v_reg_varray(5));\nEND;\n```\n\n# 行类型, 使用%ROWTYPE\n```SQL\nDECLARE\n    vId students.ID%TYPE := 1; -- 属性类型引用\n    rec students%ROWTYPE;\t--行类型\nBEGIN\n    SELECT * INTO rec FROM students where ID=vId;\n    DBMS_OUTPUT.PUT_LINE('姓名:'||rec.userName||' 年龄:'||rec.userAge);\nEND;\n```\n\n# 定义表类型, 使用 TABLE\n```SQL\nDECLARE\n\tTYPE TABLE_STUDENTS IS TABLE OF STUDENTS%ROWTYPE INDEX BY BINARY_INTEGER;\n\trecs_students TABLE_STUDENTS;\n\tloop_count number(1) := 2;\nBEGIN\n\tFOR i IN 1..loop_count LOOP\n\t\tSELECT * into recs_students(i) from STUDENTS where id=i;\n\tEND LOOP;\n\tFOR j IN recs_students.FIRST..recs_students.LAST LOOP\n\t\tDBMS_OUTPUT.PUT_LINE(recs_students(j).userName||' '||recs_students(j).ID);\n\tEND LOOP;\nEND;\n```\n\n# 游标\n\n## 游标基础\n```SQL\n/*\n Cursor_name%FOUND     布尔型属性，当最近一次提取游标操作FETCH成功则为 TRUE,否则为FALSE；\n Cursor_name%NOTFOUND   布尔型属性，与%FOUND相反；\n Cursor_name%ISOPEN     布尔型属性，当游标已打开时返回 TRUE；\n Cursor_name%ROWCOUNT   数字型属性，返回已从游标中读取的记录数。\n*/\nDECLARE\n\tcursor some_stu_cursor is SELECT ID,userName from students;\n\tuserId students.ID%TYPE;\n\tuserName students.userName%TYPE;\nBEGIN\n\topen some_stu_cursor;\n\t\tloop\n\t\t\tfetch some_stu_cursor into userId,userName;\n\t\t\texit when some_stu_cursor%notfound; --取不到数据,则退出循环.\n\t\t\tDBMS_OUTPUT.PUT_LINE('id:'||userId||' name:'||userName);\n\t\tend loop;\n\tclose some_stu_cursor;\nEND;\n```\n\n## 游标传递参数\n```SQL\nDECLARE\n\tcursor some_stu_cursor(id_no number DEFAULT 5) is SELECT ID,userName from students where id <= id_no;\n\tuserId students.ID%TYPE;\n\tuserName students.userName%TYPE;\n\trec students%rowtype;\nBEGIN\n\t--隐含打开游标\n\tfor rec in some_stu_cursor(2) LOOP\n\t\t--隐含执行一个FETCH语句\n\t\tDBMS_OUTPUT.PUT_LINE('id:'||rec.id ||' name:'||rec.userName );\n\t\t--隐含监测c_sal%NOTFOUND\n\tend loop;\n\tDBMS_OUTPUT.PUT_LINE('======================');\n\topen some_stu_cursor(id_no => 6);\n\t\tloop\n\t\t\tfetch some_stu_cursor into userId,userName;\n\t\t\texit when some_stu_cursor%notfound; --取不到数据,则退出循环.\n\t\t\tDBMS_OUTPUT.PUT_LINE('id:'||userId||' name:'||userName);\n\t\tend loop;\n\tclose some_stu_cursor;\nEND;\n```\n\n##　游标指定当前行\n```SQL\nDECLARE\n\tuserId STUDENTS.ID%type;\n\ti number(2) := 1;\n\tcursor all_stu is SELECT id,userName from students FOR UPDATE;\nBEGIN\n\tfor userId in all_stu loop\n\t\tupdate students set id=i where CURRENT of all_stu;--当前行\n\t\ti := i+1;\n\tend loop;\nEND;\n```\n\n## 游标变量\n```SQL\nDECLARE\n\ttype ID_NAME_REC is RECORD(id STUDENTS.id%type,name students.USERNAME%type);\n\ttype ID_NAME_CURSOR is REF CURSOR RETURN ID_NAME_REC;\n\trec ID_NAME_REC;\n\tcur ID_NAME_CURSOR;\nBEGIN\n\tOPEN cur for SELECT id,username from students;\n\tloop\t--用for .. loop 不行.\n\t\tFETCH cur into rec;\n\t\tEXIT when cur%notfound;\n\t\tDBMS_OUTPUT.PUT_LINE('id:'||rec.id||' name:'||rec.name);\n\tend loop;\nEND;\n```\n\n## 游标变量 - 没有return\n```SQL\nDECLARE\n\tuserId students.ID%TYPE;\n\ttype REF_CURSOR is ref cursor;\n\tvar_cur REF_CURSOR;\nBEGIN\n\topen var_cur for SELECT id from students where id > 5;\n\tloop\t--用for .. loop 不行.\n\t\tFETCH var_cur into userid;\n\t\tEXIT when var_cur%notfound;\n\t\tDBMS_OUTPUT.PUT_LINE('id:'||userid);\n\tend loop;\nEND;\n```","source":"_posts/learn-pl-sql.md","raw":"---\ntitle: PL/SQL基础\ndate: 2017-03-07 10:30:16\ntags: [SQL,ORACLE]\ncategories: SQL\n---\n\n# 数据准备\n```SQL\nDROP TABLE students;\ncreate table students\n(\n  ID int,\n  userName varchar(100),\n  userPass varchar(100),\n  userAge  int\n);\n-- 插入10条\nDECLARE\n\ti number(2);\nBEGIN\n\tfor i in 1..10 loop\n\t\tINSERT INTO students VALUES(i,'jack'||i,'jj',20+i);\n\tend loop;\nEND;\n\nSELECT * from students;\n```\n\n# 语法基础\n\n## if\n```SQL\nDECLARE\n\ti number(1) := 5;\n\tj number(2) := 10;\nBEGIN\n\tif i < 5 then\n\t\tDBMS_OUTPUT.PUT_LINE('i<5');\n\telsif i=5 then\n\t\tDBMS_OUTPUT.PUT_LINE('i=5');\n\telse\n\t\tDBMS_OUTPUT.PUT_LINE('i=5');\n\tend if;\nEND;\n```\n## case when\n```SQL\nDECLARE\n\ti number(1) := 5;\n\tj number(2);\nBEGIN\n\tj:=\n\tcase i\n\t\twhen 0 then 0\n\t\twhen 5 then 5\n\t\telse 10\n\tend;\n\tDBMS_OUTPUT.PUT_LINE(j);\n\n\tj :=\n\tcase\n\t\twhen i < 5 then 0\n\t\twhen i=5 then 6\n\t\telse 10\n\tend;\n\tDBMS_OUTPUT.PUT_LINE(j);\nEND;\n```\n\n## loop\n```SQL\nDECLARE\n\ti number(1) := 0;\nBEGIN\n\tloop\n\t\ti := i + 1;\n\t\tDBMS_OUTPUT.PUT_LINE(i);\n\t\texit when i = 5;\n\tend loop;\nEND;\n```\n\n## while\n```SQL\nDECLARE\n\ti number(2) := 0;\nBEGIN\n\twhile i < 10 loop\n\t\tDBMS_OUTPUT.PUT_LINE(i);\n\t\ti := i + 1;\n\tend loop;\nEND;\n```\n\n## for..in\n```SQL\nBEGIN\n\tfor i in 0..9 loop\n\t\tDBMS_OUTPUT.PUT_LINE(i);\n\tend loop;\nEND;\n```\n\n## goto\n```SQL\nDECLARE\n\ti number(2) := 0;\n\tj number(2) := 0;\nBEGIN\n\tfor j in 0..9 loop\n\t\ti := i + 1;\n\t\tif i=5 then\n\t\t\tgoto EXIT_LOOP;\n\t\tend if;\n\tend loop;\n\t<<EXIT_LOOP>>\n\tDBMS_OUTPUT.PUT_LINE(i);\nEND;\n```\n\n# 获取插入语句的返回值. 可以获取增删改返回的数据\n```SQL\nDECLARE\n\trow_id ROWID;\n\tinfo VARCHAR2(200);\nBEGIN\n\tINSERT INTO students VALUES(1,'jack','jj',23)\n\treturning rowid,to_char(ID)||':'||userName\n\tINTO row_id,info;\n\tDBMS_OUTPUT.PUT_LINE('rowid:'||row_id);\n\tDBMS_OUTPUT.PUT_LINE('name:'||info);\nEND;\n```\n\n# 自定数据类型\n```SQL\nDECLARE\n\tTYPE RECORD_TYPE_PERSON_AGE IS RECORD(\n\t\tuName varchar(100),\n\t\tage students.userAge%TYPE\t--用%TYPE 类型定义与表相配的字段\n\t);\n\tuserRec RECORD_TYPE_PERSON_AGE;\nBEGIN\n\tSELECT userName,userAge INTO userRec from STUDENTS where ID=1;\n\tuserRec.uName := 'changed';\n\tDBMS_OUTPUT.PUT_LINE(userRec.uName||' '||userRec.age);\nEND;\n```\n\n# 数组类型\n```SQL\nDECLARE\n\t --定义一个最多保存5个VARCHAR(25)数据类型成员的VARRAY数据类型\n   TYPE reg_varray_type IS VARRAY(5) OF VARCHAR(25);\n   v_reg_varray REG_VARRAY_TYPE;\nBEGIN\n\t --用构造函数语法赋予初值\n   v_reg_varray := reg_varray_type('1', '2', '3', '4', '5');\n\n   DBMS_OUTPUT.PUT_LINE(v_reg_varray(1)||','\n                    ||v_reg_varray(2)||','\n                    ||v_reg_varray(3)||','\n                    ||v_reg_varray(4));\n   DBMS_OUTPUT.PUT_LINE(v_reg_varray(5));\n\t--用构造函数语法赋予初值后就可以这样对成员赋值\n   v_reg_varray(5) := 'xx';\n   DBMS_OUTPUT.PUT_LINE('5th is '||v_reg_varray(5));\nEND;\n```\n\n# 行类型, 使用%ROWTYPE\n```SQL\nDECLARE\n    vId students.ID%TYPE := 1; -- 属性类型引用\n    rec students%ROWTYPE;\t--行类型\nBEGIN\n    SELECT * INTO rec FROM students where ID=vId;\n    DBMS_OUTPUT.PUT_LINE('姓名:'||rec.userName||' 年龄:'||rec.userAge);\nEND;\n```\n\n# 定义表类型, 使用 TABLE\n```SQL\nDECLARE\n\tTYPE TABLE_STUDENTS IS TABLE OF STUDENTS%ROWTYPE INDEX BY BINARY_INTEGER;\n\trecs_students TABLE_STUDENTS;\n\tloop_count number(1) := 2;\nBEGIN\n\tFOR i IN 1..loop_count LOOP\n\t\tSELECT * into recs_students(i) from STUDENTS where id=i;\n\tEND LOOP;\n\tFOR j IN recs_students.FIRST..recs_students.LAST LOOP\n\t\tDBMS_OUTPUT.PUT_LINE(recs_students(j).userName||' '||recs_students(j).ID);\n\tEND LOOP;\nEND;\n```\n\n# 游标\n\n## 游标基础\n```SQL\n/*\n Cursor_name%FOUND     布尔型属性，当最近一次提取游标操作FETCH成功则为 TRUE,否则为FALSE；\n Cursor_name%NOTFOUND   布尔型属性，与%FOUND相反；\n Cursor_name%ISOPEN     布尔型属性，当游标已打开时返回 TRUE；\n Cursor_name%ROWCOUNT   数字型属性，返回已从游标中读取的记录数。\n*/\nDECLARE\n\tcursor some_stu_cursor is SELECT ID,userName from students;\n\tuserId students.ID%TYPE;\n\tuserName students.userName%TYPE;\nBEGIN\n\topen some_stu_cursor;\n\t\tloop\n\t\t\tfetch some_stu_cursor into userId,userName;\n\t\t\texit when some_stu_cursor%notfound; --取不到数据,则退出循环.\n\t\t\tDBMS_OUTPUT.PUT_LINE('id:'||userId||' name:'||userName);\n\t\tend loop;\n\tclose some_stu_cursor;\nEND;\n```\n\n## 游标传递参数\n```SQL\nDECLARE\n\tcursor some_stu_cursor(id_no number DEFAULT 5) is SELECT ID,userName from students where id <= id_no;\n\tuserId students.ID%TYPE;\n\tuserName students.userName%TYPE;\n\trec students%rowtype;\nBEGIN\n\t--隐含打开游标\n\tfor rec in some_stu_cursor(2) LOOP\n\t\t--隐含执行一个FETCH语句\n\t\tDBMS_OUTPUT.PUT_LINE('id:'||rec.id ||' name:'||rec.userName );\n\t\t--隐含监测c_sal%NOTFOUND\n\tend loop;\n\tDBMS_OUTPUT.PUT_LINE('======================');\n\topen some_stu_cursor(id_no => 6);\n\t\tloop\n\t\t\tfetch some_stu_cursor into userId,userName;\n\t\t\texit when some_stu_cursor%notfound; --取不到数据,则退出循环.\n\t\t\tDBMS_OUTPUT.PUT_LINE('id:'||userId||' name:'||userName);\n\t\tend loop;\n\tclose some_stu_cursor;\nEND;\n```\n\n##　游标指定当前行\n```SQL\nDECLARE\n\tuserId STUDENTS.ID%type;\n\ti number(2) := 1;\n\tcursor all_stu is SELECT id,userName from students FOR UPDATE;\nBEGIN\n\tfor userId in all_stu loop\n\t\tupdate students set id=i where CURRENT of all_stu;--当前行\n\t\ti := i+1;\n\tend loop;\nEND;\n```\n\n## 游标变量\n```SQL\nDECLARE\n\ttype ID_NAME_REC is RECORD(id STUDENTS.id%type,name students.USERNAME%type);\n\ttype ID_NAME_CURSOR is REF CURSOR RETURN ID_NAME_REC;\n\trec ID_NAME_REC;\n\tcur ID_NAME_CURSOR;\nBEGIN\n\tOPEN cur for SELECT id,username from students;\n\tloop\t--用for .. loop 不行.\n\t\tFETCH cur into rec;\n\t\tEXIT when cur%notfound;\n\t\tDBMS_OUTPUT.PUT_LINE('id:'||rec.id||' name:'||rec.name);\n\tend loop;\nEND;\n```\n\n## 游标变量 - 没有return\n```SQL\nDECLARE\n\tuserId students.ID%TYPE;\n\ttype REF_CURSOR is ref cursor;\n\tvar_cur REF_CURSOR;\nBEGIN\n\topen var_cur for SELECT id from students where id > 5;\n\tloop\t--用for .. loop 不行.\n\t\tFETCH var_cur into userid;\n\t\tEXIT when var_cur%notfound;\n\t\tDBMS_OUTPUT.PUT_LINE('id:'||userid);\n\tend loop;\nEND;\n```","slug":"learn-pl-sql","published":1,"updated":"2017-04-23T09:54:13.180Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v5y000ygknx8fzey82d","content":"<h1 id=\"数据准备\"><a href=\"#数据准备\" class=\"headerlink\" title=\"数据准备\"></a>数据准备</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> students;</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> students</div><div class=\"line\">(</div><div class=\"line\">  <span class=\"keyword\">ID</span> <span class=\"built_in\">int</span>,</div><div class=\"line\">  userName <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>),</div><div class=\"line\">  userPass <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>),</div><div class=\"line\">  userAge  <span class=\"built_in\">int</span></div><div class=\"line\">);</div><div class=\"line\"><span class=\"comment\">-- 插入10条</span></div><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\ti <span class=\"built_in\">number</span>(<span class=\"number\">2</span>);</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"number\">1.</span><span class=\"number\">.10</span> <span class=\"keyword\">loop</span></div><div class=\"line\">\t\t<span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> students <span class=\"keyword\">VALUES</span>(i,<span class=\"string\">'jack'</span>||i,<span class=\"string\">'jj'</span>,<span class=\"number\">20</span>+i);</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">from</span> students;</div></pre></td></tr></table></figure>\n<h1 id=\"语法基础\"><a href=\"#语法基础\" class=\"headerlink\" title=\"语法基础\"></a>语法基础</h1><h2 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"if\"></a>if</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\ti <span class=\"built_in\">number</span>(<span class=\"number\">1</span>) := <span class=\"number\">5</span>;</div><div class=\"line\">\tj number(2) := 10;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> i &lt; <span class=\"number\">5</span> <span class=\"keyword\">then</span></div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE(<span class=\"string\">'i&lt;5'</span>);</div><div class=\"line\">\telsif i=5 then</div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE('i=5');</div><div class=\"line\">\telse</div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE('i=5');</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">if</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"case-when\"><a href=\"#case-when\" class=\"headerlink\" title=\"case when\"></a>case when</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">DECLARE</div><div class=\"line\">\ti number(1) := 5;</div><div class=\"line\">\tj number(2);</div><div class=\"line\">BEGIN</div><div class=\"line\">\tj:=</div><div class=\"line\">\tcase i</div><div class=\"line\">\t\twhen 0 then 0</div><div class=\"line\">\t\twhen 5 then 5</div><div class=\"line\">\t\telse 10</div><div class=\"line\">\tend;</div><div class=\"line\">\tDBMS_OUTPUT.PUT_LINE(j);</div><div class=\"line\"></div><div class=\"line\">\tj :=</div><div class=\"line\">\tcase</div><div class=\"line\">\t\twhen i &lt; 5 then 0</div><div class=\"line\">\t\twhen i=5 then 6</div><div class=\"line\">\t\telse 10</div><div class=\"line\">\tend;</div><div class=\"line\">\tDBMS_OUTPUT.PUT_LINE(j);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h2 id=\"loop\"><a href=\"#loop\" class=\"headerlink\" title=\"loop\"></a>loop</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\ti <span class=\"built_in\">number</span>(<span class=\"number\">1</span>) := <span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">loop</span></div><div class=\"line\">\t\ti := i + <span class=\"number\">1</span>;</div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE(i);</div><div class=\"line\">\t\texit when i = 5;</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"while\"><a href=\"#while\" class=\"headerlink\" title=\"while\"></a>while</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\ti <span class=\"built_in\">number</span>(<span class=\"number\">2</span>) := <span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">while</span> i &lt; <span class=\"number\">10</span> <span class=\"keyword\">loop</span></div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE(i);</div><div class=\"line\">\t\ti := i + 1;</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"for-in\"><a href=\"#for-in\" class=\"headerlink\" title=\"for..in\"></a>for..in</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"number\">0.</span><span class=\"number\">.9</span> <span class=\"keyword\">loop</span></div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE(i);</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"goto\"><a href=\"#goto\" class=\"headerlink\" title=\"goto\"></a>goto</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">DECLARE</div><div class=\"line\">\ti number(2) := 0;</div><div class=\"line\">\tj number(2) := 0;</div><div class=\"line\">BEGIN</div><div class=\"line\">\tfor j in 0..9 loop</div><div class=\"line\">\t\ti := i + 1;</div><div class=\"line\">\t\tif i=5 then</div><div class=\"line\">\t\t\tgoto EXIT_LOOP;</div><div class=\"line\">\t\tend if;</div><div class=\"line\">\tend loop;</div><div class=\"line\">\t&lt;&lt;EXIT_LOOP&gt;&gt;</div><div class=\"line\">\tDBMS_OUTPUT.PUT_LINE(i);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h1 id=\"获取插入语句的返回值-可以获取增删改返回的数据\"><a href=\"#获取插入语句的返回值-可以获取增删改返回的数据\" class=\"headerlink\" title=\"获取插入语句的返回值. 可以获取增删改返回的数据\"></a>获取插入语句的返回值. 可以获取增删改返回的数据</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\trow_id <span class=\"keyword\">ROWID</span>;</div><div class=\"line\">\tinfo VARCHAR2(200);</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> students <span class=\"keyword\">VALUES</span>(<span class=\"number\">1</span>,<span class=\"string\">'jack'</span>,<span class=\"string\">'jj'</span>,<span class=\"number\">23</span>)</div><div class=\"line\">\t<span class=\"keyword\">returning</span> <span class=\"keyword\">rowid</span>,to_char(<span class=\"keyword\">ID</span>)||<span class=\"string\">':'</span>||userName</div><div class=\"line\">\t<span class=\"keyword\">INTO</span> row_id,info;</div><div class=\"line\">\tDBMS_OUTPUT.PUT_LINE('rowid:'||row_id);</div><div class=\"line\">\tDBMS_OUTPUT.PUT_LINE('name:'||info);</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h1 id=\"自定数据类型\"><a href=\"#自定数据类型\" class=\"headerlink\" title=\"自定数据类型\"></a>自定数据类型</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\t<span class=\"keyword\">TYPE</span> RECORD_TYPE_PERSON_AGE <span class=\"keyword\">IS</span> <span class=\"built_in\">RECORD</span>(</div><div class=\"line\">\t\tuName <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>),</div><div class=\"line\">\t\tage students.userAge%<span class=\"keyword\">TYPE</span>\t<span class=\"comment\">--用%TYPE 类型定义与表相配的字段</span></div><div class=\"line\">\t);</div><div class=\"line\">\tuserRec RECORD_TYPE_PERSON_AGE;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">SELECT</span> userName,userAge <span class=\"keyword\">INTO</span> userRec <span class=\"keyword\">from</span> STUDENTS <span class=\"keyword\">where</span> <span class=\"keyword\">ID</span>=<span class=\"number\">1</span>;</div><div class=\"line\">\tuserRec.uName := 'changed';</div><div class=\"line\">\tDBMS_OUTPUT.PUT_LINE(userRec.uName||' '||userRec.age);</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h1 id=\"数组类型\"><a href=\"#数组类型\" class=\"headerlink\" title=\"数组类型\"></a>数组类型</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\t <span class=\"comment\">--定义一个最多保存5个VARCHAR(25)数据类型成员的VARRAY数据类型</span></div><div class=\"line\">   <span class=\"keyword\">TYPE</span> reg_varray_type <span class=\"keyword\">IS</span> <span class=\"keyword\">VARRAY</span>(<span class=\"number\">5</span>) <span class=\"keyword\">OF</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">25</span>);</div><div class=\"line\">   v_reg_varray REG_VARRAY_TYPE;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t <span class=\"comment\">--用构造函数语法赋予初值</span></div><div class=\"line\">   v_reg_varray := reg_varray_type(<span class=\"string\">'1'</span>, <span class=\"string\">'2'</span>, <span class=\"string\">'3'</span>, <span class=\"string\">'4'</span>, <span class=\"string\">'5'</span>);</div><div class=\"line\"></div><div class=\"line\">   DBMS_OUTPUT.PUT_LINE(v_reg_varray(1)||','</div><div class=\"line\">                    ||v_reg_varray(2)||','</div><div class=\"line\">                    ||v_reg_varray(3)||','</div><div class=\"line\">                    ||v_reg_varray(4));</div><div class=\"line\">   DBMS_OUTPUT.PUT_LINE(v_reg_varray(5));</div><div class=\"line\">\t<span class=\"comment\">--用构造函数语法赋予初值后就可以这样对成员赋值</span></div><div class=\"line\">   v_reg_varray(5) := 'xx';</div><div class=\"line\">   DBMS_OUTPUT.PUT_LINE('5th is '||v_reg_varray(5));</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h1 id=\"行类型-使用-ROWTYPE\"><a href=\"#行类型-使用-ROWTYPE\" class=\"headerlink\" title=\"行类型, 使用%ROWTYPE\"></a>行类型, 使用%ROWTYPE</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">    vId students.ID%<span class=\"keyword\">TYPE</span> := <span class=\"number\">1</span>; <span class=\"comment\">-- 属性类型引用</span></div><div class=\"line\">    rec students%ROWTYPE;\t<span class=\"comment\">--行类型</span></div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">    <span class=\"keyword\">SELECT</span> * <span class=\"keyword\">INTO</span> rec <span class=\"keyword\">FROM</span> students <span class=\"keyword\">where</span> <span class=\"keyword\">ID</span>=vId;</div><div class=\"line\">    DBMS_OUTPUT.PUT_LINE('姓名:'||rec.userName||' 年龄:'||rec.userAge);</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h1 id=\"定义表类型-使用-TABLE\"><a href=\"#定义表类型-使用-TABLE\" class=\"headerlink\" title=\"定义表类型, 使用 TABLE\"></a>定义表类型, 使用 TABLE</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\t<span class=\"keyword\">TYPE</span> TABLE_STUDENTS <span class=\"keyword\">IS</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">OF</span> STUDENTS%ROWTYPE <span class=\"keyword\">INDEX</span> <span class=\"keyword\">BY</span> BINARY_INTEGER;</div><div class=\"line\">\trecs_students TABLE_STUDENTS;</div><div class=\"line\">\tloop_count number(1) := 2;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">FOR</span> i <span class=\"keyword\">IN</span> <span class=\"number\">1.</span>.loop_count <span class=\"keyword\">LOOP</span></div><div class=\"line\">\t\t<span class=\"keyword\">SELECT</span> * <span class=\"keyword\">into</span> recs_students(i) <span class=\"keyword\">from</span> STUDENTS <span class=\"keyword\">where</span> <span class=\"keyword\">id</span>=i;</div><div class=\"line\">\t<span class=\"keyword\">END</span> <span class=\"keyword\">LOOP</span>;</div><div class=\"line\">\tFOR j IN recs_students.FIRST..recs_students.LAST LOOP</div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE(recs_students(j).userName||' '||recs_students(j).ID);</div><div class=\"line\">\t<span class=\"keyword\">END</span> <span class=\"keyword\">LOOP</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h1 id=\"游标\"><a href=\"#游标\" class=\"headerlink\" title=\"游标\"></a>游标</h1><h2 id=\"游标基础\"><a href=\"#游标基础\" class=\"headerlink\" title=\"游标基础\"></a>游标基础</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"> Cursor_name%FOUND     布尔型属性，当最近一次提取游标操作FETCH成功则为 TRUE,否则为FALSE；</div><div class=\"line\"> Cursor_name%NOTFOUND   布尔型属性，与%FOUND相反；</div><div class=\"line\"> Cursor_name%ISOPEN     布尔型属性，当游标已打开时返回 TRUE；</div><div class=\"line\"> Cursor_name%ROWCOUNT   数字型属性，返回已从游标中读取的记录数。</div><div class=\"line\">*/</div><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\t<span class=\"keyword\">cursor</span> some_stu_cursor <span class=\"keyword\">is</span> <span class=\"keyword\">SELECT</span> <span class=\"keyword\">ID</span>,userName <span class=\"keyword\">from</span> students;</div><div class=\"line\">\tuserId students.ID%TYPE;</div><div class=\"line\">\tuserName students.userName%TYPE;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">open</span> some_stu_cursor;</div><div class=\"line\">\t\tloop</div><div class=\"line\">\t\t\tfetch some_stu_cursor into userId,userName;</div><div class=\"line\">\t\t\texit when some_stu_cursor%notfound; <span class=\"comment\">--取不到数据,则退出循环.</span></div><div class=\"line\">\t\t\tDBMS_OUTPUT.PUT_LINE('id:'||userId||' name:'||userName);</div><div class=\"line\">\t\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\">\tclose some_stu_cursor;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"游标传递参数\"><a href=\"#游标传递参数\" class=\"headerlink\" title=\"游标传递参数\"></a>游标传递参数</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">DECLARE</div><div class=\"line\">\tcursor some_stu_cursor(id_no number DEFAULT 5) is SELECT ID,userName from students where id &lt;= id_no;</div><div class=\"line\">\tuserId students.ID%TYPE;</div><div class=\"line\">\tuserName students.userName%TYPE;</div><div class=\"line\">\trec students%rowtype;</div><div class=\"line\">BEGIN</div><div class=\"line\">\t--隐含打开游标</div><div class=\"line\">\tfor rec in some_stu_cursor(2) LOOP</div><div class=\"line\">\t\t--隐含执行一个FETCH语句</div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE('id:'||rec.id ||' name:'||rec.userName );</div><div class=\"line\">\t\t--隐含监测c_sal%NOTFOUND</div><div class=\"line\">\tend loop;</div><div class=\"line\">\tDBMS_OUTPUT.PUT_LINE('======================');</div><div class=\"line\">\topen some_stu_cursor(id_no =&gt; 6);</div><div class=\"line\">\t\tloop</div><div class=\"line\">\t\t\tfetch some_stu_cursor into userId,userName;</div><div class=\"line\">\t\t\texit when some_stu_cursor%notfound; --取不到数据,则退出循环.</div><div class=\"line\">\t\t\tDBMS_OUTPUT.PUT_LINE('id:'||userId||' name:'||userName);</div><div class=\"line\">\t\tend loop;</div><div class=\"line\">\tclose some_stu_cursor;</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<p>##　游标指定当前行<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\tuserId STUDENTS.ID%<span class=\"keyword\">type</span>;</div><div class=\"line\">\ti number(2) := 1;</div><div class=\"line\">\tcursor all_stu is <span class=\"keyword\">SELECT</span> <span class=\"keyword\">id</span>,userName <span class=\"keyword\">from</span> students <span class=\"keyword\">FOR</span> <span class=\"keyword\">UPDATE</span>;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">for</span> userId <span class=\"keyword\">in</span> all_stu <span class=\"keyword\">loop</span></div><div class=\"line\">\t\t<span class=\"keyword\">update</span> students <span class=\"keyword\">set</span> <span class=\"keyword\">id</span>=i <span class=\"keyword\">where</span> <span class=\"keyword\">CURRENT</span> <span class=\"keyword\">of</span> all_stu;<span class=\"comment\">--当前行</span></div><div class=\"line\">\t\ti := i+1;</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure></p>\n<h2 id=\"游标变量\"><a href=\"#游标变量\" class=\"headerlink\" title=\"游标变量\"></a>游标变量</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\t<span class=\"keyword\">type</span> ID_NAME_REC <span class=\"keyword\">is</span> <span class=\"built_in\">RECORD</span>(<span class=\"keyword\">id</span> STUDENTS.id%<span class=\"keyword\">type</span>,<span class=\"keyword\">name</span> students.USERNAME%<span class=\"keyword\">type</span>);</div><div class=\"line\">\ttype ID_NAME_CURSOR is REF CURSOR RETURN ID_NAME_REC;</div><div class=\"line\">\trec ID_NAME_REC;</div><div class=\"line\">\tcur ID_NAME_CURSOR;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">OPEN</span> cur <span class=\"keyword\">for</span> <span class=\"keyword\">SELECT</span> <span class=\"keyword\">id</span>,username <span class=\"keyword\">from</span> students;</div><div class=\"line\">\tloop\t<span class=\"comment\">--用for .. loop 不行.</span></div><div class=\"line\">\t\tFETCH cur into rec;</div><div class=\"line\">\t\tEXIT when cur%notfound;</div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE('id:'||rec.id||' name:'||rec.name);</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"游标变量-没有return\"><a href=\"#游标变量-没有return\" class=\"headerlink\" title=\"游标变量 - 没有return\"></a>游标变量 - 没有return</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\tuserId students.ID%<span class=\"keyword\">TYPE</span>;</div><div class=\"line\">\ttype REF_CURSOR is ref cursor;</div><div class=\"line\">\tvar_cur REF_CURSOR;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">open</span> var_cur <span class=\"keyword\">for</span> <span class=\"keyword\">SELECT</span> <span class=\"keyword\">id</span> <span class=\"keyword\">from</span> students <span class=\"keyword\">where</span> <span class=\"keyword\">id</span> &gt; <span class=\"number\">5</span>;</div><div class=\"line\">\tloop\t<span class=\"comment\">--用for .. loop 不行.</span></div><div class=\"line\">\t\tFETCH var_cur into userid;</div><div class=\"line\">\t\tEXIT when var_cur%notfound;</div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE('id:'||userid);</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>","excerpt":"","more":"<h1 id=\"数据准备\"><a href=\"#数据准备\" class=\"headerlink\" title=\"数据准备\"></a>数据准备</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> students;</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> students</div><div class=\"line\">(</div><div class=\"line\">  <span class=\"keyword\">ID</span> <span class=\"built_in\">int</span>,</div><div class=\"line\">  userName <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>),</div><div class=\"line\">  userPass <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>),</div><div class=\"line\">  userAge  <span class=\"built_in\">int</span></div><div class=\"line\">);</div><div class=\"line\"><span class=\"comment\">-- 插入10条</span></div><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\ti <span class=\"built_in\">number</span>(<span class=\"number\">2</span>);</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"number\">1.</span><span class=\"number\">.10</span> <span class=\"keyword\">loop</span></div><div class=\"line\">\t\t<span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> students <span class=\"keyword\">VALUES</span>(i,<span class=\"string\">'jack'</span>||i,<span class=\"string\">'jj'</span>,<span class=\"number\">20</span>+i);</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">from</span> students;</div></pre></td></tr></table></figure>\n<h1 id=\"语法基础\"><a href=\"#语法基础\" class=\"headerlink\" title=\"语法基础\"></a>语法基础</h1><h2 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"if\"></a>if</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\ti <span class=\"built_in\">number</span>(<span class=\"number\">1</span>) := <span class=\"number\">5</span>;</div><div class=\"line\">\tj number(2) := 10;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> i &lt; <span class=\"number\">5</span> <span class=\"keyword\">then</span></div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE(<span class=\"string\">'i&lt;5'</span>);</div><div class=\"line\">\telsif i=5 then</div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE('i=5');</div><div class=\"line\">\telse</div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE('i=5');</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">if</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"case-when\"><a href=\"#case-when\" class=\"headerlink\" title=\"case when\"></a>case when</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">DECLARE</div><div class=\"line\">\ti number(1) := 5;</div><div class=\"line\">\tj number(2);</div><div class=\"line\">BEGIN</div><div class=\"line\">\tj:=</div><div class=\"line\">\tcase i</div><div class=\"line\">\t\twhen 0 then 0</div><div class=\"line\">\t\twhen 5 then 5</div><div class=\"line\">\t\telse 10</div><div class=\"line\">\tend;</div><div class=\"line\">\tDBMS_OUTPUT.PUT_LINE(j);</div><div class=\"line\"></div><div class=\"line\">\tj :=</div><div class=\"line\">\tcase</div><div class=\"line\">\t\twhen i &lt; 5 then 0</div><div class=\"line\">\t\twhen i=5 then 6</div><div class=\"line\">\t\telse 10</div><div class=\"line\">\tend;</div><div class=\"line\">\tDBMS_OUTPUT.PUT_LINE(j);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h2 id=\"loop\"><a href=\"#loop\" class=\"headerlink\" title=\"loop\"></a>loop</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\ti <span class=\"built_in\">number</span>(<span class=\"number\">1</span>) := <span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">loop</span></div><div class=\"line\">\t\ti := i + <span class=\"number\">1</span>;</div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE(i);</div><div class=\"line\">\t\texit when i = 5;</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"while\"><a href=\"#while\" class=\"headerlink\" title=\"while\"></a>while</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\ti <span class=\"built_in\">number</span>(<span class=\"number\">2</span>) := <span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">while</span> i &lt; <span class=\"number\">10</span> <span class=\"keyword\">loop</span></div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE(i);</div><div class=\"line\">\t\ti := i + 1;</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"for-in\"><a href=\"#for-in\" class=\"headerlink\" title=\"for..in\"></a>for..in</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"number\">0.</span><span class=\"number\">.9</span> <span class=\"keyword\">loop</span></div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE(i);</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"goto\"><a href=\"#goto\" class=\"headerlink\" title=\"goto\"></a>goto</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">DECLARE</div><div class=\"line\">\ti number(2) := 0;</div><div class=\"line\">\tj number(2) := 0;</div><div class=\"line\">BEGIN</div><div class=\"line\">\tfor j in 0..9 loop</div><div class=\"line\">\t\ti := i + 1;</div><div class=\"line\">\t\tif i=5 then</div><div class=\"line\">\t\t\tgoto EXIT_LOOP;</div><div class=\"line\">\t\tend if;</div><div class=\"line\">\tend loop;</div><div class=\"line\">\t&lt;&lt;EXIT_LOOP&gt;&gt;</div><div class=\"line\">\tDBMS_OUTPUT.PUT_LINE(i);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h1 id=\"获取插入语句的返回值-可以获取增删改返回的数据\"><a href=\"#获取插入语句的返回值-可以获取增删改返回的数据\" class=\"headerlink\" title=\"获取插入语句的返回值. 可以获取增删改返回的数据\"></a>获取插入语句的返回值. 可以获取增删改返回的数据</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\trow_id <span class=\"keyword\">ROWID</span>;</div><div class=\"line\">\tinfo VARCHAR2(200);</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> students <span class=\"keyword\">VALUES</span>(<span class=\"number\">1</span>,<span class=\"string\">'jack'</span>,<span class=\"string\">'jj'</span>,<span class=\"number\">23</span>)</div><div class=\"line\">\t<span class=\"keyword\">returning</span> <span class=\"keyword\">rowid</span>,to_char(<span class=\"keyword\">ID</span>)||<span class=\"string\">':'</span>||userName</div><div class=\"line\">\t<span class=\"keyword\">INTO</span> row_id,info;</div><div class=\"line\">\tDBMS_OUTPUT.PUT_LINE('rowid:'||row_id);</div><div class=\"line\">\tDBMS_OUTPUT.PUT_LINE('name:'||info);</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h1 id=\"自定数据类型\"><a href=\"#自定数据类型\" class=\"headerlink\" title=\"自定数据类型\"></a>自定数据类型</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\t<span class=\"keyword\">TYPE</span> RECORD_TYPE_PERSON_AGE <span class=\"keyword\">IS</span> <span class=\"built_in\">RECORD</span>(</div><div class=\"line\">\t\tuName <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>),</div><div class=\"line\">\t\tage students.userAge%<span class=\"keyword\">TYPE</span>\t<span class=\"comment\">--用%TYPE 类型定义与表相配的字段</span></div><div class=\"line\">\t);</div><div class=\"line\">\tuserRec RECORD_TYPE_PERSON_AGE;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">SELECT</span> userName,userAge <span class=\"keyword\">INTO</span> userRec <span class=\"keyword\">from</span> STUDENTS <span class=\"keyword\">where</span> <span class=\"keyword\">ID</span>=<span class=\"number\">1</span>;</div><div class=\"line\">\tuserRec.uName := 'changed';</div><div class=\"line\">\tDBMS_OUTPUT.PUT_LINE(userRec.uName||' '||userRec.age);</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h1 id=\"数组类型\"><a href=\"#数组类型\" class=\"headerlink\" title=\"数组类型\"></a>数组类型</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\t <span class=\"comment\">--定义一个最多保存5个VARCHAR(25)数据类型成员的VARRAY数据类型</span></div><div class=\"line\">   <span class=\"keyword\">TYPE</span> reg_varray_type <span class=\"keyword\">IS</span> <span class=\"keyword\">VARRAY</span>(<span class=\"number\">5</span>) <span class=\"keyword\">OF</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">25</span>);</div><div class=\"line\">   v_reg_varray REG_VARRAY_TYPE;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t <span class=\"comment\">--用构造函数语法赋予初值</span></div><div class=\"line\">   v_reg_varray := reg_varray_type(<span class=\"string\">'1'</span>, <span class=\"string\">'2'</span>, <span class=\"string\">'3'</span>, <span class=\"string\">'4'</span>, <span class=\"string\">'5'</span>);</div><div class=\"line\"></div><div class=\"line\">   DBMS_OUTPUT.PUT_LINE(v_reg_varray(1)||','</div><div class=\"line\">                    ||v_reg_varray(2)||','</div><div class=\"line\">                    ||v_reg_varray(3)||','</div><div class=\"line\">                    ||v_reg_varray(4));</div><div class=\"line\">   DBMS_OUTPUT.PUT_LINE(v_reg_varray(5));</div><div class=\"line\">\t<span class=\"comment\">--用构造函数语法赋予初值后就可以这样对成员赋值</span></div><div class=\"line\">   v_reg_varray(5) := 'xx';</div><div class=\"line\">   DBMS_OUTPUT.PUT_LINE('5th is '||v_reg_varray(5));</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h1 id=\"行类型-使用-ROWTYPE\"><a href=\"#行类型-使用-ROWTYPE\" class=\"headerlink\" title=\"行类型, 使用%ROWTYPE\"></a>行类型, 使用%ROWTYPE</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">    vId students.ID%<span class=\"keyword\">TYPE</span> := <span class=\"number\">1</span>; <span class=\"comment\">-- 属性类型引用</span></div><div class=\"line\">    rec students%ROWTYPE;\t<span class=\"comment\">--行类型</span></div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">    <span class=\"keyword\">SELECT</span> * <span class=\"keyword\">INTO</span> rec <span class=\"keyword\">FROM</span> students <span class=\"keyword\">where</span> <span class=\"keyword\">ID</span>=vId;</div><div class=\"line\">    DBMS_OUTPUT.PUT_LINE('姓名:'||rec.userName||' 年龄:'||rec.userAge);</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h1 id=\"定义表类型-使用-TABLE\"><a href=\"#定义表类型-使用-TABLE\" class=\"headerlink\" title=\"定义表类型, 使用 TABLE\"></a>定义表类型, 使用 TABLE</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\t<span class=\"keyword\">TYPE</span> TABLE_STUDENTS <span class=\"keyword\">IS</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">OF</span> STUDENTS%ROWTYPE <span class=\"keyword\">INDEX</span> <span class=\"keyword\">BY</span> BINARY_INTEGER;</div><div class=\"line\">\trecs_students TABLE_STUDENTS;</div><div class=\"line\">\tloop_count number(1) := 2;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">FOR</span> i <span class=\"keyword\">IN</span> <span class=\"number\">1.</span>.loop_count <span class=\"keyword\">LOOP</span></div><div class=\"line\">\t\t<span class=\"keyword\">SELECT</span> * <span class=\"keyword\">into</span> recs_students(i) <span class=\"keyword\">from</span> STUDENTS <span class=\"keyword\">where</span> <span class=\"keyword\">id</span>=i;</div><div class=\"line\">\t<span class=\"keyword\">END</span> <span class=\"keyword\">LOOP</span>;</div><div class=\"line\">\tFOR j IN recs_students.FIRST..recs_students.LAST LOOP</div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE(recs_students(j).userName||' '||recs_students(j).ID);</div><div class=\"line\">\t<span class=\"keyword\">END</span> <span class=\"keyword\">LOOP</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h1 id=\"游标\"><a href=\"#游标\" class=\"headerlink\" title=\"游标\"></a>游标</h1><h2 id=\"游标基础\"><a href=\"#游标基础\" class=\"headerlink\" title=\"游标基础\"></a>游标基础</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*</div><div class=\"line\"> Cursor_name%FOUND     布尔型属性，当最近一次提取游标操作FETCH成功则为 TRUE,否则为FALSE；</div><div class=\"line\"> Cursor_name%NOTFOUND   布尔型属性，与%FOUND相反；</div><div class=\"line\"> Cursor_name%ISOPEN     布尔型属性，当游标已打开时返回 TRUE；</div><div class=\"line\"> Cursor_name%ROWCOUNT   数字型属性，返回已从游标中读取的记录数。</div><div class=\"line\">*/</span></div><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\t<span class=\"keyword\">cursor</span> some_stu_cursor <span class=\"keyword\">is</span> <span class=\"keyword\">SELECT</span> <span class=\"keyword\">ID</span>,userName <span class=\"keyword\">from</span> students;</div><div class=\"line\">\tuserId students.ID%TYPE;</div><div class=\"line\">\tuserName students.userName%TYPE;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">open</span> some_stu_cursor;</div><div class=\"line\">\t\tloop</div><div class=\"line\">\t\t\tfetch some_stu_cursor into userId,userName;</div><div class=\"line\">\t\t\texit when some_stu_cursor%notfound; <span class=\"comment\">--取不到数据,则退出循环.</span></div><div class=\"line\">\t\t\tDBMS_OUTPUT.PUT_LINE('id:'||userId||' name:'||userName);</div><div class=\"line\">\t\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\">\tclose some_stu_cursor;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"游标传递参数\"><a href=\"#游标传递参数\" class=\"headerlink\" title=\"游标传递参数\"></a>游标传递参数</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">DECLARE</div><div class=\"line\">\tcursor some_stu_cursor(id_no number DEFAULT 5) is SELECT ID,userName from students where id &lt;= id_no;</div><div class=\"line\">\tuserId students.ID%TYPE;</div><div class=\"line\">\tuserName students.userName%TYPE;</div><div class=\"line\">\trec students%rowtype;</div><div class=\"line\">BEGIN</div><div class=\"line\">\t--隐含打开游标</div><div class=\"line\">\tfor rec in some_stu_cursor(2) LOOP</div><div class=\"line\">\t\t--隐含执行一个FETCH语句</div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE('id:'||rec.id ||' name:'||rec.userName );</div><div class=\"line\">\t\t--隐含监测c_sal%NOTFOUND</div><div class=\"line\">\tend loop;</div><div class=\"line\">\tDBMS_OUTPUT.PUT_LINE('======================');</div><div class=\"line\">\topen some_stu_cursor(id_no =&gt; 6);</div><div class=\"line\">\t\tloop</div><div class=\"line\">\t\t\tfetch some_stu_cursor into userId,userName;</div><div class=\"line\">\t\t\texit when some_stu_cursor%notfound; --取不到数据,则退出循环.</div><div class=\"line\">\t\t\tDBMS_OUTPUT.PUT_LINE('id:'||userId||' name:'||userName);</div><div class=\"line\">\t\tend loop;</div><div class=\"line\">\tclose some_stu_cursor;</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<p>##　游标指定当前行<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\tuserId STUDENTS.ID%<span class=\"keyword\">type</span>;</div><div class=\"line\">\ti number(2) := 1;</div><div class=\"line\">\tcursor all_stu is <span class=\"keyword\">SELECT</span> <span class=\"keyword\">id</span>,userName <span class=\"keyword\">from</span> students <span class=\"keyword\">FOR</span> <span class=\"keyword\">UPDATE</span>;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">for</span> userId <span class=\"keyword\">in</span> all_stu <span class=\"keyword\">loop</span></div><div class=\"line\">\t\t<span class=\"keyword\">update</span> students <span class=\"keyword\">set</span> <span class=\"keyword\">id</span>=i <span class=\"keyword\">where</span> <span class=\"keyword\">CURRENT</span> <span class=\"keyword\">of</span> all_stu;<span class=\"comment\">--当前行</span></div><div class=\"line\">\t\ti := i+1;</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure></p>\n<h2 id=\"游标变量\"><a href=\"#游标变量\" class=\"headerlink\" title=\"游标变量\"></a>游标变量</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\t<span class=\"keyword\">type</span> ID_NAME_REC <span class=\"keyword\">is</span> <span class=\"built_in\">RECORD</span>(<span class=\"keyword\">id</span> STUDENTS.id%<span class=\"keyword\">type</span>,<span class=\"keyword\">name</span> students.USERNAME%<span class=\"keyword\">type</span>);</div><div class=\"line\">\ttype ID_NAME_CURSOR is REF CURSOR RETURN ID_NAME_REC;</div><div class=\"line\">\trec ID_NAME_REC;</div><div class=\"line\">\tcur ID_NAME_CURSOR;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">OPEN</span> cur <span class=\"keyword\">for</span> <span class=\"keyword\">SELECT</span> <span class=\"keyword\">id</span>,username <span class=\"keyword\">from</span> students;</div><div class=\"line\">\tloop\t<span class=\"comment\">--用for .. loop 不行.</span></div><div class=\"line\">\t\tFETCH cur into rec;</div><div class=\"line\">\t\tEXIT when cur%notfound;</div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE('id:'||rec.id||' name:'||rec.name);</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>\n<h2 id=\"游标变量-没有return\"><a href=\"#游标变量-没有return\" class=\"headerlink\" title=\"游标变量 - 没有return\"></a>游标变量 - 没有return</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">DECLARE</span></div><div class=\"line\">\tuserId students.ID%<span class=\"keyword\">TYPE</span>;</div><div class=\"line\">\ttype REF_CURSOR is ref cursor;</div><div class=\"line\">\tvar_cur REF_CURSOR;</div><div class=\"line\"><span class=\"keyword\">BEGIN</span></div><div class=\"line\">\t<span class=\"keyword\">open</span> var_cur <span class=\"keyword\">for</span> <span class=\"keyword\">SELECT</span> <span class=\"keyword\">id</span> <span class=\"keyword\">from</span> students <span class=\"keyword\">where</span> <span class=\"keyword\">id</span> &gt; <span class=\"number\">5</span>;</div><div class=\"line\">\tloop\t<span class=\"comment\">--用for .. loop 不行.</span></div><div class=\"line\">\t\tFETCH var_cur into userid;</div><div class=\"line\">\t\tEXIT when var_cur%notfound;</div><div class=\"line\">\t\tDBMS_OUTPUT.PUT_LINE('id:'||userid);</div><div class=\"line\">\t<span class=\"keyword\">end</span> <span class=\"keyword\">loop</span>;</div><div class=\"line\"><span class=\"keyword\">END</span>;</div></pre></td></tr></table></figure>"},{"title":"Markdown 基本语法","_content":"\n**_[参考](http://www.jianshu.com/p/1e402922ee32/)_**\n\n# 标题\n```\n# 一级标题\n## 二级标题\n### 三级标题\n```\n# 一级标题\n## 二级标题\n### 三级标题\n\n\n***\n# 常用\n## 无序列表\n```\n* a\n* b\n* c\n```\n* a\n* b\n* c\n\n***\n## 有序列表\n```\n1. a\n2. b\n3. c\n```\n1. a\n2. b\n3. c\n\n***\n## 表格\n```\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n```\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\n***\n## 分割线\n```\n*** 或 ---\n```\n\n***\n## 图片\n`![description]($path)`\n![打赏](/img/markdown/pic.png)\n\n***\n## 链接\n`[google](https://www.google.com)`\n[google](https://www.google.com)\n\n***\n## 语法高亮\n```bash\necho \"hexo highlight\"\n```\n\n```java\nclass Hello implements java.io.Serializable{\n    private final String world = \"World!\";\n}\n```","source":"_posts/markdown.md","raw":"---\ntitle: Markdown 基本语法\ntag: Markdown\ncategories: Markdown\n---\n\n**_[参考](http://www.jianshu.com/p/1e402922ee32/)_**\n\n# 标题\n```\n# 一级标题\n## 二级标题\n### 三级标题\n```\n# 一级标题\n## 二级标题\n### 三级标题\n\n\n***\n# 常用\n## 无序列表\n```\n* a\n* b\n* c\n```\n* a\n* b\n* c\n\n***\n## 有序列表\n```\n1. a\n2. b\n3. c\n```\n1. a\n2. b\n3. c\n\n***\n## 表格\n```\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n```\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\n***\n## 分割线\n```\n*** 或 ---\n```\n\n***\n## 图片\n`![description]($path)`\n![打赏](/img/markdown/pic.png)\n\n***\n## 链接\n`[google](https://www.google.com)`\n[google](https://www.google.com)\n\n***\n## 语法高亮\n```bash\necho \"hexo highlight\"\n```\n\n```java\nclass Hello implements java.io.Serializable{\n    private final String world = \"World!\";\n}\n```","slug":"markdown","published":1,"date":"2017-04-23T10:25:04.374Z","updated":"2017-04-23T09:54:13.185Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v610010gknxt7yvupk6","content":"<p><strong><em><a href=\"http://www.jianshu.com/p/1e402922ee32/\" target=\"_blank\" rel=\"external\">参考</a></em></strong></p>\n<h1 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 一级标题</div><div class=\"line\">## 二级标题</div><div class=\"line\">### 三级标题</div></pre></td></tr></table></figure>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><hr>\n<h1 id=\"常用\"><a href=\"#常用\" class=\"headerlink\" title=\"常用\"></a>常用</h1><h2 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">* a</div><div class=\"line\">* b</div><div class=\"line\">* c</div></pre></td></tr></table></figure>\n<ul>\n<li>a</li>\n<li>b</li>\n<li>c</li>\n</ul>\n<hr>\n<h2 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. a</div><div class=\"line\">2. b</div><div class=\"line\">3. c</div></pre></td></tr></table></figure>\n<ol>\n<li>a</li>\n<li>b</li>\n<li>c</li>\n</ol>\n<hr>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">| Tables        | Are           | Cool  |</div><div class=\"line\">| ------------- |:-------------:| -----:|</div><div class=\"line\">| col 3 is      | right-aligned | $1600 |</div><div class=\"line\">| col 2 is      | centered      |   $12 |</div><div class=\"line\">| zebra stripes | are neat      |    $1 |</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Tables</th>\n<th style=\"text-align:center\">Are</th>\n<th style=\"text-align:right\">Cool</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>col 3 is</td>\n<td style=\"text-align:center\">right-aligned</td>\n<td style=\"text-align:right\">$1600</td>\n</tr>\n<tr>\n<td>col 2 is</td>\n<td style=\"text-align:center\">centered</td>\n<td style=\"text-align:right\">$12</td>\n</tr>\n<tr>\n<td>zebra stripes</td>\n<td style=\"text-align:center\">are neat</td>\n<td style=\"text-align:right\">$1</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">*** 或 ---</div></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><p><code>![description]($path)</code><br><img src=\"/img/markdown/pic.png\" alt=\"打赏\"></p>\n<hr>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><code>[google](https://www.google.com)</code><br><a href=\"https://www.google.com\" target=\"_blank\" rel=\"external\">google</a></p>\n<hr>\n<h2 id=\"语法高亮\"><a href=\"#语法高亮\" class=\"headerlink\" title=\"语法高亮\"></a>语法高亮</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"hexo highlight\"</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Hello</span> <span class=\"keyword\">implements</span> <span class=\"title\">java</span>.<span class=\"title\">io</span>.<span class=\"title\">Serializable</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String world = <span class=\"string\">\"World!\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","excerpt":"","more":"<p><strong><em><a href=\"http://www.jianshu.com/p/1e402922ee32/\">参考</a></em></strong></p>\n<h1 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 一级标题</div><div class=\"line\">## 二级标题</div><div class=\"line\">### 三级标题</div></pre></td></tr></table></figure>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><hr>\n<h1 id=\"常用\"><a href=\"#常用\" class=\"headerlink\" title=\"常用\"></a>常用</h1><h2 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">* a</div><div class=\"line\">* b</div><div class=\"line\">* c</div></pre></td></tr></table></figure>\n<ul>\n<li>a</li>\n<li>b</li>\n<li>c</li>\n</ul>\n<hr>\n<h2 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. a</div><div class=\"line\">2. b</div><div class=\"line\">3. c</div></pre></td></tr></table></figure>\n<ol>\n<li>a</li>\n<li>b</li>\n<li>c</li>\n</ol>\n<hr>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">| Tables        | Are           | Cool  |</div><div class=\"line\">| ------------- |:-------------:| -----:|</div><div class=\"line\">| col 3 is      | right-aligned | $1600 |</div><div class=\"line\">| col 2 is      | centered      |   $12 |</div><div class=\"line\">| zebra stripes | are neat      |    $1 |</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Tables</th>\n<th style=\"text-align:center\">Are</th>\n<th style=\"text-align:right\">Cool</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>col 3 is</td>\n<td style=\"text-align:center\">right-aligned</td>\n<td style=\"text-align:right\">$1600</td>\n</tr>\n<tr>\n<td>col 2 is</td>\n<td style=\"text-align:center\">centered</td>\n<td style=\"text-align:right\">$12</td>\n</tr>\n<tr>\n<td>zebra stripes</td>\n<td style=\"text-align:center\">are neat</td>\n<td style=\"text-align:right\">$1</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">*** 或 ---</div></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><p><code>![description]($path)</code><br><img src=\"/img/markdown/pic.png\" alt=\"打赏\"></p>\n<hr>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><code>[google](https://www.google.com)</code><br><a href=\"https://www.google.com\">google</a></p>\n<hr>\n<h2 id=\"语法高亮\"><a href=\"#语法高亮\" class=\"headerlink\" title=\"语法高亮\"></a>语法高亮</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"hexo highlight\"</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Hello</span> <span class=\"keyword\">implements</span> <span class=\"title\">java</span>.<span class=\"title\">io</span>.<span class=\"title\">Serializable</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String world = <span class=\"string\">\"World!\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"善用佳软","date":"2017-02-06T09:11:24.000Z","_content":"\n工欲善其事必先利其器.\n\n# IDE\n * IDEA - Java开发利器\n\n# 压缩\n * 7-zip - 开源精简\n\n# 文档\n * Atom\n    ```\n    推荐插件:\n      (autocomplete-json),\n      (format-sql,\"SQL格式化\"),\n      (highlight-selected,\"高亮当前选中字符\"),\n      (minimap,\"代码小视图\"),\n      (pretty-json,\"JSON格式化\"),\n      (split-diff,\"代码对比\")\n    ```\n * Notepad++\n\n# 剪切板\n * Ditto - 攻城狮强烈推荐使用\n\n# 文件管理\n * Total Commander - 学习成本较大\n * Clover - 简单易用\n * EveryThing - 高效,支持正则,模糊搜索.\n * Listary - 不仅支持文件搜索,而且支持启动应用\n\n# To-do\n * Wunderlist - 多终端同步\n\n# 系统维护\n * CCleaner - 小巧\n * 绿鹰文件解锁粉碎器 - 绿色便捷\n\n# 梯子\n * Lantern\n\n# 思维导图\n * 百度脑图\n * XMind","source":"_posts/nice-software.md","raw":"---\ntitle: 善用佳软\ndate: 2017-02-06 17:11:24\ntags: 开发环境\ncategories: 开发环境\n---\n\n工欲善其事必先利其器.\n\n# IDE\n * IDEA - Java开发利器\n\n# 压缩\n * 7-zip - 开源精简\n\n# 文档\n * Atom\n    ```\n    推荐插件:\n      (autocomplete-json),\n      (format-sql,\"SQL格式化\"),\n      (highlight-selected,\"高亮当前选中字符\"),\n      (minimap,\"代码小视图\"),\n      (pretty-json,\"JSON格式化\"),\n      (split-diff,\"代码对比\")\n    ```\n * Notepad++\n\n# 剪切板\n * Ditto - 攻城狮强烈推荐使用\n\n# 文件管理\n * Total Commander - 学习成本较大\n * Clover - 简单易用\n * EveryThing - 高效,支持正则,模糊搜索.\n * Listary - 不仅支持文件搜索,而且支持启动应用\n\n# To-do\n * Wunderlist - 多终端同步\n\n# 系统维护\n * CCleaner - 小巧\n * 绿鹰文件解锁粉碎器 - 绿色便捷\n\n# 梯子\n * Lantern\n\n# 思维导图\n * 百度脑图\n * XMind","slug":"nice-software","published":1,"updated":"2017-04-23T09:54:13.192Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v640013gknx44w0nt1a","content":"<p>工欲善其事必先利其器.</p>\n<h1 id=\"IDE\"><a href=\"#IDE\" class=\"headerlink\" title=\"IDE\"></a>IDE</h1><ul>\n<li>IDEA - Java开发利器</li>\n</ul>\n<h1 id=\"压缩\"><a href=\"#压缩\" class=\"headerlink\" title=\"压缩\"></a>压缩</h1><ul>\n<li>7-zip - 开源精简</li>\n</ul>\n<h1 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h1><ul>\n<li><p>Atom</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">推荐插件:</div><div class=\"line\">  (autocomplete-json),</div><div class=\"line\">  (format-sql,&quot;SQL格式化&quot;),</div><div class=\"line\">  (highlight-selected,&quot;高亮当前选中字符&quot;),</div><div class=\"line\">  (minimap,&quot;代码小视图&quot;),</div><div class=\"line\">  (pretty-json,&quot;JSON格式化&quot;),</div><div class=\"line\">  (split-diff,&quot;代码对比&quot;)</div></pre></td></tr></table></figure>\n</li>\n<li><p>Notepad++</p>\n</li>\n</ul>\n<h1 id=\"剪切板\"><a href=\"#剪切板\" class=\"headerlink\" title=\"剪切板\"></a>剪切板</h1><ul>\n<li>Ditto - 攻城狮强烈推荐使用</li>\n</ul>\n<h1 id=\"文件管理\"><a href=\"#文件管理\" class=\"headerlink\" title=\"文件管理\"></a>文件管理</h1><ul>\n<li>Total Commander - 学习成本较大</li>\n<li>Clover - 简单易用</li>\n<li>EveryThing - 高效,支持正则,模糊搜索.</li>\n<li>Listary - 不仅支持文件搜索,而且支持启动应用</li>\n</ul>\n<h1 id=\"To-do\"><a href=\"#To-do\" class=\"headerlink\" title=\"To-do\"></a>To-do</h1><ul>\n<li>Wunderlist - 多终端同步</li>\n</ul>\n<h1 id=\"系统维护\"><a href=\"#系统维护\" class=\"headerlink\" title=\"系统维护\"></a>系统维护</h1><ul>\n<li>CCleaner - 小巧</li>\n<li>绿鹰文件解锁粉碎器 - 绿色便捷</li>\n</ul>\n<h1 id=\"梯子\"><a href=\"#梯子\" class=\"headerlink\" title=\"梯子\"></a>梯子</h1><ul>\n<li>Lantern</li>\n</ul>\n<h1 id=\"思维导图\"><a href=\"#思维导图\" class=\"headerlink\" title=\"思维导图\"></a>思维导图</h1><ul>\n<li>百度脑图</li>\n<li>XMind</li>\n</ul>\n","excerpt":"","more":"<p>工欲善其事必先利其器.</p>\n<h1 id=\"IDE\"><a href=\"#IDE\" class=\"headerlink\" title=\"IDE\"></a>IDE</h1><ul>\n<li>IDEA - Java开发利器</li>\n</ul>\n<h1 id=\"压缩\"><a href=\"#压缩\" class=\"headerlink\" title=\"压缩\"></a>压缩</h1><ul>\n<li>7-zip - 开源精简</li>\n</ul>\n<h1 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h1><ul>\n<li><p>Atom</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">推荐插件:</div><div class=\"line\">  (autocomplete-json),</div><div class=\"line\">  (format-sql,&quot;SQL格式化&quot;),</div><div class=\"line\">  (highlight-selected,&quot;高亮当前选中字符&quot;),</div><div class=\"line\">  (minimap,&quot;代码小视图&quot;),</div><div class=\"line\">  (pretty-json,&quot;JSON格式化&quot;),</div><div class=\"line\">  (split-diff,&quot;代码对比&quot;)</div></pre></td></tr></table></figure>\n</li>\n<li><p>Notepad++</p>\n</li>\n</ul>\n<h1 id=\"剪切板\"><a href=\"#剪切板\" class=\"headerlink\" title=\"剪切板\"></a>剪切板</h1><ul>\n<li>Ditto - 攻城狮强烈推荐使用</li>\n</ul>\n<h1 id=\"文件管理\"><a href=\"#文件管理\" class=\"headerlink\" title=\"文件管理\"></a>文件管理</h1><ul>\n<li>Total Commander - 学习成本较大</li>\n<li>Clover - 简单易用</li>\n<li>EveryThing - 高效,支持正则,模糊搜索.</li>\n<li>Listary - 不仅支持文件搜索,而且支持启动应用</li>\n</ul>\n<h1 id=\"To-do\"><a href=\"#To-do\" class=\"headerlink\" title=\"To-do\"></a>To-do</h1><ul>\n<li>Wunderlist - 多终端同步</li>\n</ul>\n<h1 id=\"系统维护\"><a href=\"#系统维护\" class=\"headerlink\" title=\"系统维护\"></a>系统维护</h1><ul>\n<li>CCleaner - 小巧</li>\n<li>绿鹰文件解锁粉碎器 - 绿色便捷</li>\n</ul>\n<h1 id=\"梯子\"><a href=\"#梯子\" class=\"headerlink\" title=\"梯子\"></a>梯子</h1><ul>\n<li>Lantern</li>\n</ul>\n<h1 id=\"思维导图\"><a href=\"#思维导图\" class=\"headerlink\" title=\"思维导图\"></a>思维导图</h1><ul>\n<li>百度脑图</li>\n<li>XMind</li>\n</ul>\n"},{"title":"小算法练习","date":"2017-04-09T09:40:25.000Z","_content":"\n# 链表翻转\n```c\nnode *head;\n\nnode *h=head;\nnode *hn=head->next;\nnode *hnn=hn->next;\n\nhead->next =NULL;\n\nwhile(hn != NULL){\n    hn->next =h;\n    h= hn;\n    hn = hnn;\n    hnn = hnn->next;\n}\n```\n![链表翻转](/img/小算法练习/链表翻转示意图.jpg)\n","source":"_posts/小算法练习.md","raw":"---\ntitle: 小算法练习\ndate: 2017-04-09 17:40:25\ntags: Algorithm\ncategories: Algorithm\n---\n\n# 链表翻转\n```c\nnode *head;\n\nnode *h=head;\nnode *hn=head->next;\nnode *hnn=hn->next;\n\nhead->next =NULL;\n\nwhile(hn != NULL){\n    hn->next =h;\n    h= hn;\n    hn = hnn;\n    hnn = hnn->next;\n}\n```\n![链表翻转](/img/小算法练习/链表翻转示意图.jpg)\n","slug":"小算法练习","published":1,"updated":"2017-04-23T09:54:13.196Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1ul0v670017gknxp7ggltiv","content":"<h1 id=\"链表翻转\"><a href=\"#链表翻转\" class=\"headerlink\" title=\"链表翻转\"></a>链表翻转</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">node *head;</div><div class=\"line\"></div><div class=\"line\">node *h=head;</div><div class=\"line\">node *hn=head-&gt;next;</div><div class=\"line\">node *hnn=hn-&gt;next;</div><div class=\"line\"></div><div class=\"line\">head-&gt;next =<span class=\"literal\">NULL</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">while</span>(hn != <span class=\"literal\">NULL</span>)&#123;</div><div class=\"line\">    hn-&gt;next =h;</div><div class=\"line\">    h= hn;</div><div class=\"line\">    hn = hnn;</div><div class=\"line\">    hnn = hnn-&gt;next;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img src=\"/img/小算法练习/链表翻转示意图.jpg\" alt=\"链表翻转\"></p>\n","excerpt":"","more":"<h1 id=\"链表翻转\"><a href=\"#链表翻转\" class=\"headerlink\" title=\"链表翻转\"></a>链表翻转</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">node *head;</div><div class=\"line\"></div><div class=\"line\">node *h=head;</div><div class=\"line\">node *hn=head-&gt;next;</div><div class=\"line\">node *hnn=hn-&gt;next;</div><div class=\"line\"></div><div class=\"line\">head-&gt;next =<span class=\"literal\">NULL</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">while</span>(hn != <span class=\"literal\">NULL</span>)&#123;</div><div class=\"line\">    hn-&gt;next =h;</div><div class=\"line\">    h= hn;</div><div class=\"line\">    hn = hnn;</div><div class=\"line\">    hnn = hnn-&gt;next;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img src=\"/img/小算法练习/链表翻转示意图.jpg\" alt=\"链表翻转\"></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj1ul0v4x000agknxb83yelb7","category_id":"cj1ul0v4k0007gknx908uwnas","_id":"cj1ul0v5c000ggknxofj5k1a6"},{"post_id":"cj1ul0v460003gknxw5jf61to","category_id":"cj1ul0v4k0007gknx908uwnas","_id":"cj1ul0v5i000kgknxd2v07n71"},{"post_id":"cj1ul0v50000bgknxd4lchxui","category_id":"cj1ul0v4k0007gknx908uwnas","_id":"cj1ul0v5m000mgknxkavyfwg4"},{"post_id":"cj1ul0v58000fgknx48usshk3","category_id":"cj1ul0v4k0007gknx908uwnas","_id":"cj1ul0v5r000pgknxj014pxt6"},{"post_id":"cj1ul0v4g0005gknxdiv4ve3b","category_id":"cj1ul0v52000cgknxgi8t7rl2","_id":"cj1ul0v5v000sgknx07j09ydm"},{"post_id":"cj1ul0v5e000hgknxujatdv8o","category_id":"cj1ul0v4k0007gknx908uwnas","_id":"cj1ul0v5y000xgknxicqhmqsa"},{"post_id":"cj1ul0v5j000lgknxbk984d3y","category_id":"cj1ul0v4k0007gknx908uwnas","_id":"cj1ul0v60000zgknx6eug2lpc"},{"post_id":"cj1ul0v4t0009gknx352wqjcb","category_id":"cj1ul0v52000cgknxgi8t7rl2","_id":"cj1ul0v640012gknxo0vw4cj3"},{"post_id":"cj1ul0v5m000ngknxurn6a8dv","category_id":"cj1ul0v4k0007gknx908uwnas","_id":"cj1ul0v670016gknxen6edjgx"},{"post_id":"cj1ul0v5r000qgknx00noe06m","category_id":"cj1ul0v5y000wgknx3yhiqqmb","_id":"cj1ul0v6d0019gknxidb9iey3"},{"post_id":"cj1ul0v5v000tgknxp3evu0oa","category_id":"cj1ul0v660014gknxq05flw8n","_id":"cj1ul0v6m001egknx42ropi9a"},{"post_id":"cj1ul0v5y000ygknx8fzey82d","category_id":"cj1ul0v660014gknxq05flw8n","_id":"cj1ul0v6q001jgknxs2ome9ak"},{"post_id":"cj1ul0v610010gknxt7yvupk6","category_id":"cj1ul0v6n001ggknxnm0xfgwd","_id":"cj1ul0v6u001pgknxplarps55"},{"post_id":"cj1ul0v640013gknx44w0nt1a","category_id":"cj1ul0v6r001lgknxbqh9gur2","_id":"cj1ul0v6y001ugknxhdfmftg5"},{"post_id":"cj1ul0v670017gknxp7ggltiv","category_id":"cj1ul0v6v001qgknx4qc049xx","_id":"cj1ul0v71001ygknxx4fx3wvr"}],"PostTag":[{"post_id":"cj1ul0v460003gknxw5jf61to","tag_id":"cj1ul0v4s0008gknxv3zjto1a","_id":"cj1ul0v56000egknxss3h2oqt"},{"post_id":"cj1ul0v4g0005gknxdiv4ve3b","tag_id":"cj1ul0v4s0008gknxv3zjto1a","_id":"cj1ul0v5u000rgknxjrhhprgl"},{"post_id":"cj1ul0v4g0005gknxdiv4ve3b","tag_id":"cj1ul0v5g000igknxe61hr8ov","_id":"cj1ul0v5x000ugknxkvxw1j2i"},{"post_id":"cj1ul0v4t0009gknx352wqjcb","tag_id":"cj1ul0v5p000ogknxlmfynofz","_id":"cj1ul0v670015gknxtt274osq"},{"post_id":"cj1ul0v4t0009gknx352wqjcb","tag_id":"cj1ul0v5g000igknxe61hr8ov","_id":"cj1ul0v690018gknx4eyzma3a"},{"post_id":"cj1ul0v4x000agknxb83yelb7","tag_id":"cj1ul0v4s0008gknxv3zjto1a","_id":"cj1ul0v6f001cgknxy443cit7"},{"post_id":"cj1ul0v4x000agknxb83yelb7","tag_id":"cj1ul0v630011gknxu5axr64d","_id":"cj1ul0v6g001dgknxu146i53l"},{"post_id":"cj1ul0v50000bgknxd4lchxui","tag_id":"cj1ul0v4s0008gknxv3zjto1a","_id":"cj1ul0v6p001hgknxvcdtk7a6"},{"post_id":"cj1ul0v50000bgknxd4lchxui","tag_id":"cj1ul0v6e001agknxtg66r0xb","_id":"cj1ul0v6q001igknxncm3w1r4"},{"post_id":"cj1ul0v58000fgknx48usshk3","tag_id":"cj1ul0v4s0008gknxv3zjto1a","_id":"cj1ul0v6r001mgknx08pl1g93"},{"post_id":"cj1ul0v58000fgknx48usshk3","tag_id":"cj1ul0v6e001agknxtg66r0xb","_id":"cj1ul0v6t001ngknx2eyqtdod"},{"post_id":"cj1ul0v5e000hgknxujatdv8o","tag_id":"cj1ul0v4s0008gknxv3zjto1a","_id":"cj1ul0v6v001rgknxjy6poqry"},{"post_id":"cj1ul0v5e000hgknxujatdv8o","tag_id":"cj1ul0v6e001agknxtg66r0xb","_id":"cj1ul0v6w001sgknx5v5n7gs8"},{"post_id":"cj1ul0v5j000lgknxbk984d3y","tag_id":"cj1ul0v4s0008gknxv3zjto1a","_id":"cj1ul0v6z001vgknxzrfcweck"},{"post_id":"cj1ul0v5j000lgknxbk984d3y","tag_id":"cj1ul0v6e001agknxtg66r0xb","_id":"cj1ul0v70001wgknxf200ok6i"},{"post_id":"cj1ul0v5m000ngknxurn6a8dv","tag_id":"cj1ul0v4s0008gknxv3zjto1a","_id":"cj1ul0v71001zgknxs66glph6"},{"post_id":"cj1ul0v5m000ngknxurn6a8dv","tag_id":"cj1ul0v6e001agknxtg66r0xb","_id":"cj1ul0v710020gknx77svgawk"},{"post_id":"cj1ul0v5r000qgknx00noe06m","tag_id":"cj1ul0v70001xgknxot7lqr5h","_id":"cj1ul0v730023gknxvc1oj1pv"},{"post_id":"cj1ul0v5r000qgknx00noe06m","tag_id":"cj1ul0v720021gknxg2nag50n","_id":"cj1ul0v730024gknx7mzaz48g"},{"post_id":"cj1ul0v5v000tgknxp3evu0oa","tag_id":"cj1ul0v5p000ogknxlmfynofz","_id":"cj1ul0v740026gknxucgt76df"},{"post_id":"cj1ul0v5v000tgknxp3evu0oa","tag_id":"cj1ul0v720022gknx5ciln18g","_id":"cj1ul0v770027gknx0ph5vkiq"},{"post_id":"cj1ul0v5y000ygknx8fzey82d","tag_id":"cj1ul0v5p000ogknxlmfynofz","_id":"cj1ul0v780029gknxuocm1e8j"},{"post_id":"cj1ul0v5y000ygknx8fzey82d","tag_id":"cj1ul0v720022gknx5ciln18g","_id":"cj1ul0v79002agknxty5fbyur"},{"post_id":"cj1ul0v610010gknxt7yvupk6","tag_id":"cj1ul0v770028gknxpzno0w82","_id":"cj1ul0v7a002cgknxfzgfws5d"},{"post_id":"cj1ul0v640013gknx44w0nt1a","tag_id":"cj1ul0v79002bgknxxntuuvpj","_id":"cj1ul0v7b002egknx30gi2ddb"},{"post_id":"cj1ul0v670017gknxp7ggltiv","tag_id":"cj1ul0v7b002dgknxrxra0thh","_id":"cj1ul0v7c002fgknxjo01i7ma"}],"Tag":[{"name":"Java","_id":"cj1ul0v4s0008gknxv3zjto1a"},{"name":"Interview","_id":"cj1ul0v5g000igknxe61hr8ov"},{"name":"SQL","_id":"cj1ul0v5p000ogknxlmfynofz"},{"name":"NIO","_id":"cj1ul0v630011gknxu5axr64d"},{"name":"jvm","_id":"cj1ul0v6e001agknxtg66r0xb"},{"name":"MQ","_id":"cj1ul0v70001xgknxot7lqr5h"},{"name":"RabbitMQ","_id":"cj1ul0v720021gknxg2nag50n"},{"name":"ORACLE","_id":"cj1ul0v720022gknx5ciln18g"},{"name":"Markdown","_id":"cj1ul0v770028gknxpzno0w82"},{"name":"开发环境","_id":"cj1ul0v79002bgknxxntuuvpj"},{"name":"Algorithm","_id":"cj1ul0v7b002dgknxrxra0thh"}]}}